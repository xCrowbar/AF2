{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/signin/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport User from '../../SmartContracts/Users/Users';\nimport { HomeNav } from '../../component/Navbar/homeNav';\nimport { useNavigate } from 'react-router-dom';\nimport './SignIn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [errorMessage, SetErrorMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [checked, setChecked] = useState(false);\n  const [begin, setBegin] = useState();\n  const [end, setEnd] = useState();\n  let user = new User();\n  let prova = 9;\n  let navigate = useNavigate();\n\n  const maker = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"makerTime\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Specifica gli orari disponibili per la stampa (almeno 3 ore); richiederemo anche la tua posizione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"appt\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Inzio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"makerTimeInput\",\n      onChange: event => setBegin(event.target.value),\n      type: \"time\",\n      id: \"appt\",\n      name: \"appt\",\n      min: prova,\n      max: \"18:00\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"appt\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"makerTimeInput\",\n      onChange: event => setEnd(() => event.target.value),\n      type: \"time\",\n      id: \"appt\",\n      name: \"appt\",\n      min: \"09:00\",\n      max: \"18:00\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n\n  async function check() {\n    if (window.ethereum) {\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n    }\n  }\n  /*if(window.ethereum){\n      const accounts=await window.ethereum.request({ method: \"eth_requestAccounts\"} )\n      if(accounts.length>0)\n          navigate('/')\n      else\n          window.ethereum.request({ method: \"eth_requestAccounts\"} )*/\n\n\n  const msToTime = s => {\n    var ms = s % 1000;\n    s = (s - ms) / 1000;\n    var secs = s % 60;\n    s = (s - secs) / 60;\n    var mins = s % 60;\n    var hrs = (s - mins) / 60;\n    return hrs + ':' + mins + ':' + secs + '.' + ms;\n  };\n\n  const floatConvert = (begin, end) => {\n    let result = Date.parse(begin) - Date.parse(end);\n    console.log(result);\n    result = msToTime(result);\n    return result;\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      addCaller(position.coords.latitude, position.coords.longitude);\n    });\n  };\n\n  const checkError = async (latitude, longitude) => {\n    if (begin >= end) {\n      let prova = floatConvert(begin, end);\n      console.log(prova);\n      SetErrorMessage(\"The begin time cannot be greater or equal than the end time\");\n      setError(true);\n      return true;\n    }\n\n    check();\n    let isUser = user.isUser();\n\n    if (!isUser) {\n      SetErrorMessage(\"You are altready subscribed\");\n      setError(true);\n      return true;\n    } else if (latitude === undefined || longitude === undefined) {\n      SetErrorMessage(\"You must provide your location for signing in\");\n      setError(true);\n      return true;\n    } else if (username.match(/^[a-zA-Z0-9]+$/g) == null) {\n      setError(true);\n      SetErrorMessage(\"The inserted character are not valid\");\n      return true;\n    } else return false;\n  };\n\n  const addCaller = async (latitude, longitude) => {\n    let errors = checkError(latitude, longitude);\n    console.log(errors);\n    if (errors) return;\n    /*else\n        user.addCaller(username,{latitude:latitude,longitude:longitude}).then((error,res)=>{\n            if(error) {navigate('/',{replace:true});\n            }\n            else {alert(\"Error during the operation\");\n                    window.location.reload();\n                    }\n        })*/\n    //console.log(\"errore\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SignIn\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              onChange: event => setUsername(event.target.value),\n              autoComplete: \"off\",\n              required: true,\n              minLength: \"4\",\n              maxLength: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkboxes\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: () => setChecked(() => !checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 25\n                }, this), \"Air Maker?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), checked && maker]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SubmitButton\",\n            type: \"submit\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"TmBUzk5eC/GrgKKS4YFziUPwcpA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/Pages/signin/SignIn.js"],"names":["useState","User","HomeNav","useNavigate","SignIn","error","setError","errorMessage","SetErrorMessage","username","setUsername","checked","setChecked","begin","setBegin","end","setEnd","user","prova","navigate","maker","event","target","value","check","window","ethereum","request","method","msToTime","s","ms","secs","mins","hrs","floatConvert","result","Date","parse","console","log","handleSubmit","preventDefault","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","addCaller","checkError","isUser","undefined","match","errors"],"mappings":"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","sourcesContent":["import {  useState } from 'react';\nimport User from '../../SmartContracts/Users/Users' \nimport { HomeNav } from '../../component/Navbar/homeNav';\nimport { useNavigate } from 'react-router-dom';\nimport './SignIn.css';\n\n\nexport default function SignIn(){\n\n    const [error,setError]=useState(false)\n    const [errorMessage,SetErrorMessage]=useState('');\n    const [username,setUsername]=useState('');\n    const [checked,setChecked]=useState(false);\n    const [begin,setBegin]=useState();\n    const [end,setEnd]=useState()\n    let user=new User();\n    let prova=9;\n    let navigate=useNavigate();\n    const maker=\n        <div className='makerTime'>\n            <div className='info'>\n            <p>Specifica gli orari disponibili per la stampa (almeno 3 ore); richiederemo anche la tua posizione</p>\n            </div>\n            <label htmlFor=\"appt\"><p>Inzio</p></label>\n            <br/>\n            <input className=\"makerTimeInput\" onChange={(event)=>setBegin(event.target.value)} type=\"time\" id=\"appt\" name=\"appt\"min={prova} max=\"18:00\" required/>\n            <br/>\n            <label htmlFor=\"appt\"><p>Fine</p></label>\n            <br/>\n            <input className=\"makerTimeInput\" onChange={(event)=>setEnd(()=>event.target.value)} type=\"time\" id=\"appt\" name=\"appt\"min=\"09:00\" max=\"18:00\" required/>\n        </div>\n\n\n\n    async function check (){\n\n        if (window.ethereum) {\n            await window.ethereum.request({\n              method: \"eth_requestAccounts\",\n            });                \n\n        }\n\n\n    }\n\n\n            /*if(window.ethereum){\n                const accounts=await window.ethereum.request({ method: \"eth_requestAccounts\"} )\n                if(accounts.length>0)\n                    navigate('/')\n                else\n                    window.ethereum.request({ method: \"eth_requestAccounts\"} )*/\n    const msToTime=(s)=> {\n        var ms = s % 1000;\n        s = (s - ms) / 1000;\n        var secs = s % 60;\n        s = (s - secs) / 60;\n        var mins = s % 60;\n        var hrs = (s - mins) / 60;\n\n        return hrs + ':' + mins + ':' + secs + '.' + ms;\n        }\n\n    const floatConvert=(begin,end)=>{\n        let result=Date.parse(begin)-Date.parse(end);\n        console.log(result)\n        result=msToTime(result);\n        return result;\n\n    }\n\n    const handleSubmit= async(event)=>{\n        event.preventDefault();\n        navigator.geolocation.getCurrentPosition((position)=> {\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n            addCaller(position.coords.latitude,position.coords.longitude)\n        });\n\n\n    }\n\n    const checkError=async(latitude,longitude)=>{\n        \n        if(begin>=end){\n            let prova=floatConvert(begin,end);\n            console.log(prova);\n            SetErrorMessage(\"The begin time cannot be greater or equal than the end time\");\n            setError(true);\n            return true;\n\n        }\n\n\n        check();\n        let isUser=user.isUser();\n        if (!isUser){\n            SetErrorMessage(\"You are altready subscribed\");\n            setError(true);\n            return true;\n        }\n        else if(latitude===undefined||longitude===undefined){\n            SetErrorMessage(\"You must provide your location for signing in\");\n            setError(true); \n            return true;\n        }\n        else if(username.match( /^[a-zA-Z0-9]+$/g)==null){\n            setError(true);\n            SetErrorMessage(\"The inserted character are not valid\");\n            return true;\n        }\n        else return false;\n\n    }\n    const addCaller=async (latitude,longitude)=>{\n        let errors=checkError(latitude,longitude);\n        console.log(errors)\n        if (errors)\n            return;\n        /*else\n            user.addCaller(username,{latitude:latitude,longitude:longitude}).then((error,res)=>{\n                if(error) {navigate('/',{replace:true});\n                }\n                else {alert(\"Error during the operation\");\n                        window.location.reload();\n                        }\n            })*/\n            //console.log(\"errore\");\n    }       \n\n\n    return (\n\n        <div>\n            <HomeNav/>\n            <div className='sign'>\n            <h1>Sign In</h1>\n            <div className='SignIn'>\n            <form  onSubmit={handleSubmit}>\n                <label>\n                    <p>Username</p>\n                    <input type=\"text\" name=\"username\" onChange={event => setUsername(event.target.value)}autoComplete=\"off\" required minLength=\"4\" maxLength=\"10\"></input>\n                </label><br/>\n\n                <div className='checkboxes'>\n                <p><label>\n                        <input type=\"checkbox\" onChange={()=>setChecked(()=>!checked)}/>\n                        Air Maker?\n                    </label></p>\n              { checked && maker}\n            </div>\n                <button className=\"SubmitButton\" type='submit'>Sign in</button>\n\n\n\n            </form>\n                { error && <p className='error'>{errorMessage}</p>}\n            </div>\n\n        </div>\n        </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}