{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function timeoutWith(due, withObservable, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n\n  return function (source) {\n    var absoluteTimeout = isDate(due);\n    var waitFor = absoluteTimeout ? +due - scheduler.now() : Math.abs(due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nvar TimeoutWithOperator = /*@__PURE__*/function () {\n  function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n    this.waitFor = waitFor;\n    this.absoluteTimeout = absoluteTimeout;\n    this.withObservable = withObservable;\n    this.scheduler = scheduler;\n  }\n\n  TimeoutWithOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n  };\n\n  return TimeoutWithOperator;\n}();\n\nvar TimeoutWithSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TimeoutWithSubscriber, _super);\n\n  function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.absoluteTimeout = absoluteTimeout;\n    _this.waitFor = waitFor;\n    _this.withObservable = withObservable;\n    _this.scheduler = scheduler;\n\n    _this.scheduleTimeout();\n\n    return _this;\n  }\n\n  TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n    var withObservable = subscriber.withObservable;\n\n    subscriber._unsubscribeAndRecycle();\n\n    subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n  };\n\n  TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n    var action = this.action;\n\n    if (action) {\n      this.action = action.schedule(this, this.waitFor);\n    } else {\n      this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n    }\n  };\n\n  TimeoutWithSubscriber.prototype._next = function (value) {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n\n    _super.prototype._next.call(this, value);\n  };\n\n  TimeoutWithSubscriber.prototype._unsubscribe = function () {\n    this.action = undefined;\n    this.scheduler = null;\n    this.withObservable = null;\n  };\n\n  return TimeoutWithSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAT,MAAsB,OAAtB;AAEA,SAASC,KAAT,QAAiB,oBAAjB;AAEA,SAASC,MAAT,QAAS,gBAAT;AA2DA,SAAMC,qBAAN,EAAoDC,cAApD,EACoEC,qBADpE,QAEkE,mBAFlE;OAEkC,0CAAgCC,SAAhC,EAAgC;AAChE,eAAO,KAAC,KAAqB,CAA7B,EAA6B;AAC3BA,aAAI,QAAJ;;;SAEA,UAAaC,MAAb,EAAmB;AACnB;AACH;AAED;AACE;;;uBACoB,4BAAwB;WACxBC,8CAAoCC;AACpC,mBAASC,OAAT;AACnB;AAED;AACE,qBAAcJ,SAAd;AAGD;;AACHE,gCAACG,IAAD,GAAC;AAAA;AAOD,GAPA;;AAO0C;CAjBpB;;yBA0BlB,gBAAM,UAAYC,MAAZ,EAEP;SANmB;;WACAC,sBAAeC;AACf,kDAAoC,IAApC;;AACAC;AAElBA,SAAI,CAACL,OAAL,GAAKA,OAAL;;AACDK;;AAEcA;;AACL;;;uBAEO,mBAAe,UAAgBC,UAAhB,EAAoB;AACnD;;AAEOA;;AACEA,iCAAgB,uDAAhB;;;uBAOK,CAAmDC,UAAOC,kBAAoB,YAAU;QACpGC;;gBAAM;AACL,WAAKA,MAAL,GAAcA,MAAM,SAAN,CAA8D,IAA9D,EAA8D,KAAUT,OAAxE,CAAd;AAGD,WACF;AAES,4CAAVU,QAAU,CAAcP,qCAAd,EAAc,YAAd,EAAc,IAAd;AACR;;;uBAEC;AACD,+BAAW;AACZ;AAGD;;AACED,UAAK,UAAL,CAAcS,KAAd,CAAuBV,IAAvB,CAAwB,IAAxB,EAAwBW,KAAxB;;;uBAEK,WAAuBC;AAC7B;AACH;AAhD0C,0BAgDzC,IAhDyC;;;;CAShC","names":["tslib_1","async","isDate","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","scheduler","source","TimeoutWithOperator","withObservable","waitFor","call","_super","TimeoutWithSubscriber","destination","_this","subscriber","prototype","scheduleTimeout","action","schedule","_next","value","_unsubscribe"],"sources":["../../../src/internal/operators/timeoutWith.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}