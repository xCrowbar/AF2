{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport MetamaskLogin from \"../metamaskLogin/metamaskLogin\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [account, setAccount] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const navigate = useNavigate();\n\n  async function checkAccount() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      console.log(account);\n      return accounts[0];\n    }\n  }\n\n  async function result() {\n    checkAccount(); //console.log(account)\n  }\n\n  useEffect(() => {\n    setAccount(checkAccount());\n  }, []);\n  if (loaded) return {\n    children\n  };else navigate('login');\n};\n\n_s(UserContextProvider, \"PodMOn4u9fZT/OS0fk/2xM3lmJw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","createContext","useNavigate","Web3","MetamaskLogin","UserContext","UserContextProvider","children","account","setAccount","loaded","setLoaded","navigate","checkAccount","window","ethereum","accounts","request","method","console","log","result"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,aAAnC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,OAAO,MAAMC,WAAW,gBAACJ,aAAa,CAAC,EAAD,CAA/B;AAEP,OAAO,MAAMK,mBAAmB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC5C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMY,QAAQ,GAACV,WAAW,EAA1B;;AAEC,iBAAeW,YAAf,GAA6B;AACzB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMC,QAAQ,GAAE,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,aAAOQ,QAAQ,CAAC,CAAD,CAAf;AAGH;AACJ;;AACD,iBAAeK,MAAf,GAAwB;AACpBR,IAAAA,YAAY,GADQ,CAEpB;AAEH;;AAEDd,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,UAAU,CAACI,YAAY,EAAb,CAAV;AAEF,GAHO,EAGN,EAHM,CAAT;AAIA,MAAGH,MAAH,EACI,OAAQ;AAACH,IAAAA;AAAD,GAAR,CADJ,KAEKK,QAAQ,CAAC,OAAD,CAAR;AACR,CA3BM;;GAAMN,mB;UAGKJ,W;;;KAHLI,mB","sourcesContent":["import React, { useEffect,useState,createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport MetamaskLogin from \"../metamaskLogin/metamaskLogin\";\n\nexport const UserContext=createContext({});\n\nexport const UserContextProvider=({children})=>{\n   const [account, setAccount] = useState();\n   const [loaded, setLoaded] = useState(false)\n   const navigate=useNavigate();\n\n    async function checkAccount(){\n        if (window.ethereum) {\n            const accounts= await window.ethereum.request({ method: 'eth_accounts' });\n            console.log(account)\n            return accounts[0];\n\n           \n        }\n    }\n    async function result (){\n        checkAccount();\n        //console.log(account)\n\n    } \n\n    useEffect(()=>{\n        setAccount(checkAccount());\n\n     },[])\n    if(loaded)\n        return ({children})\n    else navigate('login')\n}\n\n"]},"metadata":{},"sourceType":"module"}