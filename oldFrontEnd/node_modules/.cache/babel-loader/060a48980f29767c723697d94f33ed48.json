{"ast":null,"code":"var self = self || {}; // File:src/Three.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nvar THREE = {\n  REVISION: '72'\n}; //\n\nif (typeof define === 'function' && define.amd) {\n  define('three', THREE);\n} else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n  module.exports = THREE;\n} // polyfills\n\n\nif (self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined) {\n  // Missing in Android stock browser.\n  (function () {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (var x = 0; x < vendors.length && !self.requestAnimationFrame; ++x) {\n      self.requestAnimationFrame = self[vendors[x] + 'RequestAnimationFrame'];\n      self.cancelAnimationFrame = self[vendors[x] + 'CancelAnimationFrame'] || self[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (self.requestAnimationFrame === undefined && self.setTimeout !== undefined) {\n      self.requestAnimationFrame = function (callback) {\n        var currTime = Date.now(),\n            timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = self.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n\n    if (self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined) {\n      self.cancelAnimationFrame = function (id) {\n        self.clearTimeout(id);\n      };\n    }\n  })();\n}\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : +x;\n  };\n}\n\nif (Function.prototype.name === undefined && Object.defineProperty !== undefined) {\n  // Missing in IE9-11.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n    }\n  });\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\n\nTHREE.MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n}; // GL STATE CONSTANTS\n\nTHREE.CullFaceNone = 0;\nTHREE.CullFaceBack = 1;\nTHREE.CullFaceFront = 2;\nTHREE.CullFaceFrontBack = 3;\nTHREE.FrontFaceDirectionCW = 0;\nTHREE.FrontFaceDirectionCCW = 1; // SHADOWING TYPES\n\nTHREE.BasicShadowMap = 0;\nTHREE.PCFShadowMap = 1;\nTHREE.PCFSoftShadowMap = 2; // MATERIAL CONSTANTS\n// side\n\nTHREE.FrontSide = 0;\nTHREE.BackSide = 1;\nTHREE.DoubleSide = 2; // shading\n\nTHREE.FlatShading = 1;\nTHREE.SmoothShading = 2; // colors\n\nTHREE.NoColors = 0;\nTHREE.FaceColors = 1;\nTHREE.VertexColors = 2; // blending modes\n\nTHREE.NoBlending = 0;\nTHREE.NormalBlending = 1;\nTHREE.AdditiveBlending = 2;\nTHREE.SubtractiveBlending = 3;\nTHREE.MultiplyBlending = 4;\nTHREE.CustomBlending = 5; // custom blending equations\n// (numbers start from 100 not to clash with other\n// mappings to OpenGL constants defined in Texture.js)\n\nTHREE.AddEquation = 100;\nTHREE.SubtractEquation = 101;\nTHREE.ReverseSubtractEquation = 102;\nTHREE.MinEquation = 103;\nTHREE.MaxEquation = 104; // custom blending destination factors\n\nTHREE.ZeroFactor = 200;\nTHREE.OneFactor = 201;\nTHREE.SrcColorFactor = 202;\nTHREE.OneMinusSrcColorFactor = 203;\nTHREE.SrcAlphaFactor = 204;\nTHREE.OneMinusSrcAlphaFactor = 205;\nTHREE.DstAlphaFactor = 206;\nTHREE.OneMinusDstAlphaFactor = 207; // custom blending source factors\n//THREE.ZeroFactor = 200;\n//THREE.OneFactor = 201;\n//THREE.SrcAlphaFactor = 204;\n//THREE.OneMinusSrcAlphaFactor = 205;\n//THREE.DstAlphaFactor = 206;\n//THREE.OneMinusDstAlphaFactor = 207;\n\nTHREE.DstColorFactor = 208;\nTHREE.OneMinusDstColorFactor = 209;\nTHREE.SrcAlphaSaturateFactor = 210; // depth modes\n\nTHREE.NeverDepth = 0;\nTHREE.AlwaysDepth = 1;\nTHREE.LessDepth = 2;\nTHREE.LessEqualDepth = 3;\nTHREE.EqualDepth = 4;\nTHREE.GreaterEqualDepth = 5;\nTHREE.GreaterDepth = 6;\nTHREE.NotEqualDepth = 7; // TEXTURE CONSTANTS\n\nTHREE.MultiplyOperation = 0;\nTHREE.MixOperation = 1;\nTHREE.AddOperation = 2; // Mapping modes\n\nTHREE.UVMapping = 300;\nTHREE.CubeReflectionMapping = 301;\nTHREE.CubeRefractionMapping = 302;\nTHREE.EquirectangularReflectionMapping = 303;\nTHREE.EquirectangularRefractionMapping = 304;\nTHREE.SphericalReflectionMapping = 305; // Wrapping modes\n\nTHREE.RepeatWrapping = 1000;\nTHREE.ClampToEdgeWrapping = 1001;\nTHREE.MirroredRepeatWrapping = 1002; // Filters\n\nTHREE.NearestFilter = 1003;\nTHREE.NearestMipMapNearestFilter = 1004;\nTHREE.NearestMipMapLinearFilter = 1005;\nTHREE.LinearFilter = 1006;\nTHREE.LinearMipMapNearestFilter = 1007;\nTHREE.LinearMipMapLinearFilter = 1008; // Data types\n\nTHREE.UnsignedByteType = 1009;\nTHREE.ByteType = 1010;\nTHREE.ShortType = 1011;\nTHREE.UnsignedShortType = 1012;\nTHREE.IntType = 1013;\nTHREE.UnsignedIntType = 1014;\nTHREE.FloatType = 1015;\nTHREE.HalfFloatType = 1025; // Pixel types\n//THREE.UnsignedByteType = 1009;\n\nTHREE.UnsignedShort4444Type = 1016;\nTHREE.UnsignedShort5551Type = 1017;\nTHREE.UnsignedShort565Type = 1018; // Pixel formats\n\nTHREE.AlphaFormat = 1019;\nTHREE.RGBFormat = 1020;\nTHREE.RGBAFormat = 1021;\nTHREE.LuminanceFormat = 1022;\nTHREE.LuminanceAlphaFormat = 1023; // THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\n// DDS / ST3C Compressed texture formats\n\nTHREE.RGB_S3TC_DXT1_Format = 2001;\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\nTHREE.RGBA_S3TC_DXT5_Format = 2004; // PVRTC compressed texture formats\n\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103; // DEPRECATED\n\nTHREE.Projector = function () {\n  console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n  this.projectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .projectVector() is now vector.project().');\n    vector.project(camera);\n  };\n\n  this.unprojectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n    vector.unproject(camera);\n  };\n\n  this.pickingRay = function (vector, camera) {\n    console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n  };\n};\n\nTHREE.CanvasRenderer = function () {\n  console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n  this.domElement = document.createElement('canvas');\n\n  this.clear = function () {};\n\n  this.render = function () {};\n\n  this.setClearColor = function () {};\n\n  this.setSize = function () {};\n}; // File:src/math/Color.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Color = function (color) {\n  if (arguments.length === 3) {\n    return this.setRGB(arguments[0], arguments[1], arguments[2]);\n  }\n\n  return this.set(color);\n};\n\nTHREE.Color.prototype = {\n  constructor: THREE.Color,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function (value) {\n    if (value instanceof THREE.Color) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setHex: function (hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function (r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function () {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n\n    return function (h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = THREE.Math.euclideanModulo(h, 1);\n      s = THREE.Math.clamp(s, 0, 1);\n      l = THREE.Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n  }(),\n  setStyle: function (style) {\n    var parseAlpha = function (strAlpha) {\n      var alpha = parseFloat(strAlpha);\n\n      if (alpha < 1) {\n        console.warn('THREE.Color: Alpha component of color ' + style + ' will be ignored.');\n      }\n\n      return alpha;\n    };\n\n    var m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      var color;\n      var name = m[1];\n      var components = m[2];\n\n      switch (name) {\n        case 'rgb':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec(components)) {\n            // rgb(255,0,0)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec(components)) {\n            // rgb(100%,0%,0%)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            return this;\n          }\n\n          break;\n\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(components)) {\n            // rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            parseAlpha(color[4]);\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(components)) {\n            // rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            parseAlpha(color[4]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec(components)) {\n            // hsl(120,50%,50%)\n            var h = parseFloat(color[1]);\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(components)) {\n            // hsla(120,50%,50%,0.5)\n            var h = parseFloat(color[1]);\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            parseAlpha(color[4]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      var hex = m[1];\n      var size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      // color keywords\n      var hex = THREE.ColorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n    }\n\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.r, this.g, this.b);\n  },\n  copy: function (color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  },\n  copyLinearToGamma: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  },\n  convertGammaToLinear: function () {\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  },\n  convertLinearToGamma: function () {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  },\n  getHex: function () {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function () {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function (optionalTarget) {\n    // h,s,l ranges are in 0.0 - 1.0\n    var hsl = optionalTarget || {\n      h: 0,\n      s: 0,\n      l: 0\n    };\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  },\n  getStyle: function () {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function (h, s, l) {\n    var hsl = this.getHSL();\n    hsl.h += h;\n    hsl.s += s;\n    hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  },\n  add: function (color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function (color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function (s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  multiply: function (color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function (color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function (c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function (array) {\n    this.r = array[0];\n    this.g = array[1];\n    this.b = array[2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n};\nTHREE.ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n}; // File:src/math/Quaternion.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Quaternion = function (x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n};\n\nTHREE.Quaternion.prototype = {\n  constructor: THREE.Quaternion,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get w() {\n    return this._w;\n  },\n\n  set w(value) {\n    this._w = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  },\n  copy: function (quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function (euler, update) {\n    if (euler instanceof THREE.Euler === false) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    } // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n\n    var c1 = Math.cos(euler._x / 2);\n    var c2 = Math.cos(euler._y / 2);\n    var c3 = Math.cos(euler._z / 2);\n    var s1 = Math.sin(euler._x / 2);\n    var s2 = Math.sin(euler._y / 2);\n    var s3 = Math.sin(euler._z / 2);\n    var order = euler.order;\n\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function (axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      this.normalize();\n      return this;\n    };\n  }(),\n  inverse: function () {\n    this.conjugate().normalize();\n    return this;\n  },\n  conjugate: function () {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function (v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function () {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function () {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function () {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function (q, p) {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  multiplyQuaternions: function (a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  },\n  slerp: function (qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var halfTheta = Math.acos(cosHalfTheta);\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function (quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n};\n\nTHREE.Quaternion.slerp = function (qa, qb, qm, t) {\n  return qm.copy(qa).slerp(qb, t);\n}; // File:src/math/Vector2.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\n\nTHREE.Vector2 = function (x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nTHREE.Vector2.prototype = {\n  constructor: THREE.Vector2,\n  set: function (x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function (v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.x *= s;\n    this.y *= s;\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.x *= invScalar;\n      this.y *= invScalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  },\n  min: function (v) {\n    if (this.x > v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n      this.y = v.y;\n    }\n\n    return this;\n  },\n  max: function (v) {\n    if (this.x < v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n      this.y = v.y;\n    }\n\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    if (this.x < min.x) {\n      this.x = min.x;\n    } else if (this.x > max.x) {\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n      this.y = min.y;\n    } else if (this.y > max.y) {\n      this.y = max.y;\n    }\n\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector2();\n        max = new THREE.Vector2();\n      }\n\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  setLength: function (l) {\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    return this;\n  }\n}; // File:src/math/Vector3.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Vector3 = function (x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nTHREE.Vector3.prototype = {\n  constructor: THREE.Vector3,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion;\n    return function applyEuler(euler) {\n      if (euler instanceof THREE.Euler === false) {\n        console.error('THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromEuler(euler));\n      return this;\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion;\n    return function applyAxisAngle(axis, angle) {\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      return this;\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n    return this;\n  },\n  applyProjection: function (m) {\n    // input: THREE.Matrix4 projection matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix;\n    return function project(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix;\n    return function unproject(camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    this.normalize();\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  min: function (v) {\n    if (this.x > v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z > v.z) {\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  max: function (v) {\n    if (this.x < v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z < v.z) {\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    if (this.x < min.x) {\n      this.x = min.x;\n    } else if (this.x > max.x) {\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n      this.y = min.y;\n    } else if (this.y > max.y) {\n      this.y = max.y;\n    }\n\n    if (this.z < min.z) {\n      this.z = min.z;\n    } else if (this.z > max.z) {\n      this.z = max.z;\n    }\n\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector3();\n        max = new THREE.Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (l) {\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function () {\n    var v1, dot;\n    return function projectOnVector(vector) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(vector).normalize();\n      dot = this.dot(v1);\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n  projectOnPlane: function () {\n    var v1;\n    return function projectOnPlane(planeNormal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1;\n    return function reflect(normal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / (this.length() * v.length()); // clamp, to handle numerical problems\n\n    return Math.acos(THREE.Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x;\n    var dy = this.y - v.y;\n    var dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setEulerFromRotationMatrix: function (m, order) {\n    console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n  },\n  setEulerFromQuaternion: function (q, order) {\n    console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n  },\n  getPositionFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n    return this.setFromMatrixPosition(m);\n  },\n  getScaleFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n    return this.setFromMatrixScale(m);\n  },\n  getColumnFromMatrix: function (index, matrix) {\n    console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n    return this.setFromMatrixColumn(index, matrix);\n  },\n  setFromMatrixPosition: function (m) {\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n    return this;\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    var sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    var sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (index, matrix) {\n    var offset = index * 4;\n    var me = matrix.elements;\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    return this;\n  }\n}; // File:src/math/Vector4.js\n\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Vector4 = function (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nTHREE.Vector4.prototype = {\n  constructor: THREE.Vector4,\n  set: function (x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setW: function (w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n      this.w *= invScalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    }\n\n    return this;\n  },\n  setAxisAngleFromQuaternion: function (q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function (v) {\n    if (this.x > v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z > v.z) {\n      this.z = v.z;\n    }\n\n    if (this.w > v.w) {\n      this.w = v.w;\n    }\n\n    return this;\n  },\n  max: function (v) {\n    if (this.x < v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z < v.z) {\n      this.z = v.z;\n    }\n\n    if (this.w < v.w) {\n      this.w = v.w;\n    }\n\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    if (this.x < min.x) {\n      this.x = min.x;\n    } else if (this.x > max.x) {\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n      this.y = min.y;\n    } else if (this.y > max.y) {\n      this.y = max.y;\n    }\n\n    if (this.z < min.z) {\n      this.z = min.z;\n    } else if (this.z > max.z) {\n      this.z = max.z;\n    }\n\n    if (this.w < min.w) {\n      this.w = min.w;\n    } else if (this.w > max.w) {\n      this.w = max.w;\n    }\n\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector4();\n        max = new THREE.Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (l) {\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  fromAttribute: function (attribute, index, offset) {\n    if (offset === undefined) offset = 0;\n    index = index * attribute.itemSize + offset;\n    this.x = attribute.array[index];\n    this.y = attribute.array[index + 1];\n    this.z = attribute.array[index + 2];\n    this.w = attribute.array[index + 3];\n    return this;\n  }\n}; // File:src/math/Euler.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Euler = function (x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || THREE.Euler.DefaultOrder;\n};\n\nTHREE.Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nTHREE.Euler.DefaultOrder = 'XYZ';\nTHREE.Euler.prototype = {\n  constructor: THREE.Euler,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get order() {\n    return this._order;\n  },\n\n  set order(value) {\n    this._order = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function (euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m, order, update) {\n    var clamp = THREE.Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function () {\n    var matrix;\n    return function (q, order, update) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.makeRotationFromQuaternion(q);\n      this.setFromRotationMatrix(matrix, order, update);\n      return this;\n    };\n  }(),\n  setFromVector3: function (v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new THREE.Quaternion();\n    return function (newOrder) {\n      q.setFromEuler(this);\n      this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function (euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function (array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function (optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new THREE.Vector3(this._x, this._y, this._z);\n    }\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n}; // File:src/math/Line3.js\n\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Line3 = function (start, end) {\n  this.start = start !== undefined ? start : new THREE.Vector3();\n  this.end = end !== undefined ? end : new THREE.Vector3();\n};\n\nTHREE.Line3.prototype = {\n  constructor: THREE.Line3,\n  set: function (start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n  },\n  delta: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.end, this.start);\n  },\n  distanceSq: function () {\n    return this.start.distanceToSquared(this.end);\n  },\n  distance: function () {\n    return this.start.distanceTo(this.end);\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  closestPointToPointParameter: function () {\n    var startP = new THREE.Vector3();\n    var startEnd = new THREE.Vector3();\n    return function (point, clampToLine) {\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n      var startEnd2 = startEnd.dot(startEnd);\n      var startEnd_startP = startEnd.dot(startP);\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = THREE.Math.clamp(t, 0, 1);\n      }\n\n      return t;\n    };\n  }(),\n  closestPointToPoint: function (point, clampToLine, optionalTarget) {\n    var t = this.closestPointToPointParameter(point, clampToLine);\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  applyMatrix4: function (matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  },\n  equals: function (line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n}; // File:src/math/Box2.js\n\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Box2 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector2(Infinity, Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector2(-Infinity, -Infinity);\n};\n\nTHREE.Box2.prototype = {\n  constructor: THREE.Box2,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector2();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  },\n  empty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector2();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  },\n  isIntersectionBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector2();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Box3.js\n\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Box3 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector3(Infinity, Infinity, Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n};\n\nTHREE.Box3.prototype = {\n  constructor: THREE.Box3,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector3();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    var v1 = new THREE.Vector3();\n    return function (object) {\n      var scope = this;\n      object.updateMatrixWorld(true);\n      this.makeEmpty();\n      object.traverse(function (node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry instanceof THREE.Geometry) {\n            var vertices = geometry.vertices;\n\n            for (var i = 0, il = vertices.length; i < il; i++) {\n              v1.copy(vertices[i]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          } else if (geometry instanceof THREE.BufferGeometry && geometry.attributes['position'] !== undefined) {\n            var positions = geometry.attributes['position'].array;\n\n            for (var i = 0, il = positions.length; i < il; i += 3) {\n              v1.set(positions[i], positions[i + 1], positions[i + 2]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          }\n        }\n      });\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = this.min.z = Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  empty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector3();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  isIntersectionBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Sphere();\n      result.center = this.center();\n      result.radius = this.size(v1).length() * 0.5;\n      return result;\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function () {\n    var points = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n    return function (matrix) {\n      // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n      points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n      points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n      points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n      points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n      points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n      points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n      points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n      points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n      this.makeEmpty();\n      this.setFromPoints(points);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}; // File:src/math/Matrix3.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Matrix3 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix3.prototype = {\n  constructor: THREE.Matrix3,\n  set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[3] = n12;\n    te[6] = n13;\n    te[1] = n21;\n    te[4] = n22;\n    te[7] = n23;\n    te[2] = n31;\n    te[5] = n32;\n    te[8] = n33;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n    return this;\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n    return vector.applyMatrix3(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.warn('THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix3(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix3(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function () {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function (matrix, throwOnInvertible) {\n    // input: THREE.Matrix4\n    // ( based on http://code.google.com/p/webgl-mjs/ )\n    var me = matrix.elements;\n    var te = this.elements;\n    te[0] = me[10] * me[5] - me[6] * me[9];\n    te[1] = -me[10] * me[1] + me[2] * me[9];\n    te[2] = me[6] * me[1] - me[2] * me[5];\n    te[3] = -me[10] * me[4] + me[6] * me[8];\n    te[4] = me[10] * me[0] - me[2] * me[8];\n    te[5] = -me[6] * me[0] + me[2] * me[4];\n    te[6] = me[9] * me[4] - me[5] * me[8];\n    te[7] = -me[9] * me[0] + me[1] * me[8];\n    te[8] = me[5] * me[0] - me[1] * me[4];\n    var det = me[0] * te[0] + me[1] * te[3] + me[2] * te[6]; // no inverse\n\n    if (det === 0) {\n      var msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnInvertible || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      this.identity();\n      return this;\n    }\n\n    this.multiplyScalar(1.0 / det);\n    return this;\n  },\n  transpose: function () {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  },\n  getNormalMatrix: function (m) {\n    // input: THREE.Matrix4\n    this.getInverse(m).transpose();\n    return this;\n  },\n  transposeIntoArray: function (r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8]];\n  }\n}; // File:src/math/Matrix4.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\nTHREE.Matrix4 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix4.prototype = {\n  constructor: THREE.Matrix4,\n  set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new THREE.Matrix4().fromArray(this.elements);\n  },\n  copy: function (m) {\n    this.elements.set(m.elements);\n    return this;\n  },\n  extractPosition: function (m) {\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n    return this.copyPosition(m);\n  },\n  copyPosition: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractBasis: function (xAxis, yAxis, zAxis) {\n    var te = this.elements;\n    xAxis.set(te[0], te[1], te[2]);\n    yAxis.set(te[4], te[5], te[6]);\n    zAxis.set(te[8], te[9], te[10]);\n    return this;\n  },\n  makeBasis: function (xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  extractRotation: function () {\n    var v1;\n    return function (m) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.set(me[0], me[1], me[2]).length();\n      var scaleY = 1 / v1.set(me[4], me[5], me[6]).length();\n      var scaleZ = 1 / v1.set(me[8], me[9], me[10]).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function (euler) {\n    if (euler instanceof THREE.Euler === false) {\n      console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // last column\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  setRotationFromQuaternion: function (q) {\n    console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n    return this.makeRotationFromQuaternion(q);\n  },\n  makeRotationFromQuaternion: function (q) {\n    var te = this.elements;\n    var x = q.x,\n        y = q.y,\n        z = q.z,\n        w = q.w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy); // last column\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  lookAt: function () {\n    var x, y, z;\n    return function (eye, target, up) {\n      if (x === undefined) x = new THREE.Vector3();\n      if (y === undefined) y = new THREE.Vector3();\n      if (z === undefined) z = new THREE.Vector3();\n      var te = this.elements;\n      z.subVectors(eye, target).normalize();\n\n      if (z.length() === 0) {\n        z.z = 1;\n      }\n\n      x.crossVectors(up, z).normalize();\n\n      if (x.length() === 0) {\n        z.x += 0.0001;\n        x.crossVectors(up, z).normalize();\n      }\n\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function (m, n) {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyToArray: function (a, b, r) {\n    var te = this.elements;\n    this.multiplyMatrices(a, b);\n    r[0] = te[0];\n    r[1] = te[1];\n    r[2] = te[2];\n    r[3] = te[3];\n    r[4] = te[4];\n    r[5] = te[5];\n    r[6] = te[6];\n    r[7] = te[7];\n    r[8] = te[8];\n    r[9] = te[9];\n    r[10] = te[10];\n    r[11] = te[11];\n    r[12] = te[12];\n    r[13] = te[13];\n    r[14] = te[14];\n    r[15] = te[15];\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.');\n    return vector.applyProjection(this);\n  },\n  multiplyVector4: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.warn('THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  },\n  applyToVector3Array: function () {\n    var v1;\n    return function (array, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n        v1.fromArray(array, j);\n        v1.applyMatrix4(this);\n        v1.toArray(array, j);\n      }\n\n      return array;\n    };\n  }(),\n  applyToBuffer: function () {\n    var v1;\n    return function applyToBuffer(buffer, offset, length) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = buffer.length / buffer.itemSize;\n\n      for (var i = 0, j = offset; i < length; i++, j++) {\n        v1.x = buffer.getX(j);\n        v1.y = buffer.getY(j);\n        v1.z = buffer.getZ(j);\n        v1.applyMatrix4(this);\n        buffer.setXYZ(v1.x, v1.y, v1.z);\n      }\n\n      return buffer;\n    };\n  }(),\n  rotateAxis: function (v) {\n    console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n    v.transformDirection(this);\n  },\n  crossVector: function (vector) {\n    console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  determinant: function () {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function () {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  },\n  getPosition: function () {\n    var v1;\n    return function () {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      var te = this.elements;\n      return v1.set(te[12], te[13], te[14]);\n    };\n  }(),\n  setPosition: function (v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function (m, throwOnInvertible) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements;\n    var me = m.elements;\n    var n11 = me[0],\n        n12 = me[4],\n        n13 = me[8],\n        n14 = me[12];\n    var n21 = me[1],\n        n22 = me[5],\n        n23 = me[9],\n        n24 = me[13];\n    var n31 = me[2],\n        n32 = me[6],\n        n33 = me[10],\n        n34 = me[14];\n    var n41 = me[3],\n        n42 = me[7],\n        n43 = me[11],\n        n44 = me[15];\n    te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n    te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n    te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n    te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n    te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n    te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n    te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n    te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n    te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n    te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n    te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n    te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n    te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n    te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n    te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n    var det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnInvertible || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      this.identity();\n      return this;\n    }\n\n    this.multiplyScalar(1 / det);\n    return this;\n  },\n  translate: function (v) {\n    console.error('THREE.Matrix4: .translate() has been removed.');\n  },\n  rotateX: function (angle) {\n    console.error('THREE.Matrix4: .rotateX() has been removed.');\n  },\n  rotateY: function (angle) {\n    console.error('THREE.Matrix4: .rotateY() has been removed.');\n  },\n  rotateZ: function (angle) {\n    console.error('THREE.Matrix4: .rotateZ() has been removed.');\n  },\n  rotateByAxis: function (axis, angle) {\n    console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n  },\n  scale: function (v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function () {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, Math.max(scaleYSq, scaleZSq)));\n  },\n  makeTranslation: function (x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function (x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function (position, quaternion, scale) {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  },\n  decompose: function () {\n    var vector, matrix;\n    return function (position, quaternion, scale) {\n      if (vector === undefined) vector = new THREE.Vector3();\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n\n      if (det < 0) {\n        sx = -sx;\n      }\n\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makeFrustum: function (left, right, bottom, top, near, far) {\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makePerspective: function (fov, aspect, near, far) {\n    var ymax = near * Math.tan(THREE.Math.degToRad(fov * 0.5));\n    var ymin = -ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  },\n  makeOrthographic: function (left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = right - left;\n    var h = top - bottom;\n    var p = far - near;\n    var x = (right + left) / w;\n    var y = (top + bottom) / h;\n    var z = (far + near) / p;\n    te[0] = 2 / w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 / h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 / p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8], te[9], te[10], te[11], te[12], te[13], te[14], te[15]];\n  }\n}; // File:src/math/Ray.js\n\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Ray = function (origin, direction) {\n  this.origin = origin !== undefined ? origin : new THREE.Vector3();\n  this.direction = direction !== undefined ? direction : new THREE.Vector3();\n};\n\nTHREE.Ray.prototype = {\n  constructor: THREE.Ray,\n  set: function (origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  recast: function () {\n    var v1 = new THREE.Vector3();\n    return function (t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(point, this.origin);\n    var directionDistance = result.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function (point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  },\n  distanceSqToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceToSquared(point);\n    };\n  }(),\n  distanceSqToSegment: function () {\n    var segCenter = new THREE.Vector3();\n    var segDir = new THREE.Vector3();\n    var diff = new THREE.Vector3();\n    return function (v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n      segDir.copy(v1).sub(v0).normalize();\n      diff.copy(this.origin).sub(segCenter);\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(segDir);\n      var b0 = diff.dot(this.direction);\n      var b1 = -diff.dot(segDir);\n      var c = diff.lengthSq();\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n      }\n\n      return sqrDist;\n    };\n  }(),\n  isIntersectionSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  intersectSphere: function () {\n    // from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\n    var v1 = new THREE.Vector3();\n    return function (sphere, optionalTarget) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, optionalTarget);\n    };\n  }(),\n  isIntersectionPlane: function (plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  distanceToPlane: function (plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function (plane, optionalTarget) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, optionalTarget);\n  },\n  isIntersectionBox: function () {\n    var v = new THREE.Vector3();\n    return function (box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectBox: function (box, optionalTarget) {\n    // http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  },\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new THREE.Vector3();\n    var edge1 = new THREE.Vector3();\n    var edge2 = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    return function (a, b, c, backfaceCulling, optionalTarget) {\n      // from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, optionalTarget);\n    };\n  }(),\n  applyMatrix4: function (matrix4) {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n    this.direction.normalize();\n    return this;\n  },\n  equals: function (ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n}; // File:src/math/Sphere.js\n\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Sphere = function (center, radius) {\n  this.center = center !== undefined ? center : new THREE.Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n};\n\nTHREE.Sphere.prototype = {\n  constructor: THREE.Sphere,\n  set: function (center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new THREE.Box3();\n    return function (points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).center(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function () {\n    return this.radius <= 0;\n  },\n  containsPoint: function (point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function (point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function (sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n    var result = optionalTarget || new THREE.Vector3();\n    result.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return result;\n  },\n  getBoundingBox: function (optionalTarget) {\n    var box = optionalTarget || new THREE.Box3();\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  },\n  applyMatrix4: function (matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function (offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function (sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n}; // File:src/math/Frustum.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Frustum = function (p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new THREE.Plane(), p1 !== undefined ? p1 : new THREE.Plane(), p2 !== undefined ? p2 : new THREE.Plane(), p3 !== undefined ? p3 : new THREE.Plane(), p4 !== undefined ? p4 : new THREE.Plane(), p5 !== undefined ? p5 : new THREE.Plane()];\n};\n\nTHREE.Frustum.prototype = {\n  constructor: THREE.Frustum,\n  set: function (p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function (m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new THREE.Sphere();\n    return function (object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new THREE.Vector3(),\n        p2 = new THREE.Vector3();\n    return function (box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function (point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}; // File:src/math/Plane.js\n\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Plane = function (normal, constant) {\n  this.normal = normal !== undefined ? normal : new THREE.Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nTHREE.Plane.prototype = {\n  constructor: THREE.Plane,\n  set: function (normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function (x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function (normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function (a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function () {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function () {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function (point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function (point, optionalTarget) {\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function (point, optionalTarget) {\n    var perpendicularMagnitude = this.distanceToPoint(point);\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  isIntersectionLine: function (line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectLine: function () {\n    var v1 = new THREE.Vector3();\n    return function (line, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return result.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  coplanarPoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var m1 = new THREE.Matrix3();\n    return function (matrix, optionalNormalMatrix) {\n      // compute new normal based on theory here:\n      // http://www.songho.ca/opengl/gl_normaltransform.html\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var newNormal = v1.copy(this.normal).applyMatrix3(normalMatrix);\n      var newCoplanarPoint = this.coplanarPoint(v2);\n      newCoplanarPoint.applyMatrix4(matrix);\n      this.setFromNormalAndCoplanarPoint(newNormal, newCoplanarPoint);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.constant = this.constant - offset.dot(this.normal);\n    return this;\n  },\n  equals: function (plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n}; // File:src/math/Math.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Math = {\n  generateUUID: function () {\n    // http://www.broofa.com/Tools/Math.uuid.htm\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = new Array(36);\n    var rnd = 0,\n        r;\n    return function () {\n      for (var i = 0; i < 36; i++) {\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\n          uuid[i] = '-';\n        } else if (i === 14) {\n          uuid[i] = '4';\n        } else {\n          if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[i] = chars[i === 19 ? r & 0x3 | 0x8 : r];\n        }\n      }\n\n      return uuid.join('');\n    };\n  }(),\n  // Clamp value to range <a, b>\n  clamp: function (x, a, b) {\n    return x < a ? a : x > b ? b : x;\n  },\n  // Clamp value to range <a, inf)\n  clampBottom: function (x, a) {\n    return x < a ? a : x;\n  },\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  euclideanModulo: function (n, m) {\n    return (n % m + m) % m;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function (x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  // Random float from <0, 1> with 16 bits of randomness\n  // (standard Math.random() creates repetitive patterns when applied over larger space)\n  random16: function () {\n    return (65280 * Math.random() + 255 * Math.random()) / 65535;\n  },\n  // Random integer from <low, high> interval\n  randInt: function (low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function (low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function (range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function () {\n    var degreeToRadiansFactor = Math.PI / 180;\n    return function (degrees) {\n      return degrees * degreeToRadiansFactor;\n    };\n  }(),\n  radToDeg: function () {\n    var radianToDegreesFactor = 180 / Math.PI;\n    return function (radians) {\n      return radians * radianToDegreesFactor;\n    };\n  }(),\n  isPowerOfTwo: function (value) {\n    return (value & value - 1) === 0 && value !== 0;\n  },\n  nextPowerOfTwo: function (value) {\n    value--;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value++;\n    return value;\n  }\n}; // File:src/math/Spline.js\n\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Spline = function (points) {\n  this.points = points;\n  var c = [],\n      v3 = {\n    x: 0,\n    y: 0,\n    z: 0\n  },\n      point,\n      intPoint,\n      weight,\n      w2,\n      w3,\n      pa,\n      pb,\n      pc,\n      pd;\n\n  this.initFromArray = function (a) {\n    this.points = [];\n\n    for (var i = 0; i < a.length; i++) {\n      this.points[i] = {\n        x: a[i][0],\n        y: a[i][1],\n        z: a[i][2]\n      };\n    }\n  };\n\n  this.getPoint = function (k) {\n    point = (this.points.length - 1) * k;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n    c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[1] = intPoint;\n    c[2] = intPoint > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n    c[3] = intPoint > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n    pa = this.points[c[0]];\n    pb = this.points[c[1]];\n    pc = this.points[c[2]];\n    pd = this.points[c[3]];\n    w2 = weight * weight;\n    w3 = weight * w2;\n    v3.x = interpolate(pa.x, pb.x, pc.x, pd.x, weight, w2, w3);\n    v3.y = interpolate(pa.y, pb.y, pc.y, pd.y, weight, w2, w3);\n    v3.z = interpolate(pa.z, pb.z, pc.z, pd.z, weight, w2, w3);\n    return v3;\n  };\n\n  this.getControlPointsArray = function () {\n    var i,\n        p,\n        l = this.points.length,\n        coords = [];\n\n    for (i = 0; i < l; i++) {\n      p = this.points[i];\n      coords[i] = [p.x, p.y, p.z];\n    }\n\n    return coords;\n  }; // approximate length by summing linear segments\n\n\n  this.getLength = function (nSubDivisions) {\n    var i,\n        index,\n        nSamples,\n        position,\n        point = 0,\n        intPoint = 0,\n        oldIntPoint = 0,\n        oldPosition = new THREE.Vector3(),\n        tmpVec = new THREE.Vector3(),\n        chunkLengths = [],\n        totalLength = 0; // first point has 0 length\n\n    chunkLengths[0] = 0;\n    if (!nSubDivisions) nSubDivisions = 100;\n    nSamples = this.points.length * nSubDivisions;\n    oldPosition.copy(this.points[0]);\n\n    for (i = 1; i < nSamples; i++) {\n      index = i / nSamples;\n      position = this.getPoint(index);\n      tmpVec.copy(position);\n      totalLength += tmpVec.distanceTo(oldPosition);\n      oldPosition.copy(position);\n      point = (this.points.length - 1) * index;\n      intPoint = Math.floor(point);\n\n      if (intPoint !== oldIntPoint) {\n        chunkLengths[intPoint] = totalLength;\n        oldIntPoint = intPoint;\n      }\n    } // last point ends with total length\n\n\n    chunkLengths[chunkLengths.length] = totalLength;\n    return {\n      chunks: chunkLengths,\n      total: totalLength\n    };\n  };\n\n  this.reparametrizeByArcLength = function (samplingCoef) {\n    var i,\n        j,\n        index,\n        indexCurrent,\n        indexNext,\n        realDistance,\n        sampling,\n        position,\n        newpoints = [],\n        tmpVec = new THREE.Vector3(),\n        sl = this.getLength();\n    newpoints.push(tmpVec.copy(this.points[0]).clone());\n\n    for (i = 1; i < this.points.length; i++) {\n      //tmpVec.copy( this.points[ i - 1 ] );\n      //linearDistance = tmpVec.distanceTo( this.points[ i ] );\n      realDistance = sl.chunks[i] - sl.chunks[i - 1];\n      sampling = Math.ceil(samplingCoef * realDistance / sl.total);\n      indexCurrent = (i - 1) / (this.points.length - 1);\n      indexNext = i / (this.points.length - 1);\n\n      for (j = 1; j < sampling - 1; j++) {\n        index = indexCurrent + j * (1 / sampling) * (indexNext - indexCurrent);\n        position = this.getPoint(index);\n        newpoints.push(tmpVec.copy(position).clone());\n      }\n\n      newpoints.push(tmpVec.copy(this.points[i]).clone());\n    }\n\n    this.points = newpoints;\n  }; // Catmull-Rom\n\n\n  function interpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5,\n        v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}; // File:src/math/Triangle.js\n\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Triangle = function (a, b, c) {\n  this.a = a !== undefined ? a : new THREE.Vector3();\n  this.b = b !== undefined ? b : new THREE.Vector3();\n  this.c = c !== undefined ? c : new THREE.Vector3();\n};\n\nTHREE.Triangle.normal = function () {\n  var v0 = new THREE.Vector3();\n  return function (a, b, c, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(c, b);\n    v0.subVectors(a, b);\n    result.cross(v0);\n    var resultLengthSq = result.lengthSq();\n\n    if (resultLengthSq > 0) {\n      return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n    }\n\n    return result.set(0, 0, 0);\n  };\n}(); // static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\nTHREE.Triangle.barycoordFromPoint = function () {\n  var v0 = new THREE.Vector3();\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function (point, a, b, c, optionalTarget) {\n    v0.subVectors(c, a);\n    v1.subVectors(b, a);\n    v2.subVectors(point, a);\n    var dot00 = v0.dot(v0);\n    var dot01 = v0.dot(v1);\n    var dot02 = v0.dot(v2);\n    var dot11 = v1.dot(v1);\n    var dot12 = v1.dot(v2);\n    var denom = dot00 * dot11 - dot01 * dot01;\n    var result = optionalTarget || new THREE.Vector3(); // collinear or singular triangle\n\n    if (denom === 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set(-2, -1, -1);\n    }\n\n    var invDenom = 1 / denom;\n    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n    return result.set(1 - u - v, v, u);\n  };\n}();\n\nTHREE.Triangle.containsPoint = function () {\n  var v1 = new THREE.Vector3();\n  return function (point, a, b, c) {\n    var result = THREE.Triangle.barycoordFromPoint(point, a, b, c, v1);\n    return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n  };\n}();\n\nTHREE.Triangle.prototype = {\n  constructor: THREE.Triangle,\n  set: function (a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function (points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  area: function () {\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n    return function () {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  midpoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  normal: function (optionalTarget) {\n    return THREE.Triangle.normal(this.a, this.b, this.c, optionalTarget);\n  },\n  plane: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Plane();\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  barycoordFromPoint: function (point, optionalTarget) {\n    return THREE.Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n  },\n  containsPoint: function (point) {\n    return THREE.Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  equals: function (triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n}; // File:src/core/Clock.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Clock = function (autoStart) {\n  this.autoStart = autoStart !== undefined ? autoStart : true;\n  this.startTime = 0;\n  this.oldTime = 0;\n  this.elapsedTime = 0;\n  this.running = false;\n};\n\nTHREE.Clock.prototype = {\n  constructor: THREE.Clock,\n  start: function () {\n    this.startTime = self.performance !== undefined && self.performance.now !== undefined ? self.performance.now() : Date.now();\n    this.oldTime = this.startTime;\n    this.running = true;\n  },\n  stop: function () {\n    this.getElapsedTime();\n    this.running = false;\n  },\n  getElapsedTime: function () {\n    this.getDelta();\n    return this.elapsedTime;\n  },\n  getDelta: function () {\n    var diff = 0;\n\n    if (this.autoStart && !this.running) {\n      this.start();\n    }\n\n    if (this.running) {\n      var newTime = self.performance !== undefined && self.performance.now !== undefined ? self.performance.now() : Date.now();\n      diff = 0.001 * (newTime - this.oldTime);\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n\n    return diff;\n  }\n}; // File:src/core/EventDispatcher.js\n\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\n\nTHREE.EventDispatcher = function () {};\n\nTHREE.EventDispatcher.prototype = {\n  constructor: THREE.EventDispatcher,\n  apply: function (object) {\n    object.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n    object.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n    object.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n    object.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\n  },\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  },\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = [];\n      var length = listenerArray.length;\n\n      for (var i = 0; i < length; i++) {\n        array[i] = listenerArray[i];\n      }\n\n      for (var i = 0; i < length; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n}; // File:src/core/Raycaster.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\n\n(function (THREE) {\n  THREE.Raycaster = function (origin, direction, near, far) {\n    this.ray = new THREE.Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function () {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  };\n\n  function descSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  var intersectObject = function (object, raycaster, intersects, recursive) {\n    if (object.visible === false) return;\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  }; //\n\n\n  THREE.Raycaster.prototype = {\n    constructor: THREE.Raycaster,\n    linePrecision: 1,\n    set: function (origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function (coords, camera) {\n      if (camera instanceof THREE.PerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n      } else if (camera instanceof THREE.OrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, -1).unproject(camera);\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type.');\n      }\n    },\n    intersectObject: function (object, recursive) {\n      var intersects = [];\n      intersectObject(object, this, intersects, recursive);\n      intersects.sort(descSort);\n      return intersects;\n    },\n    intersectObjects: function (objects, recursive) {\n      var intersects = [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(descSort);\n      return intersects;\n    }\n  };\n})(THREE); // File:src/core/Object3D.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\n\n\nTHREE.Object3D = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.Object3DIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = THREE.Object3D.DefaultUp.clone();\n  var position = new THREE.Vector3();\n  var rotation = new THREE.Euler();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3(1, 1, 1);\n\n  var onRotationChange = function () {\n    quaternion.setFromEuler(rotation, false);\n  };\n\n  var onQuaternionChange = function () {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  };\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new THREE.Matrix4()\n    },\n    normalMatrix: {\n      value: new THREE.Matrix3()\n    }\n  });\n  this.rotationAutoUpdate = true;\n  this.matrix = new THREE.Matrix4();\n  this.matrixWorld = new THREE.Matrix4();\n  this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\nTHREE.Object3D.prototype = {\n  constructor: THREE.Object3D,\n\n  get eulerOrder() {\n    console.warn('THREE.Object3D: .eulerOrder has been moved to .rotation.order.');\n    return this.rotation.order;\n  },\n\n  set eulerOrder(value) {\n    console.warn('THREE.Object3D: .eulerOrder has been moved to .rotation.order.');\n    this.rotation.order = value;\n  },\n\n  get useQuaternion() {\n    console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n  },\n\n  set useQuaternion(value) {\n    console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n  },\n\n  set renderDepth(value) {\n    console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n  },\n\n  applyMatrix: function (matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new THREE.Quaternion();\n    return function (axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new THREE.Vector3();\n    return function (axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translate: function (distance, axis) {\n    console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n    return this.translateOnAxis(axis, distance);\n  },\n  translateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This routine does not support objects with rotated and/or translated parent(s)\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      m1.lookAt(vector, this.position, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n      return this;\n    }\n\n    if (object instanceof THREE.Object3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    } else {\n      console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n  },\n  getChildByName: function (name) {\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n    return this.getObjectByName(name);\n  },\n  getObjectById: function (id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function (name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function (name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Quaternion();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, result, scale);\n      return result;\n    };\n  }(),\n  getWorldRotation: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Euler();\n      this.getWorldQuaternion(quaternion);\n      return result.setFromQuaternion(quaternion, this.rotation.order, false);\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, result);\n      return result;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function (callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function (meta) {\n    var isRootObject = meta === undefined;\n    var data = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {}\n      };\n      data.metadata = {\n        version: 4.4,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData;\n    if (this.visible !== true) data.visible = this.visible;\n    data.matrix = this.matrix.toArray();\n\n    if (this.children.length > 0) {\n      data.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        data.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    var output = {};\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n    }\n\n    output.object = data;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function (recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function (source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.rotationAutoUpdate = source.rotationAutoUpdate;\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);\nTHREE.Object3DIdCount = 0; // File:src/core/Face3.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Face3 = function (a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n  this.vertexNormals = Array.isArray(normal) ? normal : [];\n  this.color = color instanceof THREE.Color ? color : new THREE.Color();\n  this.vertexColors = Array.isArray(color) ? color : [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n};\n\nTHREE.Face3.prototype = {\n  constructor: THREE.Face3,\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n\n    for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n\n    return this;\n  }\n}; // File:src/core/Face4.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Face4 = function (a, b, c, d, normal, color, materialIndex) {\n  console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n  return new THREE.Face3(a, b, c, normal, color, materialIndex);\n}; // File:src/core/BufferAttribute.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.BufferAttribute = function (array, itemSize) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.itemSize = itemSize;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n};\n\nTHREE.BufferAttribute.prototype = {\n  constructor: THREE.BufferAttribute,\n\n  get length() {\n    console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n    return this.array.length;\n  },\n\n  get count() {\n    return this.array.length / this.itemSize;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  copyArray: function (array) {\n    this.array.set(array);\n    return this;\n  },\n  copyColorsArray: function (colors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      var color = colors[i];\n\n      if (color === undefined) {\n        console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n        color = new THREE.Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  },\n  copyIndicesArray: function (indices) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = indices.length; i < l; i++) {\n      var index = indices[i];\n      array[offset++] = index.a;\n      array[offset++] = index.b;\n      array[offset++] = index.c;\n    }\n\n    return this;\n  },\n  copyVector2sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n        vector = new THREE.Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  },\n  copyVector3sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n        vector = new THREE.Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  },\n  copyVector4sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n        vector = new THREE.Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  getX: function (index) {\n    return this.array[index * this.itemSize];\n  },\n  setX: function (index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  getY: function (index) {\n    return this.array[index * this.itemSize + 1];\n  },\n  setY: function (index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  getZ: function (index) {\n    return this.array[index * this.itemSize + 2];\n  },\n  setZ: function (index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  getW: function (index) {\n    return this.array[index * this.itemSize + 3];\n  },\n  setW: function (index, w) {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  },\n  setXY: function (index, x, y) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n}; //\n\nTHREE.Int8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int8Array(array), itemSize);\n};\n\nTHREE.Uint8Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8Array(array), itemSize);\n};\n\nTHREE.Uint8ClampedAttribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint8ClampedArray(array), itemSize);\n};\n\nTHREE.Int16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int16Array(array), itemSize);\n};\n\nTHREE.Uint16Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint16Array(array), itemSize);\n};\n\nTHREE.Int32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Int32Array(array), itemSize);\n};\n\nTHREE.Uint32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Uint32Array(array), itemSize);\n};\n\nTHREE.Float32Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float32Array(array), itemSize);\n};\n\nTHREE.Float64Attribute = function (array, itemSize) {\n  return new THREE.BufferAttribute(new Float64Array(array), itemSize);\n}; // Deprecated\n\n\nTHREE.DynamicBufferAttribute = function (array, itemSize) {\n  console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n  return new THREE.BufferAttribute(array, itemSize).setDynamic(true);\n}; // File:src/core/InstancedBufferAttribute.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InstancedBufferAttribute = function (array, itemSize, meshPerAttribute) {\n  THREE.BufferAttribute.call(this, array, itemSize);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype);\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\nTHREE.InstancedBufferAttribute.prototype.copy = function (source) {\n  THREE.BufferAttribute.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/InterleavedBuffer.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InterleavedBuffer = function (array, stride) {\n  this.uuid = THREE.Math.generateUUID();\n  this.array = array;\n  this.stride = stride;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n};\n\nTHREE.InterleavedBuffer.prototype = {\n  constructor: THREE.InterleavedBuffer,\n\n  get length() {\n    return this.array.length;\n  },\n\n  get count() {\n    return this.array.length / this.stride;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.stride = source.stride;\n    this.dynamic = source.dynamic;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n\n    for (var i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n}; // File:src/core/InstancedInterleavedBuffer.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.InstancedInterleavedBuffer = function (array, stride, meshPerAttribute) {\n  THREE.InterleavedBuffer.call(this, array, stride);\n  this.meshPerAttribute = meshPerAttribute || 1;\n};\n\nTHREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype);\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\n\nTHREE.InstancedInterleavedBuffer.prototype.copy = function (source) {\n  THREE.InterleavedBuffer.prototype.copy.call(this, source);\n  this.meshPerAttribute = source.meshPerAttribute;\n  return this;\n}; // File:src/core/InterleavedBufferAttribute.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.InterleavedBufferAttribute = function (interleavedBuffer, itemSize, offset) {\n  this.uuid = THREE.Math.generateUUID();\n  this.data = interleavedBuffer;\n  this.itemSize = itemSize;\n  this.offset = offset;\n};\n\nTHREE.InterleavedBufferAttribute.prototype = {\n  constructor: THREE.InterleavedBufferAttribute,\n\n  get length() {\n    console.warn('THREE.BufferAttribute: .length has been deprecated. Please use .count.');\n    return this.array.length;\n  },\n\n  get count() {\n    return this.data.array.length / this.data.stride;\n  },\n\n  setX: function (index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  },\n  setY: function (index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  },\n  setZ: function (index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  },\n  setW: function (index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  },\n  getX: function (index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  },\n  getY: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  },\n  getZ: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  },\n  getW: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  },\n  setXY: function (index, x, y) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n}; // File:src/core/Geometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\n\nTHREE.Geometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = [];\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphColors = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.elementsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nTHREE.Geometry.prototype = {\n  constructor: THREE.Geometry,\n  applyMatrix: function (matrix) {\n    var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  fromBufferGeometry: function (geometry) {\n    var scope = this;\n    var indices = geometry.index !== null ? geometry.index.array : undefined;\n    var attributes = geometry.attributes;\n    var vertices = attributes.position.array;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    var tempNormals = [];\n    var tempUVs = [];\n    var tempUVs2 = [];\n\n    for (var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4) {\n      scope.vertices.push(new THREE.Vector3(vertices[i], vertices[i + 1], vertices[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new THREE.Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new THREE.Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new THREE.Vector2(uvs[j], uvs[j + 1]));\n      }\n\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new THREE.Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n\n    var addFace = function (a, b, c) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      var face = new THREE.Face3(a, b, c, vertexNormals, vertexColors);\n      scope.faces.push(face);\n\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    };\n\n    if (indices !== undefined) {\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            addFace(indices[j], indices[j + 1], indices[j + 2]);\n          }\n        }\n      } else {\n        for (var i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      }\n    } else {\n      for (var i = 0; i < vertices.length / 3; i += 3) {\n        addFace(i, i + 1, i + 2);\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  normalize: function () {\n    this.computeBoundingSphere();\n    var center = this.boundingSphere.center;\n    var radius = this.boundingSphere.radius;\n    var s = radius === 0 ? 1 : 1.0 / radius;\n    var matrix = new THREE.Matrix4();\n    matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n    this.applyMatrix(matrix);\n    return this;\n  },\n  computeFaceNormals: function () {\n    var cb = new THREE.Vector3(),\n        ab = new THREE.Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function (areaWeighted) {\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new THREE.Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC;\n      var cb = new THREE.Vector3(),\n          ab = new THREE.Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n  },\n  computeMorphNormals: function () {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new THREE.Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new THREE.Vector3();\n          vertexNormals = {\n            a: new THREE.Vector3(),\n            b: new THREE.Vector3(),\n            c: new THREE.Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeTangents: function () {\n    console.warn('THREE.Geometry: .computeTangents() has been removed.');\n  },\n  computeLineDistances: function () {\n    var d = 0;\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n\n      this.lineDistances[i] = d;\n    }\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function () {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function (geometry, matrix, materialIndexOffset) {\n    if (geometry instanceof THREE.Geometry === false) {\n      console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0];\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new THREE.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(uv[j].clone());\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n  mergeMesh: function (mesh) {\n    if (mesh instanceof THREE.Mesh === false) {\n      console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n      return;\n    }\n\n    mesh.matrixAutoUpdate && mesh.updateMatrix();\n    this.merge(mesh.geometry, mesh.matrix);\n  },\n\n  /*\r\n   * Checks for duplicate vertices with hashmap.\r\n   * Duplicated vertices are removed\r\n   * and faces' vertices are updated.\r\n   */\n  mergeVertices: function () {\n    var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, j, jl;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    } // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c];\n      var dupIndex = -1; // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          dupIndex = n;\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    }; // standard Geometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = false; // face.materialIndex !== undefined;\n\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0);\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n    data.data.faces = faces;\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.vertices = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    var vertices = source.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      this.vertices.push(vertices[i].clone());\n    }\n\n    var faces = source.faces;\n\n    for (var i = 0, il = faces.length; i < il; i++) {\n      this.faces.push(faces[i].clone());\n    }\n\n    for (var i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n      var faceVertexUvs = source.faceVertexUvs[i];\n\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n\n      for (var j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n        var uvs = faceVertexUvs[j],\n            uvsCopy = [];\n\n        for (var k = 0, kl = uvs.length; k < kl; k++) {\n          var uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);\nTHREE.GeometryIdCount = 0; // File:src/core/DirectGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.DirectGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'DirectGeometry';\n  this.indices = [];\n  this.vertices = [];\n  this.normals = [];\n  this.colors = [];\n  this.uvs = [];\n  this.uvs2 = [];\n  this.groups = [];\n  this.morphTargets = {};\n  this.skinWeights = [];\n  this.skinIndices = []; // this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nTHREE.DirectGeometry.prototype = {\n  constructor: THREE.DirectGeometry,\n  computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n  computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n  computeFaceNormals: function () {\n    console.warn('THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.');\n  },\n  computeVertexNormals: function () {\n    console.warn('THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.');\n  },\n  computeGroups: function (geometry) {\n    var group;\n    var groups = [];\n    var materialIndex;\n    var faces = geometry.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i]; // materials\n\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n\n        if (group !== undefined) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n\n    if (group !== undefined) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n\n    this.groups = groups;\n  },\n  fromGeometry: function (geometry) {\n    var faces = geometry.faces;\n    var vertices = geometry.vertices;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n    var morphTargets = geometry.morphTargets;\n    var morphTargetsLength = morphTargets.length;\n\n    if (morphTargetsLength > 0) {\n      var morphTargetsPosition = [];\n\n      for (var i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = [];\n      }\n\n      this.morphTargets.position = morphTargetsPosition;\n    }\n\n    var morphNormals = geometry.morphNormals;\n    var morphNormalsLength = morphNormals.length;\n\n    if (morphNormalsLength > 0) {\n      var morphTargetsNormal = [];\n\n      for (var i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = [];\n      }\n\n      this.morphTargets.normal = morphTargetsNormal;\n    } // skins\n\n\n    var skinIndices = geometry.skinIndices;\n    var skinWeights = geometry.skinWeights;\n    var hasSkinIndices = skinIndices.length === vertices.length;\n    var hasSkinWeights = skinWeights.length === vertices.length; //\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        var normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n\n      var vertexColors = face.vertexColors;\n\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        var color = face.color;\n        this.colors.push(color, color, color);\n      }\n\n      if (hasFaceVertexUv === true) {\n        var vertexUvs = faceVertexUvs[0][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n          this.uvs.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      }\n\n      if (hasFaceVertexUv2 === true) {\n        var vertexUvs = faceVertexUvs[1][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n          this.uvs2.push(new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2());\n        }\n      } // morphs\n\n\n      for (var j = 0; j < morphTargetsLength; j++) {\n        var morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n\n      for (var j = 0; j < morphNormalsLength; j++) {\n        var morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      } // skins\n\n\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype); // File:src/core/BufferGeometry.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.index = null;\n  this.attributes = {};\n  this.morphAttributes = {};\n  this.groups = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.drawRange = {\n    start: 0,\n    count: Infinity\n  };\n};\n\nTHREE.BufferGeometry.prototype = {\n  constructor: THREE.BufferGeometry,\n  addIndex: function (index) {\n    console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n    this.setIndex(index);\n  },\n  getIndex: function () {\n    return this.index;\n  },\n  setIndex: function (index) {\n    this.index = index;\n  },\n  addAttribute: function (name, attribute) {\n    if (attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n      this.addAttribute(name, new THREE.BufferAttribute(arguments[1], arguments[2]));\n      return;\n    }\n\n    if (name === 'index') {\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n      this.setIndex(attribute);\n    }\n\n    this.attributes[name] = attribute;\n  },\n  getAttribute: function (name) {\n    return this.attributes[name];\n  },\n  removeAttribute: function (name) {\n    delete this.attributes[name];\n  },\n\n  get drawcalls() {\n    console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n    return this.groups;\n  },\n\n  get offsets() {\n    console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n    return this.groups;\n  },\n\n  addDrawCall: function (start, count, indexOffset) {\n    if (indexOffset !== undefined) {\n      console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n    }\n\n    console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n    this.addGroup(start, count);\n  },\n  clearDrawCalls: function () {\n    console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n    this.clearGroups();\n  },\n  addGroup: function (start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex !== undefined ? materialIndex : 0\n    });\n  },\n  clearGroups: function () {\n    this.groups = [];\n  },\n  setDrawRange: function (start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  },\n  applyMatrix: function (matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToVector3Array(position.array);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToVector3Array(normal.array);\n      normal.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1;\n    return function rotateX(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1;\n    return function rotateY(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1;\n    return function rotateZ(angle) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1;\n    return function translate(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1;\n    return function scale(x, y, z) {\n      if (m1 === undefined) m1 = new THREE.Matrix4();\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj;\n    return function lookAt(vector) {\n      if (obj === undefined) obj = new THREE.Object3D();\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  center: function () {\n    this.computeBoundingBox();\n    var offset = this.boundingBox.center().negate();\n    this.translate(offset.x, offset.y, offset.z);\n    return offset;\n  },\n  setFromObject: function (object) {\n    // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Points || object instanceof THREE.Line) {\n      var positions = new THREE.Float32Attribute(geometry.vertices.length * 3, 3);\n      var colors = new THREE.Float32Attribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        var lineDistances = new THREE.Float32Attribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if (object instanceof THREE.Mesh) {\n      if (geometry instanceof THREE.Geometry) {\n        this.fromGeometry(geometry);\n      }\n    }\n\n    return this;\n  },\n  updateFromObject: function (object) {\n    var geometry = object.geometry;\n\n    if (object instanceof THREE.Mesh) {\n      var direct = geometry.__directGeometry;\n\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n\n    if (geometry.verticesNeedUpdate === true) {\n      var attribute = this.attributes.position;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.verticesNeedUpdate = false;\n    }\n\n    if (geometry.normalsNeedUpdate === true) {\n      var attribute = this.attributes.normal;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.normalsNeedUpdate = false;\n    }\n\n    if (geometry.colorsNeedUpdate === true) {\n      var attribute = this.attributes.color;\n\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.colorsNeedUpdate = false;\n    }\n\n    if (geometry.lineDistancesNeedUpdate) {\n      var attribute = this.attributes.lineDistance;\n\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.lineDistancesNeedUpdate = false;\n    }\n\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n\n    return this;\n  },\n  fromGeometry: function (geometry) {\n    geometry.__directGeometry = new THREE.DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  },\n  fromDirectGeometry: function (geometry) {\n    var positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new THREE.BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n    if (geometry.normals.length > 0) {\n      var normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new THREE.BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n\n    if (geometry.colors.length > 0) {\n      var colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new THREE.BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n\n    if (geometry.uvs.length > 0) {\n      var uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n\n    if (geometry.uvs2.length > 0) {\n      var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new THREE.BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    }\n\n    if (geometry.indices.length > 0) {\n      var TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n      var indices = new TypeArray(geometry.indices.length * 3);\n      this.setIndex(new THREE.BufferAttribute(indices, 1).copyIndicesArray(geometry.indices));\n    } // groups\n\n\n    this.groups = geometry.groups; // morphs\n\n    for (var name in geometry.morphTargets) {\n      var array = [];\n      var morphTargets = geometry.morphTargets[name];\n\n      for (var i = 0, l = morphTargets.length; i < l; i++) {\n        var morphTarget = morphTargets[i];\n        var attribute = new THREE.Float32Attribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n\n      this.morphAttributes[name] = array;\n    } // skinning\n\n\n    if (geometry.skinIndices.length > 0) {\n      var skinIndices = new THREE.Float32Attribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n\n    if (geometry.skinWeights.length > 0) {\n      var skinWeights = new THREE.Float32Attribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    } //\n\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    return this;\n  },\n  computeBoundingBox: function () {\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new THREE.Box3();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        var bb = this.boundingBox;\n        bb.makeEmpty();\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.fromArray(positions, i);\n          bb.expandByPoint(vector);\n        }\n      }\n\n      if (positions === undefined || positions.length === 0) {\n        this.boundingBox.min.set(0, 0, 0);\n        this.boundingBox.max.set(0, 0, 0);\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    };\n  }(),\n  computeBoundingSphere: function () {\n    var box = new THREE.Box3();\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new THREE.Sphere();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        box.makeEmpty();\n        var center = this.boundingSphere.center;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.fromArray(positions, i);\n          box.expandByPoint(vector);\n        }\n\n        box.center(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.fromArray(positions, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    };\n  }(),\n  computeFaceNormals: function () {// backwards compatibility\n  },\n  computeVertexNormals: function () {\n    var index = this.index;\n    var attributes = this.attributes;\n    var groups = this.groups;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var normals = attributes.normal.array;\n\n        for (var i = 0, il = normals.length; i < il; i++) {\n          normals[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA,\n          vB,\n          vC,\n          pA = new THREE.Vector3(),\n          pB = new THREE.Vector3(),\n          pC = new THREE.Vector3(),\n          cb = new THREE.Vector3(),\n          ab = new THREE.Vector3(); // indexed elements\n\n      if (index) {\n        var indices = index.array;\n\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n\n        for (var j = 0, jl = groups.length; j < jl; ++j) {\n          var group = groups[j];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  computeTangents: function () {\n    console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n  },\n  computeOffsets: function (size) {\n    console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n  },\n  merge: function (geometry, offset) {\n    if (geometry instanceof THREE.BufferGeometry === false) {\n      console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n      return;\n    }\n\n    if (offset === undefined) offset = 0;\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n      var attribute1 = attributes[key];\n      var attributeArray1 = attribute1.array;\n      var attribute2 = geometry.attributes[key];\n      var attributeArray2 = attribute2.array;\n      var attributeSize = attribute2.itemSize;\n\n      for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  },\n  normalizeNormals: function () {\n    var normals = this.attributes.normal.array;\n    var x, y, z, n;\n\n    for (var i = 0, il = normals.length; i < il; i += 3) {\n      x = normals[i];\n      y = normals[i + 1];\n      z = normals[i + 2];\n      n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n      normals[i] *= n;\n      normals[i + 1] *= n;\n      normals[i + 2] *= n;\n    }\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    data.data = {\n      attributes: {}\n    };\n    var index = this.index;\n\n    if (index !== null) {\n      var array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array\n      };\n    }\n\n    var groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    var boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    }\n\n    var attributes = source.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    }\n\n    var groups = source.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count);\n    }\n\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);\nTHREE.BufferGeometry.MaxIndex = 65535; // File:src/core/InstancedBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\nTHREE.InstancedBufferGeometry = function () {\n  THREE.BufferGeometry.call(this);\n  this.type = 'InstancedBufferGeometry';\n  this.maxInstancedCount = undefined;\n};\n\nTHREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\nTHREE.InstancedBufferGeometry.prototype.addGroup = function (start, count, instances) {\n  this.groups.push({\n    start: start,\n    count: count,\n    instances: instances\n  });\n};\n\nTHREE.InstancedBufferGeometry.prototype.copy = function (source) {\n  var index = source.index;\n\n  if (index !== null) {\n    this.setIndex(index.clone());\n  }\n\n  var attributes = source.attributes;\n\n  for (var name in attributes) {\n    var attribute = attributes[name];\n    this.addAttribute(name, attribute.clone());\n  }\n\n  var groups = source.groups;\n\n  for (var i = 0, l = groups.length; i < l; i++) {\n    var group = groups[i];\n    this.addGroup(group.start, group.count, group.instances);\n  }\n\n  return this;\n};\n\nTHREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype); // File:src/cameras/Camera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\nTHREE.Camera = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new THREE.Matrix4();\n  this.projectionMatrix = new THREE.Matrix4();\n};\n\nTHREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Camera.prototype.constructor = THREE.Camera;\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n  var quaternion = new THREE.Quaternion();\n  return function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.getWorldQuaternion(quaternion);\n    return result.set(0, 0, -1).applyQuaternion(quaternion);\n  };\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n  // This routine does not support cameras with rotated and/or translated parent(s)\n  var m1 = new THREE.Matrix4();\n  return function (vector) {\n    m1.lookAt(this.position, vector, this.up);\n    this.quaternion.setFromRotationMatrix(m1);\n  };\n}();\n\nTHREE.Camera.prototype.clone = function () {\n  return new this.constructor().copy(this);\n};\n\nTHREE.Camera.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.matrixWorldInverse.copy(source.matrixWorldInverse);\n  this.projectionMatrix.copy(source.projectionMatrix);\n  return this;\n}; // File:src/cameras/CubeCamera.js\n\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.CubeCamera = function (near, far, cubeResolution) {\n  THREE.Object3D.call(this);\n  this.type = 'CubeCamera';\n  var fov = 90,\n      aspect = 1;\n  var cameraPX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new THREE.Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new THREE.Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new THREE.Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new THREE.Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new THREE.Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new THREE.Vector3(0, 0, -1));\n  this.add(cameraNZ);\n  this.renderTarget = new THREE.WebGLRenderTargetCube(cubeResolution, cubeResolution, {\n    format: THREE.RGBFormat,\n    magFilter: THREE.LinearFilter,\n    minFilter: THREE.LinearFilter\n  });\n\n  this.updateCubeMap = function (renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.generateMipmaps;\n    renderTarget.generateMipmaps = false;\n    renderTarget.activeCubeFace = 0;\n    renderer.render(scene, cameraPX, renderTarget);\n    renderTarget.activeCubeFace = 1;\n    renderer.render(scene, cameraNX, renderTarget);\n    renderTarget.activeCubeFace = 2;\n    renderer.render(scene, cameraPY, renderTarget);\n    renderTarget.activeCubeFace = 3;\n    renderer.render(scene, cameraNY, renderTarget);\n    renderTarget.activeCubeFace = 4;\n    renderer.render(scene, cameraPZ, renderTarget);\n    renderTarget.generateMipmaps = generateMipmaps;\n    renderTarget.activeCubeFace = 5;\n    renderer.render(scene, cameraNZ, renderTarget);\n    renderer.setRenderTarget(null);\n  };\n};\n\nTHREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera; // File:src/cameras/OrthographicCamera.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.OrthographicCamera = function (left, right, top, bottom, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'OrthographicCamera';\n  this.zoom = 1;\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype);\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\n\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\n  var dx = (this.right - this.left) / (2 * this.zoom);\n  var dy = (this.top - this.bottom) / (2 * this.zoom);\n  var cx = (this.right + this.left) / 2;\n  var cy = (this.top + this.bottom) / 2;\n  this.projectionMatrix.makeOrthographic(cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far);\n};\n\nTHREE.OrthographicCamera.prototype.copy = function (source) {\n  THREE.Camera.prototype.copy.call(this, source);\n  this.left = source.left;\n  this.right = source.right;\n  this.top = source.top;\n  this.bottom = source.bottom;\n  this.near = source.near;\n  this.far = source.far;\n  this.zoom = source.zoom;\n  return this;\n};\n\nTHREE.OrthographicCamera.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.zoom = this.zoom;\n  data.object.left = this.left;\n  data.object.right = this.right;\n  data.object.top = this.top;\n  data.object.bottom = this.bottom;\n  data.object.near = this.near;\n  data.object.far = this.far;\n  return data;\n}; // File:src/cameras/PerspectiveCamera.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\n\n\nTHREE.PerspectiveCamera = function (fov, aspect, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.zoom = 1;\n  this.fov = fov !== undefined ? fov : 50;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\n\nTHREE.PerspectiveCamera.prototype.setLens = function (focalLength, frameHeight) {\n  if (frameHeight === undefined) frameHeight = 24;\n  this.fov = 2 * THREE.Math.radToDeg(Math.atan(frameHeight / (focalLength * 2)));\n  this.updateProjectionMatrix();\n};\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\n\n\nTHREE.PerspectiveCamera.prototype.setViewOffset = function (fullWidth, fullHeight, x, y, width, height) {\n  this.fullWidth = fullWidth;\n  this.fullHeight = fullHeight;\n  this.x = x;\n  this.y = y;\n  this.width = width;\n  this.height = height;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\n  var fov = THREE.Math.radToDeg(2 * Math.atan(Math.tan(THREE.Math.degToRad(this.fov) * 0.5) / this.zoom));\n\n  if (this.fullWidth) {\n    var aspect = this.fullWidth / this.fullHeight;\n    var top = Math.tan(THREE.Math.degToRad(fov * 0.5)) * this.near;\n    var bottom = -top;\n    var left = aspect * bottom;\n    var right = aspect * top;\n    var width = Math.abs(right - left);\n    var height = Math.abs(top - bottom);\n    this.projectionMatrix.makeFrustum(left + this.x * width / this.fullWidth, left + (this.x + this.width) * width / this.fullWidth, top - (this.y + this.height) * height / this.fullHeight, top - this.y * height / this.fullHeight, this.near, this.far);\n  } else {\n    this.projectionMatrix.makePerspective(fov, this.aspect, this.near, this.far);\n  }\n};\n\nTHREE.PerspectiveCamera.prototype.copy = function (source) {\n  THREE.Camera.prototype.copy.call(this, source);\n  this.fov = source.fov;\n  this.aspect = source.aspect;\n  this.near = source.near;\n  this.far = source.far;\n  this.zoom = source.zoom;\n  return this;\n};\n\nTHREE.PerspectiveCamera.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.zoom = this.zoom;\n  data.object.fov = this.fov;\n  data.object.aspect = this.aspect;\n  data.object.near = this.near;\n  data.object.far = this.far;\n  return data;\n}; // File:src/lights/Light.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.Light = function (color) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n};\n\nTHREE.Light.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Light.prototype.constructor = THREE.Light;\n\nTHREE.Light.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  return this;\n}; // File:src/lights/AmbientLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.AmbientLight = function (color) {\n  THREE.Light.call(this, color);\n  this.type = 'AmbientLight';\n};\n\nTHREE.AmbientLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\n\nTHREE.AmbientLight.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  return data;\n}; // File:src/lights/DirectionalLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.DirectionalLight = function (color, intensity) {\n  THREE.Light.call(this, color);\n  this.type = 'DirectionalLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.target = new THREE.Object3D();\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.castShadow = false;\n  this.onlyShadow = false;\n  this.shadowCameraNear = 50;\n  this.shadowCameraFar = 5000;\n  this.shadowCameraLeft = -500;\n  this.shadowCameraRight = 500;\n  this.shadowCameraTop = 500;\n  this.shadowCameraBottom = -500;\n  this.shadowCameraVisible = false;\n  this.shadowBias = 0;\n  this.shadowDarkness = 0.5;\n  this.shadowMapWidth = 512;\n  this.shadowMapHeight = 512;\n  this.shadowMap = null;\n  this.shadowMapSize = null;\n  this.shadowCamera = null;\n  this.shadowMatrix = null;\n};\n\nTHREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\n\nTHREE.DirectionalLight.prototype.copy = function (source) {\n  THREE.Light.prototype.copy.call(this, source);\n  this.intensity = source.intensity;\n  this.target = source.target.clone();\n  this.castShadow = source.castShadow;\n  this.onlyShadow = source.onlyShadow;\n  this.shadowCameraNear = source.shadowCameraNear;\n  this.shadowCameraFar = source.shadowCameraFar;\n  this.shadowCameraLeft = source.shadowCameraLeft;\n  this.shadowCameraRight = source.shadowCameraRight;\n  this.shadowCameraTop = source.shadowCameraTop;\n  this.shadowCameraBottom = source.shadowCameraBottom;\n  this.shadowCameraVisible = source.shadowCameraVisible;\n  this.shadowBias = source.shadowBias;\n  this.shadowDarkness = source.shadowDarkness;\n  this.shadowMapWidth = source.shadowMapWidth;\n  this.shadowMapHeight = source.shadowMapHeight;\n  return this;\n};\n\nTHREE.DirectionalLight.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.intensity = this.intensity;\n  return data;\n}; // File:src/lights/HemisphereLight.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.HemisphereLight = function (skyColor, groundColor, intensity) {\n  THREE.Light.call(this, skyColor);\n  this.type = 'HemisphereLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.groundColor = new THREE.Color(groundColor);\n  this.intensity = intensity !== undefined ? intensity : 1;\n};\n\nTHREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\n\nTHREE.HemisphereLight.prototype.copy = function (source) {\n  THREE.Light.prototype.copy.call(this, source);\n  this.groundColor.copy(source.groundColor);\n  this.intensity = source.intensity;\n  return this;\n};\n\nTHREE.HemisphereLight.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.groundColor = this.groundColor.getHex();\n  data.object.intensity = this.intensity;\n  return data;\n}; // File:src/lights/PointLight.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.PointLight = function (color, intensity, distance, decay) {\n  THREE.Light.call(this, color);\n  this.type = 'PointLight';\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.distance = distance !== undefined ? distance : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n};\n\nTHREE.PointLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\n\nTHREE.PointLight.prototype.copy = function (source) {\n  THREE.Light.prototype.copy.call(this, source);\n  this.intensity = source.intensity;\n  this.distance = source.distance;\n  this.decay = source.decay;\n  return this;\n};\n\nTHREE.PointLight.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.intensity = this.intensity;\n  data.object.distance = this.distance;\n  data.object.decay = this.decay;\n  return data;\n}; // File:src/lights/SpotLight.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.SpotLight = function (color, intensity, distance, angle, exponent, decay) {\n  THREE.Light.call(this, color);\n  this.type = 'SpotLight';\n  this.position.set(0, 1, 0);\n  this.updateMatrix();\n  this.target = new THREE.Object3D();\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.distance = distance !== undefined ? distance : 0;\n  this.angle = angle !== undefined ? angle : Math.PI / 3;\n  this.exponent = exponent !== undefined ? exponent : 10;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.castShadow = false;\n  this.onlyShadow = false;\n  this.shadowCameraNear = 50;\n  this.shadowCameraFar = 5000;\n  this.shadowCameraFov = 50;\n  this.shadowCameraVisible = false;\n  this.shadowBias = 0;\n  this.shadowDarkness = 0.5;\n  this.shadowMapWidth = 512;\n  this.shadowMapHeight = 512;\n  this.shadowMap = null;\n  this.shadowMapSize = null;\n  this.shadowCamera = null;\n  this.shadowMatrix = null;\n};\n\nTHREE.SpotLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\n\nTHREE.SpotLight.prototype.copy = function (source) {\n  THREE.Light.prototype.copy.call(this, source);\n  this.intensity = source.intensity;\n  this.distance = source.distance;\n  this.angle = source.angle;\n  this.exponent = source.exponent;\n  this.decay = source.decay;\n  this.target = source.target.clone();\n  this.castShadow = source.castShadow;\n  this.onlyShadow = source.onlyShadow;\n  this.shadowCameraNear = source.shadowCameraNear;\n  this.shadowCameraFar = source.shadowCameraFar;\n  this.shadowCameraFov = source.shadowCameraFov;\n  this.shadowCameraVisible = source.shadowCameraVisible;\n  this.shadowBias = source.shadowBias;\n  this.shadowDarkness = source.shadowDarkness;\n  this.shadowMapWidth = source.shadowMapWidth;\n  this.shadowMapHeight = source.shadowMapHeight;\n  return this;\n};\n\nTHREE.SpotLight.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.color = this.color.getHex();\n  data.object.intensity = this.intensity;\n  data.object.distance = this.distance;\n  data.object.angle = this.angle;\n  data.object.exponent = this.exponent;\n  data.object.decay = this.decay;\n  return data;\n}; // File:src/loaders/Cache.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Cache = {\n  enabled: false,\n  files: {},\n  add: function (key, file) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n  get: function (key) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n  remove: function (key) {\n    delete this.files[key];\n  },\n  clear: function () {\n    this.files = {};\n  }\n}; // File:src/loaders/Loader.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Loader = function () {\n  this.onLoadStart = function () {};\n\n  this.onLoadProgress = function () {};\n\n  this.onLoadComplete = function () {};\n};\n\nTHREE.Loader.prototype = {\n  constructor: THREE.Loader,\n  crossOrigin: undefined,\n  extractUrlBase: function (url) {\n    var parts = url.split('/');\n    if (parts.length === 1) return './';\n    parts.pop();\n    return parts.join('/') + '/';\n  },\n  initMaterials: function (materials, texturePath, crossOrigin) {\n    var array = [];\n\n    for (var i = 0; i < materials.length; ++i) {\n      array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n    }\n\n    return array;\n  },\n  createMaterial: function () {\n    var imageLoader;\n    return function createMaterial(m, texturePath, crossOrigin) {\n      var scope = this;\n      if (crossOrigin === undefined && scope.crossOrigin !== undefined) crossOrigin = scope.crossOrigin;\n      if (imageLoader === undefined) imageLoader = new THREE.ImageLoader();\n\n      function nearest_pow2(n) {\n        var l = Math.log(n) / Math.LN2;\n        return Math.pow(2, Math.round(l));\n      }\n\n      function create_texture(where, name, sourceFile, repeat, offset, wrap, anisotropy) {\n        var fullPath = texturePath + sourceFile;\n        var texture;\n        var loader = THREE.Loader.Handlers.get(fullPath);\n\n        if (loader !== null) {\n          texture = loader.load(fullPath);\n        } else {\n          texture = new THREE.Texture();\n          loader = imageLoader;\n          loader.setCrossOrigin(crossOrigin);\n          loader.load(fullPath, function (image) {\n            if (THREE.Math.isPowerOfTwo(image.width) === false || THREE.Math.isPowerOfTwo(image.height) === false) {\n              var width = nearest_pow2(image.width);\n              var height = nearest_pow2(image.height);\n              var canvas = document.createElement('canvas');\n              canvas.width = width;\n              canvas.height = height;\n              var context = canvas.getContext('2d');\n              context.drawImage(image, 0, 0, width, height);\n              texture.image = canvas;\n            } else {\n              texture.image = image;\n            }\n\n            texture.needsUpdate = true;\n          });\n        }\n\n        texture.sourceFile = sourceFile;\n\n        if (repeat) {\n          texture.repeat.set(repeat[0], repeat[1]);\n          if (repeat[0] !== 1) texture.wrapS = THREE.RepeatWrapping;\n          if (repeat[1] !== 1) texture.wrapT = THREE.RepeatWrapping;\n        }\n\n        if (offset) {\n          texture.offset.set(offset[0], offset[1]);\n        }\n\n        if (wrap) {\n          var wrapMap = {\n            'repeat': THREE.RepeatWrapping,\n            'mirror': THREE.MirroredRepeatWrapping\n          };\n          if (wrapMap[wrap[0]] !== undefined) texture.wrapS = wrapMap[wrap[0]];\n          if (wrapMap[wrap[1]] !== undefined) texture.wrapT = wrapMap[wrap[1]];\n        }\n\n        if (anisotropy) {\n          texture.anisotropy = anisotropy;\n        }\n\n        where[name] = texture;\n      }\n\n      function rgb2hex(rgb) {\n        return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + rgb[2] * 255;\n      } // defaults\n\n\n      var mtype = 'MeshLambertMaterial';\n      var mpars = {}; // parameters from model file\n\n      if (m.shading) {\n        var shading = m.shading.toLowerCase();\n        if (shading === 'phong') mtype = 'MeshPhongMaterial';else if (shading === 'basic') mtype = 'MeshBasicMaterial';\n      }\n\n      if (m.blending !== undefined && THREE[m.blending] !== undefined) {\n        mpars.blending = THREE[m.blending];\n      }\n\n      if (m.transparent !== undefined) {\n        mpars.transparent = m.transparent;\n      }\n\n      if (m.opacity !== undefined && m.opacity < 1.0) {\n        mpars.transparent = true;\n      }\n\n      if (m.depthTest !== undefined) {\n        mpars.depthTest = m.depthTest;\n      }\n\n      if (m.depthWrite !== undefined) {\n        mpars.depthWrite = m.depthWrite;\n      }\n\n      if (m.visible !== undefined) {\n        mpars.visible = m.visible;\n      }\n\n      if (m.flipSided !== undefined) {\n        mpars.side = THREE.BackSide;\n      }\n\n      if (m.doubleSided !== undefined) {\n        mpars.side = THREE.DoubleSide;\n      }\n\n      if (m.wireframe !== undefined) {\n        mpars.wireframe = m.wireframe;\n      }\n\n      if (m.vertexColors !== undefined) {\n        if (m.vertexColors === 'face') {\n          mpars.vertexColors = THREE.FaceColors;\n        } else if (m.vertexColors) {\n          mpars.vertexColors = THREE.VertexColors;\n        }\n      } // colors\n\n\n      if (m.colorDiffuse) {\n        mpars.color = rgb2hex(m.colorDiffuse);\n      } else if (m.DbgColor) {\n        mpars.color = m.DbgColor;\n      }\n\n      if (m.colorEmissive) {\n        mpars.emissive = rgb2hex(m.colorEmissive);\n      }\n\n      if (mtype === 'MeshPhongMaterial') {\n        if (m.colorSpecular) {\n          mpars.specular = rgb2hex(m.colorSpecular);\n        }\n\n        if (m.specularCoef) {\n          mpars.shininess = m.specularCoef;\n        }\n      } // modifiers\n\n\n      if (m.transparency !== undefined) {\n        console.warn('THREE.Loader: transparency has been renamed to opacity');\n        m.opacity = m.transparency;\n      }\n\n      if (m.opacity !== undefined) {\n        mpars.opacity = m.opacity;\n      } // textures\n\n\n      if (texturePath) {\n        if (m.mapDiffuse) {\n          create_texture(mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n        }\n\n        if (m.mapLight) {\n          create_texture(mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n        }\n\n        if (m.mapAO) {\n          create_texture(mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n        }\n\n        if (m.mapBump) {\n          create_texture(mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n        }\n\n        if (m.mapNormal) {\n          create_texture(mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n        }\n\n        if (m.mapSpecular) {\n          create_texture(mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n        }\n\n        if (m.mapAlpha) {\n          create_texture(mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n        }\n      } //\n\n\n      if (m.mapBumpScale) {\n        mpars.bumpScale = m.mapBumpScale;\n      }\n\n      if (m.mapNormalFactor) {\n        mpars.normalScale = new THREE.Vector2(m.mapNormalFactor, m.mapNormalFactor);\n      }\n\n      var material = new THREE[mtype](mpars);\n      if (m.DbgName !== undefined) material.name = m.DbgName;\n      return material;\n    };\n  }()\n};\nTHREE.Loader.Handlers = {\n  handlers: [],\n  add: function (regex, loader) {\n    this.handlers.push(regex, loader);\n  },\n  get: function (file) {\n    for (var i = 0, l = this.handlers.length; i < l; i += 2) {\n      var regex = this.handlers[i];\n      var loader = this.handlers[i + 1];\n\n      if (regex.test(file)) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n}; // File:src/loaders/XHRLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.XHRLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.XHRLoader.prototype = {\n  constructor: THREE.XHRLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var cached = THREE.Cache.get(url);\n\n    if (cached !== undefined) {\n      if (onLoad) {\n        setTimeout(function () {\n          onLoad(cached);\n        }, 0);\n      }\n\n      return cached;\n    }\n\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n      THREE.Cache.add(url, this.response);\n      if (onLoad) onLoad(this.response);\n      scope.manager.itemEnd(url);\n    }, false);\n\n    if (onProgress !== undefined) {\n      request.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    request.addEventListener('error', function (event) {\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n    }, false);\n    if (this.crossOrigin !== undefined) request.crossOrigin = this.crossOrigin;\n    if (this.responseType !== undefined) request.responseType = this.responseType;\n    if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n    request.send(null);\n    scope.manager.itemStart(url);\n    return request;\n  },\n  setResponseType: function (value) {\n    this.responseType = value;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  setWithCredentials: function (value) {\n    this.withCredentials = value;\n  }\n}; // File:src/loaders/ImageLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.ImageLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.ImageLoader.prototype = {\n  constructor: THREE.ImageLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var cached = THREE.Cache.get(url);\n\n    if (cached !== undefined) {\n      if (onLoad) {\n        setTimeout(function () {\n          onLoad(cached);\n        }, 0);\n      }\n\n      return cached;\n    }\n\n    var image = document.createElement('img');\n    image.addEventListener('load', function (event) {\n      THREE.Cache.add(url, this);\n      if (onLoad) onLoad(this);\n      scope.manager.itemEnd(url);\n    }, false);\n\n    if (onProgress !== undefined) {\n      image.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    image.addEventListener('error', function (event) {\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n    }, false);\n    if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    scope.manager.itemStart(url);\n    image.src = url;\n    return image;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  }\n}; // File:src/loaders/JSONLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.JSONLoader = function (manager) {\n  if (typeof manager === 'boolean') {\n    console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n    manager = undefined;\n  }\n\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.withCredentials = false;\n};\n\nTHREE.JSONLoader.prototype = {\n  constructor: THREE.JSONLoader,\n\n  // Deprecated\n  get statusDomElement() {\n    if (this._statusDomElement === undefined) {\n      this._statusDomElement = document.createElement('div');\n    }\n\n    console.warn('THREE.JSONLoader: .statusDomElement has been removed.');\n    return this._statusDomElement;\n  },\n\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texturePath = this.texturePath && typeof this.texturePath === \"string\" ? this.texturePath : THREE.Loader.prototype.extractUrlBase(url);\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      var json = JSON.parse(text);\n      var metadata = json.metadata;\n\n      if (metadata !== undefined) {\n        if (metadata.type === 'object') {\n          console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n          return;\n        }\n\n        if (metadata.type === 'scene') {\n          console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.');\n          return;\n        }\n      }\n\n      var object = scope.parse(json, texturePath);\n      onLoad(object.geometry, object.materials);\n    });\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n  },\n  parse: function (json, texturePath) {\n    var geometry = new THREE.Geometry(),\n        scale = json.scale !== undefined ? 1.0 / json.scale : 1.0;\n    parseModel(scale);\n    parseSkin();\n    parseMorphing(scale);\n    geometry.computeFaceNormals();\n    geometry.computeBoundingSphere();\n\n    function parseModel(scale) {\n      function isBitSet(value, position) {\n        return value & 1 << position;\n      }\n\n      var i,\n          j,\n          fi,\n          offset,\n          zLength,\n          colorIndex,\n          normalIndex,\n          uvIndex,\n          materialIndex,\n          type,\n          isQuad,\n          hasMaterial,\n          hasFaceVertexUv,\n          hasFaceNormal,\n          hasFaceVertexNormal,\n          hasFaceColor,\n          hasFaceVertexColor,\n          vertex,\n          face,\n          faceA,\n          faceB,\n          hex,\n          normal,\n          uvLayer,\n          uv,\n          u,\n          v,\n          faces = json.faces,\n          vertices = json.vertices,\n          normals = json.normals,\n          colors = json.colors,\n          nUvLayers = 0;\n\n      if (json.uvs !== undefined) {\n        // disregard empty arrays\n        for (i = 0; i < json.uvs.length; i++) {\n          if (json.uvs[i].length) nUvLayers++;\n        }\n\n        for (i = 0; i < nUvLayers; i++) {\n          geometry.faceVertexUvs[i] = [];\n        }\n      }\n\n      offset = 0;\n      zLength = vertices.length;\n\n      while (offset < zLength) {\n        vertex = new THREE.Vector3();\n        vertex.x = vertices[offset++] * scale;\n        vertex.y = vertices[offset++] * scale;\n        vertex.z = vertices[offset++] * scale;\n        geometry.vertices.push(vertex);\n      }\n\n      offset = 0;\n      zLength = faces.length;\n\n      while (offset < zLength) {\n        type = faces[offset++];\n        isQuad = isBitSet(type, 0);\n        hasMaterial = isBitSet(type, 1);\n        hasFaceVertexUv = isBitSet(type, 3);\n        hasFaceNormal = isBitSet(type, 4);\n        hasFaceVertexNormal = isBitSet(type, 5);\n        hasFaceColor = isBitSet(type, 6);\n        hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n        if (isQuad) {\n          faceA = new THREE.Face3();\n          faceA.a = faces[offset];\n          faceA.b = faces[offset + 1];\n          faceA.c = faces[offset + 3];\n          faceB = new THREE.Face3();\n          faceB.a = faces[offset + 1];\n          faceB.b = faces[offset + 2];\n          faceB.c = faces[offset + 3];\n          offset += 4;\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            faceA.materialIndex = materialIndex;\n            faceB.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n              geometry.faceVertexUvs[i][fi + 1] = [];\n\n              for (j = 0; j < 4; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new THREE.Vector2(u, v);\n                if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            faceB.normal.copy(faceA.normal);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 4; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              if (i !== 2) faceA.vertexNormals.push(normal);\n              if (i !== 0) faceB.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            hex = colors[colorIndex];\n            faceA.color.setHex(hex);\n            faceB.color.setHex(hex);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 4; i++) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              if (i !== 2) faceA.vertexColors.push(new THREE.Color(hex));\n              if (i !== 0) faceB.vertexColors.push(new THREE.Color(hex));\n            }\n          }\n\n          geometry.faces.push(faceA);\n          geometry.faces.push(faceB);\n        } else {\n          face = new THREE.Face3();\n          face.a = faces[offset++];\n          face.b = faces[offset++];\n          face.c = faces[offset++];\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            face.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n\n              for (j = 0; j < 3; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new THREE.Vector2(u, v);\n                geometry.faceVertexUvs[i][fi].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 3; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              face.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            face.color.setHex(colors[colorIndex]);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 3; i++) {\n              colorIndex = faces[offset++];\n              face.vertexColors.push(new THREE.Color(colors[colorIndex]));\n            }\n          }\n\n          geometry.faces.push(face);\n        }\n      }\n    }\n\n    ;\n\n    function parseSkin() {\n      var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n      if (json.skinWeights) {\n        for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n          var x = json.skinWeights[i];\n          var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n          var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n          var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n          geometry.skinWeights.push(new THREE.Vector4(x, y, z, w));\n        }\n      }\n\n      if (json.skinIndices) {\n        for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n          var a = json.skinIndices[i];\n          var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n          var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n          var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n          geometry.skinIndices.push(new THREE.Vector4(a, b, c, d));\n        }\n      }\n\n      geometry.bones = json.bones;\n\n      if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n        console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n      } // could change this to json.animations[0] or remove completely\n\n\n      geometry.animation = json.animation;\n      geometry.animations = json.animations;\n    }\n\n    ;\n\n    function parseMorphing(scale) {\n      if (json.morphTargets !== undefined) {\n        var i, l, v, vl, dstVertices, srcVertices;\n\n        for (i = 0, l = json.morphTargets.length; i < l; i++) {\n          geometry.morphTargets[i] = {};\n          geometry.morphTargets[i].name = json.morphTargets[i].name;\n          geometry.morphTargets[i].vertices = [];\n          dstVertices = geometry.morphTargets[i].vertices;\n          srcVertices = json.morphTargets[i].vertices;\n\n          for (v = 0, vl = srcVertices.length; v < vl; v += 3) {\n            var vertex = new THREE.Vector3();\n            vertex.x = srcVertices[v] * scale;\n            vertex.y = srcVertices[v + 1] * scale;\n            vertex.z = srcVertices[v + 2] * scale;\n            dstVertices.push(vertex);\n          }\n        }\n      }\n\n      if (json.morphColors !== undefined) {\n        var i, l, c, cl, dstColors, srcColors, color;\n\n        for (i = 0, l = json.morphColors.length; i < l; i++) {\n          geometry.morphColors[i] = {};\n          geometry.morphColors[i].name = json.morphColors[i].name;\n          geometry.morphColors[i].colors = [];\n          dstColors = geometry.morphColors[i].colors;\n          srcColors = json.morphColors[i].colors;\n\n          for (c = 0, cl = srcColors.length; c < cl; c += 3) {\n            color = new THREE.Color(0xffaa00);\n            color.setRGB(srcColors[c], srcColors[c + 1], srcColors[c + 2]);\n            dstColors.push(color);\n          }\n        }\n      }\n    }\n\n    ;\n\n    if (json.materials === undefined || json.materials.length === 0) {\n      return {\n        geometry: geometry\n      };\n    } else {\n      var materials = THREE.Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n      return {\n        geometry: geometry,\n        materials: materials\n      };\n    }\n  }\n}; // File:src/loaders/LoadingManager.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LoadingManager = function (onLoad, onProgress, onError) {\n  var scope = this;\n  var isLoading = false,\n      itemsLoaded = 0,\n      itemsTotal = 0;\n  this.onStart = undefined;\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function (url) {\n    itemsTotal++;\n\n    if (isLoading === false) {\n      if (scope.onStart !== undefined) {\n        scope.onStart(url, itemsLoaded, itemsTotal);\n      }\n    }\n\n    isLoading = true;\n  };\n\n  this.itemEnd = function (url) {\n    itemsLoaded++;\n\n    if (scope.onProgress !== undefined) {\n      scope.onProgress(url, itemsLoaded, itemsTotal);\n    }\n\n    if (itemsLoaded === itemsTotal) {\n      isLoading = false;\n\n      if (scope.onLoad !== undefined) {\n        scope.onLoad();\n      }\n    }\n  };\n\n  this.itemError = function (url) {\n    if (scope.onError !== undefined) {\n      scope.onError(url);\n    }\n  };\n};\n\nTHREE.DefaultLoadingManager = new THREE.LoadingManager(); // File:src/loaders/BufferGeometryLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.BufferGeometryLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.BufferGeometryLoader.prototype = {\n  constructor: THREE.BufferGeometryLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  parse: function (json) {\n    var geometry = new THREE.BufferGeometry();\n    var index = json.data.index;\n\n    if (index !== undefined) {\n      var typedArray = new self[index.type](index.array);\n      geometry.setIndex(new THREE.BufferAttribute(typedArray, 1));\n    }\n\n    var attributes = json.data.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var typedArray = new self[attribute.type](attribute.array);\n      geometry.addAttribute(key, new THREE.BufferAttribute(typedArray, attribute.itemSize));\n    }\n\n    var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (var i = 0, n = groups.length; i !== n; ++i) {\n        var group = groups[i];\n        geometry.addGroup(group.start, group.count);\n      }\n    }\n\n    var boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new THREE.Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new THREE.Sphere(center, boundingSphere.radius);\n    }\n\n    return geometry;\n  }\n}; // File:src/loaders/MaterialLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.MaterialLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.textures = {};\n};\n\nTHREE.MaterialLoader.prototype = {\n  constructor: THREE.MaterialLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  setTextures: function (value) {\n    this.textures = value;\n  },\n  getTexture: function (name) {\n    var textures = this.textures;\n\n    if (textures[name] === undefined) {\n      console.warn('THREE.MaterialLoader: Undefined texture', name);\n    }\n\n    return textures[name];\n  },\n  parse: function (json) {\n    var material = new THREE[json.type]();\n    material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n    if (json.shading !== undefined) material.shading = json.shading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth; // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n    if (json.map !== undefined) material.map = this.getTexture(json.map);\n\n    if (json.alphaMap !== undefined) {\n      material.alphaMap = this.getTexture(json.alphaMap);\n      material.transparent = true;\n    }\n\n    if (json.bumpMap !== undefined) material.bumpMap = this.getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = this.getTexture(json.normalMap);\n    if (json.normalScale) material.normalScale = new THREE.Vector2(json.normalScale, json.normalScale);\n    if (json.displacementMap !== undefined) material.displacementMap = this.getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.specularMap !== undefined) material.specularMap = this.getTexture(json.specularMap);\n\n    if (json.envMap !== undefined) {\n      material.envMap = this.getTexture(json.envMap);\n      material.combine = THREE.MultiplyOperation;\n    }\n\n    if (json.reflectivity) material.reflectivity = json.reflectivity;\n    if (json.lightMap !== undefined) material.lightMap = this.getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = this.getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity; // MeshFaceMaterial\n\n    if (json.materials !== undefined) {\n      for (var i = 0, l = json.materials.length; i < l; i++) {\n        material.materials.push(this.parse(json.materials[i]));\n      }\n    }\n\n    return material;\n  }\n}; // File:src/loaders/ObjectLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.ObjectLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.texturePath = '';\n};\n\nTHREE.ObjectLoader.prototype = {\n  constructor: THREE.ObjectLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    if (this.texturePath === '') {\n      this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n    }\n\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (text) {\n      scope.parse(JSON.parse(text), onLoad);\n    }, onProgress, onError);\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  parse: function (json, onLoad) {\n    var geometries = this.parseGeometries(json.geometries);\n    var images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    var textures = this.parseTextures(json.textures, images);\n    var materials = this.parseMaterials(json.materials, textures);\n    var object = this.parseObject(json.object, geometries, materials);\n\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n\n    return object;\n  },\n  parseGeometries: function (json) {\n    var geometries = {};\n\n    if (json !== undefined) {\n      var geometryLoader = new THREE.JSONLoader();\n      var bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new THREE[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new THREE.BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleBufferGeometry':\n            geometry = new THREE.CircleBufferGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CircleGeometry':\n            geometry = new THREE.CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CylinderGeometry':\n            geometry = new THREE.CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereGeometry':\n            geometry = new THREE.SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereBufferGeometry':\n            geometry = new THREE.SphereBufferGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'DodecahedronGeometry':\n            geometry = new THREE.DodecahedronGeometry(data.radius, data.detail);\n            break;\n\n          case 'IcosahedronGeometry':\n            geometry = new THREE.IcosahedronGeometry(data.radius, data.detail);\n            break;\n\n          case 'OctahedronGeometry':\n            geometry = new THREE.OctahedronGeometry(data.radius, data.detail);\n            break;\n\n          case 'TetrahedronGeometry':\n            geometry = new THREE.TetrahedronGeometry(data.radius, data.detail);\n            break;\n\n          case 'RingGeometry':\n            geometry = new THREE.RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'TorusGeometry':\n            geometry = new THREE.TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n            geometry = new THREE.TorusKnotGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.p, data.q, data.heightScale);\n            break;\n\n          case 'TextGeometry':\n            geometry = new THREE.TextGeometry(data.text, data.data);\n            break;\n\n          case 'BufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n\n          case 'Geometry':\n            geometry = geometryLoader.parse(data.data, this.texturePath).geometry;\n            break;\n\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  },\n  parseMaterials: function (json, textures) {\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new THREE.MaterialLoader();\n      loader.setTextures(textures);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var material = loader.parse(json[i]);\n        materials[material.uuid] = material;\n      }\n    }\n\n    return materials;\n  },\n  parseImages: function (json, onLoad) {\n    var scope = this;\n    var images = {};\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      });\n    }\n\n    if (json !== undefined && json.length > 0) {\n      var manager = new THREE.LoadingManager(onLoad);\n      var loader = new THREE.ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var image = json[i];\n        var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n        images[image.uuid] = loadImage(path);\n      }\n    }\n\n    return images;\n  },\n  parseTextures: function (json, images) {\n    function parseConstant(value) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return THREE[value];\n    }\n\n    var textures = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n\n        var texture = new THREE.Texture(images[data.image]);\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping);\n        if (data.offset !== undefined) texture.offset = new THREE.Vector2(data.offset[0], data.offset[1]);\n        if (data.repeat !== undefined) texture.repeat = new THREE.Vector2(data.repeat[0], data.repeat[1]);\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\n        if (Array.isArray(data.wrap)) {\n          texture.wrapS = parseConstant(data.wrap[0]);\n          texture.wrapT = parseConstant(data.wrap[1]);\n        }\n\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  },\n  parseObject: function () {\n    var matrix = new THREE.Matrix4();\n    return function (data, geometries, materials) {\n      var object;\n\n      var getGeometry = function (name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      };\n\n      var getMaterial = function (name) {\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      };\n\n      switch (data.type) {\n        case 'Scene':\n          object = new THREE.Scene();\n          break;\n\n        case 'PerspectiveCamera':\n          object = new THREE.PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          break;\n\n        case 'OrthographicCamera':\n          object = new THREE.OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          break;\n\n        case 'AmbientLight':\n          object = new THREE.AmbientLight(data.color);\n          break;\n\n        case 'DirectionalLight':\n          object = new THREE.DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new THREE.PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'SpotLight':\n          object = new THREE.SpotLight(data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new THREE.HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'Mesh':\n          object = new THREE.Mesh(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LOD':\n          object = new THREE.LOD();\n          break;\n\n        case 'Line':\n          object = new THREE.Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new THREE.Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new THREE.Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new THREE.Group();\n          break;\n\n        default:\n          object = new THREE.Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        matrix.fromArray(data.matrix);\n        matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.userData !== undefined) object.userData = data.userData;\n\n      if (data.children !== undefined) {\n        for (var child in data.children) {\n          object.add(this.parseObject(data.children[child], geometries, materials));\n        }\n      }\n\n      if (data.type === 'LOD') {\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    };\n  }()\n}; // File:src/loaders/TextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.TextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.TextureLoader.prototype = {\n  constructor: THREE.TextureLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.ImageLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (image) {\n      var texture = new THREE.Texture(image);\n      texture.needsUpdate = true;\n\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  }\n}; // File:src/loaders/BinaryTextureLoader.js\n\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\n\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n};\n\nTHREE.BinaryTextureLoader.prototype = {\n  constructor: THREE.BinaryTextureLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texture = new THREE.DataTexture();\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var texData = scope._parser(buffer);\n\n      if (!texData) return;\n\n      if (undefined !== texData.image) {\n        texture.image = texData.image;\n      } else if (undefined !== texData.data) {\n        texture.image.width = texData.width;\n        texture.image.height = texData.height;\n        texture.image.data = texData.data;\n      }\n\n      texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\n      texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\n      texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\n      texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\n      texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n      if (undefined !== texData.format) {\n        texture.format = texData.format;\n      }\n\n      if (undefined !== texData.type) {\n        texture.type = texData.type;\n      }\n\n      if (undefined !== texData.mipmaps) {\n        texture.mipmaps = texData.mipmaps;\n      }\n\n      if (1 === texData.mipmapCount) {\n        texture.minFilter = THREE.LinearFilter;\n      }\n\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture, texData);\n    }, onProgress, onError);\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  }\n}; // File:src/loaders/CompressedTextureLoader.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\n\nTHREE.CompressedTextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n};\n\nTHREE.CompressedTextureLoader.prototype = {\n  constructor: THREE.CompressedTextureLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var images = [];\n    var texture = new THREE.CompressedTexture();\n    texture.image = images;\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setResponseType('arraybuffer');\n\n    if (Array.isArray(url)) {\n      var loaded = 0;\n\n      var loadTexture = function (i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = THREE.LinearFilter;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, onProgress, onError);\n      };\n\n      for (var i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n      loader.load(url, function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        if (texDatas.isCubemap) {\n          var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n          for (var f = 0; f < faces; f++) {\n            images[f] = {\n              mipmaps: []\n            };\n\n            for (var i = 0; i < texDatas.mipmapCount; i++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = THREE.LinearFilter;\n        }\n\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      }, onProgress, onError);\n    }\n\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  }\n}; // File:src/materials/Material.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Material = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.MaterialIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.side = THREE.FrontSide;\n  this.opacity = 1;\n  this.transparent = false;\n  this.blending = THREE.NormalBlending;\n  this.blendSrc = THREE.SrcAlphaFactor;\n  this.blendDst = THREE.OneMinusSrcAlphaFactor;\n  this.blendEquation = THREE.AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = THREE.LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.alphaTest = 0;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this._needsUpdate = true;\n};\n\nTHREE.Material.prototype = {\n  constructor: THREE.Material,\n\n  get needsUpdate() {\n    return this._needsUpdate;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.update();\n    this._needsUpdate = value;\n  },\n\n  setValues: function (values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      }\n\n      var currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n        continue;\n      }\n\n      if (currentValue instanceof THREE.Color) {\n        currentValue.set(newValue);\n      } else if (currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function (meta) {\n    var data = {\n      metadata: {\n        version: 4.4,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color instanceof THREE.Color) data.color = this.color.getHex();\n    if (this.emissive instanceof THREE.Color) data.emissive = this.emissive.getHex();\n    if (this.specular instanceof THREE.Color) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.map instanceof THREE.Texture) data.map = this.map.toJSON(meta).uuid;\n    if (this.alphaMap instanceof THREE.Texture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap instanceof THREE.Texture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n    if (this.bumpMap instanceof THREE.Texture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap instanceof THREE.Texture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\n    }\n\n    if (this.displacementMap instanceof THREE.Texture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.specularMap instanceof THREE.Texture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap instanceof THREE.Texture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors) data.vertexColors = this.vertexColors;\n    if (this.shading !== undefined && this.shading !== THREE.SmoothShading) data.shading = this.shading;\n    if (this.blending !== undefined && this.blending !== THREE.NormalBlending) data.blending = this.blending;\n    if (this.side !== undefined && this.side !== THREE.FrontSide) data.side = this.side;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.side = source.side;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blending = source.blending;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.alphaTest = source.alphaTest;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    return this;\n  },\n  update: function () {\n    this.dispatchEvent({\n      type: 'update'\n    });\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n\n  // Deprecated\n  get wrapAround() {\n    console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n  },\n\n  set wrapAround(boolean) {\n    console.warn('THREE.' + this.type + ': .wrapAround has been removed.');\n  },\n\n  get wrapRGB() {\n    console.warn('THREE.' + this.type + ': .wrapRGB has been removed.');\n    return new THREE.Color();\n  }\n\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Material.prototype);\nTHREE.MaterialIdCount = 0; // File:src/materials/LineBasicMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\n\nTHREE.LineBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\nTHREE.LineBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/LineDashedMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\n\n\nTHREE.LineDashedMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineDashedMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.vertexColors = false;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\nTHREE.LineDashedMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.scale = source.scale;\n  this.dashSize = source.dashSize;\n  this.gapSize = source.gapSize;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // File:src/materials/MeshBasicMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new THREE.Color(0xffffff); // emissive\n\n  this.map = null;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\nTHREE.MeshBasicMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  return this;\n}; // File:src/materials/MeshLambertMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshLambertMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.emissive = new THREE.Color(0x000000);\n  this.map = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\nTHREE.MeshLambertMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.emissive.copy(source.emissive);\n  this.map = source.map;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshPhongMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\n\n\nTHREE.MeshPhongMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.emissive = new THREE.Color(0x000000);\n  this.specular = new THREE.Color(0x111111);\n  this.shininess = 30;\n  this.metal = false;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\nTHREE.MeshPhongMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.emissive.copy(source.emissive);\n  this.specular.copy(source.specular);\n  this.shininess = source.shininess;\n  this.metal = source.metal;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissiveMap = source.emissiveMap;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.fog = source.fog;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n}; // File:src/materials/MeshDepthMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\n\n\nTHREE.MeshDepthMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.morphTargets = false;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.setValues(parameters);\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\nTHREE.MeshDepthMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MeshNormalMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\n\n\nTHREE.MeshNormalMaterial = function (parameters) {\n  THREE.Material.call(this, parameters);\n  this.type = 'MeshNormalMaterial';\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\nTHREE.MeshNormalMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n}; // File:src/materials/MultiMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.MultiMaterial = function (materials) {\n  this.uuid = THREE.Math.generateUUID();\n  this.type = 'MultiMaterial';\n  this.materials = materials instanceof Array ? materials : [];\n  this.visible = true;\n};\n\nTHREE.MultiMaterial.prototype = {\n  constructor: THREE.MultiMaterial,\n  toJSON: function () {\n    var output = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      materials: []\n    };\n\n    for (var i = 0, l = this.materials.length; i < l; i++) {\n      output.materials.push(this.materials[i].toJSON());\n    }\n\n    output.visible = this.visible;\n    return output;\n  },\n  clone: function () {\n    var material = new this.constructor();\n\n    for (var i = 0; i < this.materials.length; i++) {\n      material.materials.push(this.materials[i].clone());\n    }\n\n    material.visible = this.visible;\n    return material;\n  }\n}; // backwards compatibility\n\nTHREE.MeshFaceMaterial = THREE.MultiMaterial; // File:src/materials/PointsMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\n\nTHREE.PointsMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\nTHREE.PointsMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.vertexColors = source.vertexColors;\n  this.fog = source.fog;\n  return this;\n}; // backwards compatibility\n\n\nTHREE.PointCloudMaterial = function (parameters) {\n  console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n  return new THREE.PointsMaterial(parameters);\n};\n\nTHREE.ParticleBasicMaterial = function (parameters) {\n  console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n  return new THREE.PointsMaterial(parameters);\n};\n\nTHREE.ParticleSystemMaterial = function (parameters) {\n  console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n  return new THREE.PointsMaterial(parameters);\n}; // File:src/materials/ShaderMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\n\n\nTHREE.ShaderMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.shading = THREE.SmoothShading;\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n\n  this.derivatives = false; // set to use derivatives\n  // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n\n  if (parameters !== undefined) {\n    if (parameters.attributes !== undefined) {\n      console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n    }\n\n    this.setValues(parameters);\n  }\n};\n\nTHREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\nTHREE.ShaderMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n  this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\n  this.attributes = source.attributes;\n  this.defines = source.defines;\n  this.shading = source.shading;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.fog = source.fog;\n  this.lights = source.lights;\n  this.vertexColors = source.vertexColors;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  this.derivatives = source.derivatives;\n  return this;\n};\n\nTHREE.ShaderMaterial.prototype.toJSON = function (meta) {\n  var data = THREE.Material.prototype.toJSON.call(this, meta);\n  data.uniforms = this.uniforms;\n  data.attributes = this.attributes;\n  data.vertexShader = this.vertexShader;\n  data.fragmentShader = this.fragmentShader;\n  return data;\n}; // File:src/materials/RawShaderMaterial.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.RawShaderMaterial = function (parameters) {\n  THREE.ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial; // File:src/materials/SpriteMaterial.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\n\nTHREE.SpriteMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'SpriteMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.rotation = 0;\n  this.fog = false; // set parameters\n\n  this.setValues(parameters);\n};\n\nTHREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\n\nTHREE.SpriteMaterial.prototype.copy = function (source) {\n  THREE.Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.rotation = source.rotation;\n  this.fog = source.fog;\n  return this;\n}; // File:src/textures/Texture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\n\n\nTHREE.Texture = function (image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Object.defineProperty(this, 'id', {\n    value: THREE.TextureIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.sourceFile = '';\n  this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : THREE.RGBAFormat;\n  this.type = type !== undefined ? type : THREE.UnsignedByteType;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n  this.version = 0;\n  this.onUpdate = null;\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\nTHREE.Texture.prototype = {\n  constructor: THREE.Texture,\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  },\n\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    return this;\n  },\n  toJSON: function (meta) {\n    if (meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    function getDataURL(image) {\n      var canvas;\n\n      if (image.toDataURL !== undefined) {\n        canvas = image;\n      } else {\n        canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        canvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n\n    var output = {\n      metadata: {\n        version: 4.4,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      wrap: [this.wrapS, this.wrapT],\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      var image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = THREE.Math.generateUUID(); // UGH\n      }\n\n      if (meta.images[image.uuid] === undefined) {\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: getDataURL(image)\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    meta.textures[this.uuid] = output;\n    return output;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n  transformUv: function (uv) {\n    if (this.mapping !== THREE.UVMapping) return;\n    uv.multiply(this.repeat);\n    uv.add(this.offset);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case THREE.RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case THREE.RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case THREE.ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case THREE.MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);\nTHREE.TextureIdCount = 0; // File:src/textures/CanvasTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CanvasTexture = function (canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.needsUpdate = true;\n};\n\nTHREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture; // File:src/textures/CubeTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.CubeTexture = function (images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  mapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n  THREE.Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.images = images;\n  this.flipY = false;\n};\n\nTHREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\n\nTHREE.CubeTexture.prototype.copy = function (source) {\n  THREE.Texture.prototype.copy.call(this, source);\n  this.images = source.images;\n  return this;\n}; // File:src/textures/CompressedTexture.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n};\n\nTHREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture; // File:src/textures/DataTexture.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.DataTexture = function (data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n};\n\nTHREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture; // File:src/textures/VideoTexture.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.VideoTexture = function (video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n  var scope = this;\n\n  var update = function () {\n    requestAnimationFrame(update);\n\n    if (video.readyState === video.HAVE_ENOUGH_DATA) {\n      scope.needsUpdate = true;\n    }\n  };\n\n  update();\n};\n\nTHREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture; // File:src/objects/Group.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Group = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Group';\n};\n\nTHREE.Group.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Group.prototype.constructor = THREE.Group; // File:src/objects/Points.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Points = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Points';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.PointsMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Points.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Points.prototype.constructor = THREE.Points;\n\nTHREE.Points.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  return function raycast(raycaster, intersects) {\n    var object = this;\n    var geometry = object.geometry;\n    var threshold = raycaster.params.Points.threshold;\n    inverseMatrix.getInverse(this.matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n\n    if (geometry.boundingBox !== null) {\n      if (ray.isIntersectionBox(geometry.boundingBox) === false) {\n        return;\n      }\n    }\n\n    var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    var localThresholdSq = localThreshold * localThreshold;\n    var position = new THREE.Vector3();\n\n    function testPoint(point, index) {\n      var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n      if (rayPointDistanceSq < localThresholdSq) {\n        var intersectPoint = ray.closestPointToPoint(point);\n        intersectPoint.applyMatrix4(object.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n        if (distance < raycaster.near || distance > raycaster.far) return;\n        intersects.push({\n          distance: distance,\n          distanceToRay: Math.sqrt(rayPointDistanceSq),\n          point: intersectPoint.clone(),\n          index: index,\n          face: null,\n          object: object\n        });\n      }\n    }\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (index !== null) {\n        var indices = index.array;\n\n        for (var i = 0, il = indices.length; i < il; i++) {\n          var a = indices[i];\n          position.fromArray(positions, a * 3);\n          testPoint(position, a);\n        }\n      } else {\n        for (var i = 0, l = positions.length / 3; i < l; i++) {\n          position.fromArray(positions, i * 3);\n          testPoint(position, i);\n        }\n      }\n    } else {\n      var vertices = geometry.vertices;\n\n      for (var i = 0, l = vertices.length; i < l; i++) {\n        testPoint(vertices[i], i);\n      }\n    }\n  };\n}();\n\nTHREE.Points.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n};\n\nTHREE.Points.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta); // only serialize if not in meta geometries cache\n\n  if (meta.geometries[this.geometry.uuid] === undefined) {\n    meta.geometries[this.geometry.uuid] = this.geometry.toJSON();\n  } // only serialize if not in meta materials cache\n\n\n  if (meta.materials[this.material.uuid] === undefined) {\n    meta.materials[this.material.uuid] = this.material.toJSON();\n  }\n\n  data.object.geometry = this.geometry.uuid;\n  data.object.material = this.material.uuid;\n  return data;\n}; // Backwards compatibility\n\n\nTHREE.PointCloud = function (geometry, material) {\n  console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n  return new THREE.Points(geometry, material);\n};\n\nTHREE.ParticleSystem = function (geometry, material) {\n  console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n  return new THREE.Points(geometry, material);\n}; // File:src/objects/Line.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Line = function (geometry, material, mode) {\n  if (mode === 1) {\n    console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n    return new THREE.LineSegments(geometry, material);\n  }\n\n  THREE.Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nTHREE.Line.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Line.prototype.constructor = THREE.Line;\n\nTHREE.Line.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  return function raycast(raycaster, intersects) {\n    var precision = raycaster.linePrecision;\n    var precisionSq = precision * precision;\n    var geometry = this.geometry;\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere(); // Checking boundingSphere distance to ray\n\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(this.matrixWorld);\n\n    if (raycaster.ray.isIntersectionSphere(sphere) === false) {\n      return;\n    }\n\n    inverseMatrix.getInverse(this.matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n    var vStart = new THREE.Vector3();\n    var vEnd = new THREE.Vector3();\n    var interSegment = new THREE.Vector3();\n    var interRay = new THREE.Vector3();\n    var step = this instanceof THREE.LineSegments ? 2 : 1;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n\n      if (index !== null) {\n        var indices = index.array;\n        var positions = attributes.position.array;\n\n        for (var i = 0, l = indices.length - 1; i < l; i += step) {\n          var a = indices[i];\n          var b = indices[i + 1];\n          vStart.fromArray(positions, a * 3);\n          vEnd.fromArray(positions, b * 3);\n          var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      } else {\n        var positions = attributes.position.array;\n\n        for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n          vStart.fromArray(positions, 3 * i);\n          vEnd.fromArray(positions, 3 * i + 3);\n          var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    } else if (geometry instanceof THREE.Geometry) {\n      var vertices = geometry.vertices;\n      var nbVertices = vertices.length;\n\n      for (var i = 0; i < nbVertices - 1; i += step) {\n        var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n        if (distSq > precisionSq) continue;\n        interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n        var distance = raycaster.ray.origin.distanceTo(interRay);\n        if (distance < raycaster.near || distance > raycaster.far) continue;\n        intersects.push({\n          distance: distance,\n          // What do we want? intersection point on the ray or on the segment??\n          // point: raycaster.ray.at( distance ),\n          point: interSegment.clone().applyMatrix4(this.matrixWorld),\n          index: i,\n          face: null,\n          faceIndex: null,\n          object: this\n        });\n      }\n    }\n  };\n}();\n\nTHREE.Line.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n};\n\nTHREE.Line.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta); // only serialize if not in meta geometries cache\n\n  if (meta.geometries[this.geometry.uuid] === undefined) {\n    meta.geometries[this.geometry.uuid] = this.geometry.toJSON();\n  } // only serialize if not in meta materials cache\n\n\n  if (meta.materials[this.material.uuid] === undefined) {\n    meta.materials[this.material.uuid] = this.material.toJSON();\n  }\n\n  data.object.geometry = this.geometry.uuid;\n  data.object.material = this.material.uuid;\n  return data;\n}; // DEPRECATED\n\n\nTHREE.LineStrip = 0;\nTHREE.LinePieces = 1; // File:src/objects/LineSegments.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.LineSegments = function (geometry, material) {\n  THREE.Line.call(this, geometry, material);\n  this.type = 'LineSegments';\n};\n\nTHREE.LineSegments.prototype = Object.create(THREE.Line.prototype);\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments; // File:src/objects/Mesh.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\n\nTHREE.Mesh = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.updateMorphTargets();\n};\n\nTHREE.Mesh.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\n\nTHREE.Mesh.prototype.updateMorphTargets = function () {\n  if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {\n    this.morphTargetBase = -1;\n    this.morphTargetInfluences = [];\n    this.morphTargetDictionary = {};\n\n    for (var m = 0, ml = this.geometry.morphTargets.length; m < ml; m++) {\n      this.morphTargetInfluences.push(0);\n      this.morphTargetDictionary[this.geometry.morphTargets[m].name] = m;\n    }\n  }\n};\n\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function (name) {\n  if (this.morphTargetDictionary[name] !== undefined) {\n    return this.morphTargetDictionary[name];\n  }\n\n  console.warn('THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.');\n  return 0;\n};\n\nTHREE.Mesh.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  var vA = new THREE.Vector3();\n  var vB = new THREE.Vector3();\n  var vC = new THREE.Vector3();\n  var tempA = new THREE.Vector3();\n  var tempB = new THREE.Vector3();\n  var tempC = new THREE.Vector3();\n  var uvA = new THREE.Vector2();\n  var uvB = new THREE.Vector2();\n  var uvC = new THREE.Vector2();\n  var barycoord = new THREE.Vector3();\n  var intersectionPoint = new THREE.Vector3();\n  var intersectionPointWorld = new THREE.Vector3();\n\n  function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n    THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n    uv1.multiplyScalar(barycoord.x);\n    uv2.multiplyScalar(barycoord.y);\n    uv3.multiplyScalar(barycoord.z);\n    uv1.add(uv2).add(uv3);\n    return uv1.clone();\n  }\n\n  return function raycast(raycaster, intersects) {\n    var geometry = this.geometry;\n    var material = this.material;\n    if (material === undefined) return; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(this.matrixWorld);\n\n    if (raycaster.ray.isIntersectionSphere(sphere) === false) {\n      return;\n    } // Check boundingBox before continuing\n\n\n    inverseMatrix.getInverse(this.matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n\n    if (geometry.boundingBox !== null) {\n      if (ray.isIntersectionBox(geometry.boundingBox) === false) {\n        return;\n      }\n    }\n\n    var a, b, c;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var index = geometry.index;\n      var attributes = geometry.attributes;\n\n      if (index !== null) {\n        var indices = index.array;\n        var positions = attributes.position.array;\n\n        for (var i = 0, l = indices.length; i < l; i += 3) {\n          a = indices[i];\n          b = indices[i + 1];\n          c = indices[i + 2];\n          vA.fromArray(positions, a * 3);\n          vB.fromArray(positions, b * 3);\n          vC.fromArray(positions, c * 3);\n\n          if (material.side === THREE.BackSide) {\n            if (ray.intersectTriangle(vC, vB, vA, true, intersectionPoint) === null) continue;\n          } else {\n            if (ray.intersectTriangle(vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint) === null) continue;\n          }\n\n          intersectionPointWorld.copy(intersectionPoint);\n          intersectionPointWorld.applyMatrix4(this.matrixWorld);\n          var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          var uv;\n\n          if (attributes.uv !== undefined) {\n            var uvs = attributes.uv.array;\n            uvA.fromArray(uvs, a * 2);\n            uvB.fromArray(uvs, b * 2);\n            uvC.fromArray(uvs, c * 2);\n            uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n          }\n\n          intersects.push({\n            distance: distance,\n            point: intersectionPointWorld.clone(),\n            uv: uv,\n            face: new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC)),\n            faceIndex: Math.floor(i / 3),\n            // triangle number in indices buffer semantics\n            object: this\n          });\n        }\n      } else {\n        var positions = attributes.position.array;\n\n        for (var i = 0, l = positions.length; i < l; i += 9) {\n          vA.fromArray(positions, i);\n          vB.fromArray(positions, i + 3);\n          vC.fromArray(positions, i + 6);\n\n          if (material.side === THREE.BackSide) {\n            if (ray.intersectTriangle(vC, vB, vA, true, intersectionPoint) === null) continue;\n          } else {\n            if (ray.intersectTriangle(vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint) === null) continue;\n          }\n\n          intersectionPointWorld.copy(intersectionPoint);\n          intersectionPointWorld.applyMatrix4(this.matrixWorld);\n          var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          var uv;\n\n          if (attributes.uv !== undefined) {\n            var uvs = attributes.uv.array;\n            uvA.fromArray(uvs, i);\n            uvB.fromArray(uvs, i + 2);\n            uvC.fromArray(uvs, i + 4);\n            uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n          }\n\n          a = i / 3;\n          b = a + 1;\n          c = a + 2;\n          intersects.push({\n            distance: distance,\n            point: intersectionPointWorld.clone(),\n            uv: uv,\n            face: new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC)),\n            index: a,\n            // triangle number in positions buffer semantics\n            object: this\n          });\n        }\n      }\n    } else if (geometry instanceof THREE.Geometry) {\n      var isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\n      var materials = isFaceMaterial === true ? material.materials : null;\n      var vertices = geometry.vertices;\n      var faces = geometry.faces;\n\n      for (var f = 0, fl = faces.length; f < fl; f++) {\n        var face = faces[f];\n        var faceMaterial = isFaceMaterial === true ? materials[face.materialIndex] : material;\n        if (faceMaterial === undefined) continue;\n        a = vertices[face.a];\n        b = vertices[face.b];\n        c = vertices[face.c];\n\n        if (faceMaterial.morphTargets === true) {\n          var morphTargets = geometry.morphTargets;\n          var morphInfluences = this.morphTargetInfluences;\n          vA.set(0, 0, 0);\n          vB.set(0, 0, 0);\n          vC.set(0, 0, 0);\n\n          for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n            var influence = morphInfluences[t];\n            if (influence === 0) continue;\n            var targets = morphTargets[t].vertices;\n            vA.addScaledVector(tempA.subVectors(targets[face.a], a), influence);\n            vB.addScaledVector(tempB.subVectors(targets[face.b], b), influence);\n            vC.addScaledVector(tempC.subVectors(targets[face.c], c), influence);\n          }\n\n          vA.add(a);\n          vB.add(b);\n          vC.add(c);\n          a = vA;\n          b = vB;\n          c = vC;\n        }\n\n        if (faceMaterial.side === THREE.BackSide) {\n          if (ray.intersectTriangle(c, b, a, true, intersectionPoint) === null) continue;\n        } else {\n          if (ray.intersectTriangle(a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint) === null) continue;\n        }\n\n        intersectionPointWorld.copy(intersectionPoint);\n        intersectionPointWorld.applyMatrix4(this.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n        if (distance < raycaster.near || distance > raycaster.far) continue;\n        var uv;\n\n        if (geometry.faceVertexUvs[0].length > 0) {\n          var uvs = geometry.faceVertexUvs[0][f];\n          uvA.copy(uvs[0]);\n          uvB.copy(uvs[1]);\n          uvC.copy(uvs[2]);\n          uv = uvIntersection(intersectionPoint, a, b, c, uvA, uvB, uvC);\n        }\n\n        intersects.push({\n          distance: distance,\n          point: intersectionPointWorld.clone(),\n          uv: uv,\n          face: face,\n          faceIndex: f,\n          object: this\n        });\n      }\n    }\n  };\n}();\n\nTHREE.Mesh.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material).copy(this);\n};\n\nTHREE.Mesh.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta); // only serialize if not in meta geometries cache\n\n  if (meta.geometries[this.geometry.uuid] === undefined) {\n    meta.geometries[this.geometry.uuid] = this.geometry.toJSON(meta);\n  } // only serialize if not in meta materials cache\n\n\n  if (meta.materials[this.material.uuid] === undefined) {\n    meta.materials[this.material.uuid] = this.material.toJSON(meta);\n  }\n\n  data.object.geometry = this.geometry.uuid;\n  data.object.material = this.material.uuid;\n  return data;\n}; // File:src/objects/Bone.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\n\n\nTHREE.Bone = function (skin) {\n  THREE.Object3D.call(this);\n  this.type = 'Bone';\n  this.skin = skin;\n};\n\nTHREE.Bone.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Bone.prototype.constructor = THREE.Bone;\n\nTHREE.Bone.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.skin = source.skin;\n  return this;\n}; // File:src/objects/Skeleton.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\n\n\nTHREE.Skeleton = function (bones, boneInverses, useVertexTexture) {\n  this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n  this.identityMatrix = new THREE.Matrix4(); // copy the bone array\n\n  bones = bones || [];\n  this.bones = bones.slice(0); // create a bone texture or an array of floats\n\n  if (this.useVertexTexture) {\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n    //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n    //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n    //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n    var size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n    size = THREE.Math.nextPowerOfTwo(Math.ceil(size));\n    size = Math.max(size, 4);\n    this.boneTextureWidth = size;\n    this.boneTextureHeight = size;\n    this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4); // 4 floats per RGBA pixel\n\n    this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType);\n  } else {\n    this.boneMatrices = new Float32Array(16 * this.bones.length);\n  } // use the supplied bone inverses or calculate the inverses\n\n\n  if (boneInverses === undefined) {\n    this.calculateInverses();\n  } else {\n    if (this.bones.length === boneInverses.length) {\n      this.boneInverses = boneInverses.slice(0);\n    } else {\n      console.warn('THREE.Skeleton bonInverses is the wrong length.');\n      this.boneInverses = [];\n\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        this.boneInverses.push(new THREE.Matrix4());\n      }\n    }\n  }\n};\n\nTHREE.Skeleton.prototype.calculateInverses = function () {\n  this.boneInverses = [];\n\n  for (var b = 0, bl = this.bones.length; b < bl; b++) {\n    var inverse = new THREE.Matrix4();\n\n    if (this.bones[b]) {\n      inverse.getInverse(this.bones[b].matrixWorld);\n    }\n\n    this.boneInverses.push(inverse);\n  }\n};\n\nTHREE.Skeleton.prototype.pose = function () {\n  var bone; // recover the bind-time world matrices\n\n  for (var b = 0, bl = this.bones.length; b < bl; b++) {\n    bone = this.bones[b];\n\n    if (bone) {\n      bone.matrixWorld.getInverse(this.boneInverses[b]);\n    }\n  } // compute the local matrices, positions, rotations and scales\n\n\n  for (var b = 0, bl = this.bones.length; b < bl; b++) {\n    bone = this.bones[b];\n\n    if (bone) {\n      if (bone.parent) {\n        bone.matrix.getInverse(bone.parent.matrixWorld);\n        bone.matrix.multiply(bone.matrixWorld);\n      } else {\n        bone.matrix.copy(bone.matrixWorld);\n      }\n\n      bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n    }\n  }\n};\n\nTHREE.Skeleton.prototype.update = function () {\n  var offsetMatrix = new THREE.Matrix4();\n  return function update() {\n    // flatten bone matrices to array\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      // compute the offset between the current and the original transform\n      var matrix = this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix;\n      offsetMatrix.multiplyMatrices(matrix, this.boneInverses[b]);\n      offsetMatrix.flattenToArrayOffset(this.boneMatrices, b * 16);\n    }\n\n    if (this.useVertexTexture) {\n      this.boneTexture.needsUpdate = true;\n    }\n  };\n}();\n\nTHREE.Skeleton.prototype.clone = function () {\n  return new THREE.Skeleton(this.bones, this.boneInverses, this.useVertexTexture);\n}; // File:src/objects/SkinnedMesh.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\n\n\nTHREE.SkinnedMesh = function (geometry, material, useVertexTexture) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = \"attached\";\n  this.bindMatrix = new THREE.Matrix4();\n  this.bindMatrixInverse = new THREE.Matrix4(); // init bones\n  // TODO: remove bone creation as there is no reason (other than\n  // convenience) for THREE.SkinnedMesh to do this.\n\n  var bones = [];\n\n  if (this.geometry && this.geometry.bones !== undefined) {\n    var bone, gbone;\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n      bone = new THREE.Bone(this);\n      bones.push(bone);\n      bone.name = gbone.name;\n      bone.position.fromArray(gbone.pos);\n      bone.quaternion.fromArray(gbone.rotq);\n      if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n    }\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n\n      if (gbone.parent !== -1) {\n        bones[gbone.parent].add(bones[b]);\n      } else {\n        this.add(bones[b]);\n      }\n    }\n  }\n\n  this.normalizeSkinWeights();\n  this.updateMatrixWorld(true);\n  this.bind(new THREE.Skeleton(bones, undefined, useVertexTexture), this.matrixWorld);\n};\n\nTHREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\n\nTHREE.SkinnedMesh.prototype.bind = function (skeleton, bindMatrix) {\n  this.skeleton = skeleton;\n\n  if (bindMatrix === undefined) {\n    this.updateMatrixWorld(true);\n    this.skeleton.calculateInverses();\n    bindMatrix = this.matrixWorld;\n  }\n\n  this.bindMatrix.copy(bindMatrix);\n  this.bindMatrixInverse.getInverse(bindMatrix);\n};\n\nTHREE.SkinnedMesh.prototype.pose = function () {\n  this.skeleton.pose();\n};\n\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\n  if (this.geometry instanceof THREE.Geometry) {\n    for (var i = 0; i < this.geometry.skinIndices.length; i++) {\n      var sw = this.geometry.skinWeights[i];\n      var scale = 1.0 / sw.lengthManhattan();\n\n      if (scale !== Infinity) {\n        sw.multiplyScalar(scale);\n      } else {\n        sw.set(1); // this will be normalized by the shader anyway\n      }\n    }\n  } else {// skinning weights assumed to be normalized for THREE.BufferGeometry\n  }\n};\n\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function (force) {\n  THREE.Mesh.prototype.updateMatrixWorld.call(this, true);\n\n  if (this.bindMode === \"attached\") {\n    this.bindMatrixInverse.getInverse(this.matrixWorld);\n  } else if (this.bindMode === \"detached\") {\n    this.bindMatrixInverse.getInverse(this.bindMatrix);\n  } else {\n    console.warn('THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode);\n  }\n};\n\nTHREE.SkinnedMesh.prototype.clone = function () {\n  return new this.constructor(this.geometry, this.material, this.useVertexTexture).copy(this);\n}; // File:src/objects/MorphAnimMesh.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.MorphAnimMesh = function (geometry, material) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'MorphAnimMesh'; // API\n\n  this.duration = 1000; // milliseconds\n\n  this.mirroredLoop = false;\n  this.time = 0; // internals\n\n  this.lastKeyframe = 0;\n  this.currentKeyframe = 0;\n  this.direction = 1;\n  this.directionBackwards = false;\n  this.setFrameRange(0, geometry.morphTargets.length - 1);\n};\n\nTHREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\n\nTHREE.MorphAnimMesh.prototype.setFrameRange = function (start, end) {\n  this.startKeyframe = start;\n  this.endKeyframe = end;\n  this.length = this.endKeyframe - this.startKeyframe + 1;\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\n  this.direction = 1;\n  this.directionBackwards = false;\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\n  this.direction = -1;\n  this.directionBackwards = true;\n};\n\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\n  var geometry = this.geometry;\n  if (!geometry.animations) geometry.animations = {};\n  var firstAnimation,\n      animations = geometry.animations;\n  var pattern = /([a-z]+)_?(\\d+)/;\n\n  for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n    var morph = geometry.morphTargets[i];\n    var parts = morph.name.match(pattern);\n\n    if (parts && parts.length > 1) {\n      var label = parts[1];\n      if (!animations[label]) animations[label] = {\n        start: Infinity,\n        end: -Infinity\n      };\n      var animation = animations[label];\n      if (i < animation.start) animation.start = i;\n      if (i > animation.end) animation.end = i;\n      if (!firstAnimation) firstAnimation = label;\n    }\n  }\n\n  geometry.firstAnimation = firstAnimation;\n};\n\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function (label, start, end) {\n  if (!this.geometry.animations) this.geometry.animations = {};\n  this.geometry.animations[label] = {\n    start: start,\n    end: end\n  };\n};\n\nTHREE.MorphAnimMesh.prototype.playAnimation = function (label, fps) {\n  var animation = this.geometry.animations[label];\n\n  if (animation) {\n    this.setFrameRange(animation.start, animation.end);\n    this.duration = 1000 * ((animation.end - animation.start) / fps);\n    this.time = 0;\n  } else {\n    console.warn('THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()');\n  }\n};\n\nTHREE.MorphAnimMesh.prototype.updateAnimation = function (delta) {\n  var frameTime = this.duration / this.length;\n  this.time += this.direction * delta;\n\n  if (this.mirroredLoop) {\n    if (this.time > this.duration || this.time < 0) {\n      this.direction *= -1;\n\n      if (this.time > this.duration) {\n        this.time = this.duration;\n        this.directionBackwards = true;\n      }\n\n      if (this.time < 0) {\n        this.time = 0;\n        this.directionBackwards = false;\n      }\n    }\n  } else {\n    this.time = this.time % this.duration;\n    if (this.time < 0) this.time += this.duration;\n  }\n\n  var keyframe = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / frameTime), 0, this.length - 1);\n  var influences = this.morphTargetInfluences;\n\n  if (keyframe !== this.currentKeyframe) {\n    influences[this.lastKeyframe] = 0;\n    influences[this.currentKeyframe] = 1;\n    influences[keyframe] = 0;\n    this.lastKeyframe = this.currentKeyframe;\n    this.currentKeyframe = keyframe;\n  }\n\n  var mix = this.time % frameTime / frameTime;\n\n  if (this.directionBackwards) {\n    mix = 1 - mix;\n  }\n\n  influences[this.currentKeyframe] = mix;\n  influences[this.lastKeyframe] = 1 - mix;\n};\n\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function (a, b, t) {\n  var influences = this.morphTargetInfluences;\n\n  for (var i = 0, l = influences.length; i < l; i++) {\n    influences[i] = 0;\n  }\n\n  if (a > -1) influences[a] = 1 - t;\n  if (b > -1) influences[b] = t;\n};\n\nTHREE.MorphAnimMesh.prototype.copy = function (source) {\n  THREE.Mesh.prototype.copy.call(this, source);\n  this.duration = source.duration;\n  this.mirroredLoop = source.mirroredLoop;\n  this.time = source.time;\n  this.lastKeyframe = source.lastKeyframe;\n  this.currentKeyframe = source.currentKeyframe;\n  this.direction = source.direction;\n  this.directionBackwards = source.directionBackwards;\n  return this;\n}; // File:src/objects/LOD.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.LOD = function () {\n  THREE.Object3D.call(this);\n  this.type = 'LOD';\n  Object.defineProperties(this, {\n    levels: {\n      enumerable: true,\n      value: []\n    },\n    objects: {\n      get: function () {\n        console.warn('THREE.LOD: .objects has been renamed to .levels.');\n        return this.levels;\n      }\n    }\n  });\n};\n\nTHREE.LOD.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.LOD.prototype.constructor = THREE.LOD;\n\nTHREE.LOD.prototype.addLevel = function (object, distance) {\n  if (distance === undefined) distance = 0;\n  distance = Math.abs(distance);\n  var levels = this.levels;\n\n  for (var l = 0; l < levels.length; l++) {\n    if (distance < levels[l].distance) {\n      break;\n    }\n  }\n\n  levels.splice(l, 0, {\n    distance: distance,\n    object: object\n  });\n  this.add(object);\n};\n\nTHREE.LOD.prototype.getObjectForDistance = function (distance) {\n  var levels = this.levels;\n\n  for (var i = 1, l = levels.length; i < l; i++) {\n    if (distance < levels[i].distance) {\n      break;\n    }\n  }\n\n  return levels[i - 1].object;\n};\n\nTHREE.LOD.prototype.raycast = function () {\n  var matrixPosition = new THREE.Vector3();\n  return function raycast(raycaster, intersects) {\n    matrixPosition.setFromMatrixPosition(this.matrixWorld);\n    var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n    this.getObjectForDistance(distance).raycast(raycaster, intersects);\n  };\n}();\n\nTHREE.LOD.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function update(camera) {\n    var levels = this.levels;\n\n    if (levels.length > 1) {\n      v1.setFromMatrixPosition(camera.matrixWorld);\n      v2.setFromMatrixPosition(this.matrixWorld);\n      var distance = v1.distanceTo(v2);\n      levels[0].object.visible = true;\n\n      for (var i = 1, l = levels.length; i < l; i++) {\n        if (distance >= levels[i].distance) {\n          levels[i - 1].object.visible = false;\n          levels[i].object.visible = true;\n        } else {\n          break;\n        }\n      }\n\n      for (; i < l; i++) {\n        levels[i].object.visible = false;\n      }\n    }\n  };\n}();\n\nTHREE.LOD.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source, false);\n  var levels = source.levels;\n\n  for (var i = 0, l = levels.length; i < l; i++) {\n    var level = levels[i];\n    this.addLevel(level.object.clone(), level.distance);\n  }\n\n  return this;\n};\n\nTHREE.LOD.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta);\n  data.object.levels = [];\n  var levels = this.levels;\n\n  for (var i = 0, l = levels.length; i < l; i++) {\n    var level = levels[i];\n    data.object.levels.push({\n      object: level.object.uuid,\n      distance: level.distance\n    });\n  }\n\n  return data;\n}; // File:src/objects/Sprite.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.Sprite = function () {\n  var indices = new Uint16Array([0, 1, 2, 0, 2, 3]);\n  var vertices = new Float32Array([-0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, 0.5, 0]);\n  var uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  return function Sprite(material) {\n    THREE.Object3D.call(this);\n    this.type = 'Sprite';\n    this.geometry = geometry;\n    this.material = material !== undefined ? material : new THREE.SpriteMaterial();\n  };\n}();\n\nTHREE.Sprite.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\n\nTHREE.Sprite.prototype.raycast = function () {\n  var matrixPosition = new THREE.Vector3();\n  return function raycast(raycaster, intersects) {\n    matrixPosition.setFromMatrixPosition(this.matrixWorld);\n    var distanceSq = raycaster.ray.distanceSqToPoint(matrixPosition);\n    var guessSizeSq = this.scale.x * this.scale.y;\n\n    if (distanceSq > guessSizeSq) {\n      return;\n    }\n\n    intersects.push({\n      distance: Math.sqrt(distanceSq),\n      point: this.position,\n      face: null,\n      object: this\n    });\n  };\n}();\n\nTHREE.Sprite.prototype.clone = function () {\n  return new this.constructor(this.material).copy(this);\n};\n\nTHREE.Sprite.prototype.toJSON = function (meta) {\n  var data = THREE.Object3D.prototype.toJSON.call(this, meta); // only serialize if not in meta materials cache\n\n  if (meta.materials[this.material.uuid] === undefined) {\n    meta.materials[this.material.uuid] = this.material.toJSON();\n  }\n\n  data.object.material = this.material.uuid;\n  return data;\n}; // Backwards compatibility\n\n\nTHREE.Particle = THREE.Sprite; // File:src/objects/LensFlare.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.LensFlare = function (texture, size, distance, blending, color) {\n  THREE.Object3D.call(this);\n  this.lensFlares = [];\n  this.positionScreen = new THREE.Vector3();\n  this.customUpdateCallback = undefined;\n\n  if (texture !== undefined) {\n    this.add(texture, size, distance, blending, color);\n  }\n};\n\nTHREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\n/*\r\n * Add: adds another flare\r\n */\n\nTHREE.LensFlare.prototype.add = function (texture, size, distance, blending, color, opacity) {\n  if (size === undefined) size = -1;\n  if (distance === undefined) distance = 0;\n  if (opacity === undefined) opacity = 1;\n  if (color === undefined) color = new THREE.Color(0xffffff);\n  if (blending === undefined) blending = THREE.NormalBlending;\n  distance = Math.min(distance, Math.max(0, distance));\n  this.lensFlares.push({\n    texture: texture,\n    // THREE.Texture\n    size: size,\n    // size in pixels (-1 = use texture.width)\n    distance: distance,\n    // distance (0-1) from light source (0=at light source)\n    x: 0,\n    y: 0,\n    z: 0,\n    // screen position (-1 => 1) z = 0 is in front z = 1 is back\n    scale: 1,\n    // scale\n    rotation: 0,\n    // rotation\n    opacity: opacity,\n    // opacity\n    color: color,\n    // color\n    blending: blending // blending\n\n  });\n};\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\n\n\nTHREE.LensFlare.prototype.updateLensFlares = function () {\n  var f,\n      fl = this.lensFlares.length;\n  var flare;\n  var vecX = -this.positionScreen.x * 2;\n  var vecY = -this.positionScreen.y * 2;\n\n  for (f = 0; f < fl; f++) {\n    flare = this.lensFlares[f];\n    flare.x = this.positionScreen.x + vecX * flare.distance;\n    flare.y = this.positionScreen.y + vecY * flare.distance;\n    flare.wantedRotation = flare.x * Math.PI * 0.25;\n    flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n  }\n};\n\nTHREE.LensFlare.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  this.positionScreen.copy(source.positionScreen);\n  this.customUpdateCallback = source.customUpdateCallback;\n\n  for (var i = 0, l = source.lensFlares.length; i < l; i++) {\n    this.lensFlares.push(source.lensFlares[i]);\n  }\n\n  return this;\n}; // File:src/scenes/Scene.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.Scene = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Scene';\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n};\n\nTHREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor = THREE.Scene;\n\nTHREE.Scene.prototype.copy = function (source) {\n  THREE.Object3D.prototype.copy.call(this, source);\n  if (source.fog !== null) this.fog = source.fog.clone();\n  if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n  this.autoUpdate = source.autoUpdate;\n  this.matrixAutoUpdate = source.matrixAutoUpdate;\n  return this;\n}; // File:src/scenes/Fog.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.Fog = function (color, near, far) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.near = near !== undefined ? near : 1;\n  this.far = far !== undefined ? far : 1000;\n};\n\nTHREE.Fog.prototype.clone = function () {\n  return new THREE.Fog(this.color.getHex(), this.near, this.far);\n}; // File:src/scenes/FogExp2.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.FogExp2 = function (color, density) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n  return new THREE.FogExp2(this.color.getHex(), this.density);\n}; // File:src/renderers/shaders/ShaderChunk.js\n\n\nTHREE.ShaderChunk = {}; // File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk['alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\nTHREE.ShaderChunk['aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\nTHREE.ShaderChunk['aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\nTHREE.ShaderChunk['begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\"; // File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\nTHREE.ShaderChunk['beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\"; // File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk['color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk['color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk['color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk['color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/common.glsl\n\nTHREE.ShaderChunk['common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\"; // File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk['defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\n\nTHREE.ShaderChunk['displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\n\nTHREE.ShaderChunk['emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\n\nTHREE.ShaderChunk['emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk['envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk['envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk['fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk['fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\n\nTHREE.ShaderChunk['lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\nTHREE.ShaderChunk['lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\n\nTHREE.ShaderChunk['lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\n\nTHREE.ShaderChunk['lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\n\nTHREE.ShaderChunk['linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk['map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk['morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\nTHREE.ShaderChunk['project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\n\nTHREE.ShaderChunk['shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk['skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk['skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk['skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk['skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\nTHREE.ShaderChunk['uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\nTHREE.ShaderChunk['uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\nTHREE.ShaderChunk['uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\nTHREE.ShaderChunk['uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk['worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/UniformsUtils.js\n\n/**\r\n * Uniform Utilities\r\n */\n\nTHREE.UniformsUtils = {\n  merge: function (uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function (uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src instanceof THREE.Color || parameter_src instanceof THREE.Vector2 || parameter_src instanceof THREE.Vector3 || parameter_src instanceof THREE.Vector4 || parameter_src instanceof THREE.Matrix3 || parameter_src instanceof THREE.Matrix4 || parameter_src instanceof THREE.Texture) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n}; // File:src/renderers/shaders/UniformsLib.js\n\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\n\nTHREE.UniformsLib = {\n  common: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    },\n    \"specularMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"alphaMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"envMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"flipEnvMap\": {\n      type: \"f\",\n      value: -1\n    },\n    \"reflectivity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"refractionRatio\": {\n      type: \"f\",\n      value: 0.98\n    }\n  },\n  aomap: {\n    \"aoMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"aoMapIntensity\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  lightmap: {\n    \"lightMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"lightMapIntensity\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  emissivemap: {\n    \"emissiveMap\": {\n      type: \"t\",\n      value: null\n    }\n  },\n  bumpmap: {\n    \"bumpMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"bumpScale\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  normalmap: {\n    \"normalMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"normalScale\": {\n      type: \"v2\",\n      value: new THREE.Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    \"displacementMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"displacementScale\": {\n      type: \"f\",\n      value: 1\n    },\n    \"displacementBias\": {\n      type: \"f\",\n      value: 0\n    }\n  },\n  fog: {\n    \"fogDensity\": {\n      type: \"f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  lights: {\n    \"ambientLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"directionalLightDirection\": {\n      type: \"fv\",\n      value: []\n    },\n    \"directionalLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"hemisphereLightDirection\": {\n      type: \"fv\",\n      value: []\n    },\n    \"hemisphereLightSkyColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"hemisphereLightGroundColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"pointLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"pointLightPosition\": {\n      type: \"fv\",\n      value: []\n    },\n    \"pointLightDistance\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"pointLightDecay\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"spotLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"spotLightPosition\": {\n      type: \"fv\",\n      value: []\n    },\n    \"spotLightDirection\": {\n      type: \"fv\",\n      value: []\n    },\n    \"spotLightDistance\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"spotLightAngleCos\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"spotLightExponent\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"spotLightDecay\": {\n      type: \"fv1\",\n      value: []\n    }\n  },\n  points: {\n    \"psColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"size\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"scale\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    },\n    \"fogDensity\": {\n      type: \"f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  shadowmap: {\n    \"shadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"shadowMapSize\": {\n      type: \"v2v\",\n      value: []\n    },\n    \"shadowBias\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"shadowDarkness\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"shadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    }\n  }\n}; // File:src/renderers/shaders/ShaderLib.js\n\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\n\nTHREE.ShaderLib = {\n  'basic': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"shadowmap\"]]),\n    vertexShader: [THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"uv_pars_vertex\"], THREE.ShaderChunk[\"uv2_pars_vertex\"], THREE.ShaderChunk[\"envmap_pars_vertex\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"uv_vertex\"], THREE.ShaderChunk[\"uv2_vertex\"], THREE.ShaderChunk[\"color_vertex\"], THREE.ShaderChunk[\"skinbase_vertex\"], \"\t#ifdef USE_ENVMAP\", THREE.ShaderChunk[\"beginnormal_vertex\"], THREE.ShaderChunk[\"morphnormal_vertex\"], THREE.ShaderChunk[\"skinnormal_vertex\"], THREE.ShaderChunk[\"defaultnormal_vertex\"], \"\t#endif\", THREE.ShaderChunk[\"begin_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"project_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"envmap_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform vec3 diffuse;\", \"uniform float opacity;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"uv_pars_fragment\"], THREE.ShaderChunk[\"uv2_pars_fragment\"], THREE.ShaderChunk[\"map_pars_fragment\"], THREE.ShaderChunk[\"alphamap_pars_fragment\"], THREE.ShaderChunk[\"aomap_pars_fragment\"], THREE.ShaderChunk[\"envmap_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"specularmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tvec3 outgoingLight = vec3( 0.0 );\", \"\tvec4 diffuseColor = vec4( diffuse, opacity );\", \"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\n    THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"alphamap_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], THREE.ShaderChunk[\"specularmap_fragment\"], THREE.ShaderChunk[\"aomap_fragment\"], \"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\n    THREE.ShaderChunk[\"envmap_fragment\"], THREE.ShaderChunk[\"shadowmap_fragment\"], // TODO: Shadows on an otherwise unlit surface doesn't make sense.\n    THREE.ShaderChunk[\"linear_to_gamma_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\", \"}\"].join(\"\\n\")\n  },\n  'lambert': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], THREE.UniformsLib[\"shadowmap\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      }\n    }]),\n    vertexShader: [\"#define LAMBERT\", \"varying vec3 vLightFront;\", \"#ifdef DOUBLE_SIDED\", \"\tvarying vec3 vLightBack;\", \"#endif\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"uv_pars_vertex\"], THREE.ShaderChunk[\"uv2_pars_vertex\"], THREE.ShaderChunk[\"envmap_pars_vertex\"], THREE.ShaderChunk[\"lights_lambert_pars_vertex\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"uv_vertex\"], THREE.ShaderChunk[\"uv2_vertex\"], THREE.ShaderChunk[\"color_vertex\"], THREE.ShaderChunk[\"beginnormal_vertex\"], THREE.ShaderChunk[\"morphnormal_vertex\"], THREE.ShaderChunk[\"skinbase_vertex\"], THREE.ShaderChunk[\"skinnormal_vertex\"], THREE.ShaderChunk[\"defaultnormal_vertex\"], THREE.ShaderChunk[\"begin_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"project_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"envmap_vertex\"], THREE.ShaderChunk[\"lights_lambert_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform vec3 diffuse;\", \"uniform vec3 emissive;\", \"uniform float opacity;\", \"varying vec3 vLightFront;\", \"#ifdef DOUBLE_SIDED\", \"\tvarying vec3 vLightBack;\", \"#endif\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"uv_pars_fragment\"], THREE.ShaderChunk[\"uv2_pars_fragment\"], THREE.ShaderChunk[\"map_pars_fragment\"], THREE.ShaderChunk[\"alphamap_pars_fragment\"], THREE.ShaderChunk[\"envmap_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"specularmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tvec3 outgoingLight = vec3( 0.0 );\", // outgoing light does not have an alpha, the surface does\n    \"\tvec4 diffuseColor = vec4( diffuse, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"alphamap_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], THREE.ShaderChunk[\"specularmap_fragment\"], \"\t#ifdef DOUBLE_SIDED\", \"\t\tif ( gl_FrontFacing )\", \"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\", \"\t\telse\", \"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\", \"\t#else\", \"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\", \"\t#endif\", THREE.ShaderChunk[\"envmap_fragment\"], THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"linear_to_gamma_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\", \"}\"].join(\"\\n\")\n  },\n  'phong': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"aomap\"], THREE.UniformsLib[\"lightmap\"], THREE.UniformsLib[\"emissivemap\"], THREE.UniformsLib[\"bumpmap\"], THREE.UniformsLib[\"normalmap\"], THREE.UniformsLib[\"displacementmap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], THREE.UniformsLib[\"shadowmap\"], {\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"specular\": {\n        type: \"c\",\n        value: new THREE.Color(0x111111)\n      },\n      \"shininess\": {\n        type: \"f\",\n        value: 30\n      }\n    }]),\n    vertexShader: [\"#define PHONG\", \"varying vec3 vViewPosition;\", \"#ifndef FLAT_SHADED\", \"\tvarying vec3 vNormal;\", \"#endif\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"uv_pars_vertex\"], THREE.ShaderChunk[\"uv2_pars_vertex\"], THREE.ShaderChunk[\"displacementmap_pars_vertex\"], THREE.ShaderChunk[\"envmap_pars_vertex\"], THREE.ShaderChunk[\"lights_phong_pars_vertex\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"uv_vertex\"], THREE.ShaderChunk[\"uv2_vertex\"], THREE.ShaderChunk[\"color_vertex\"], THREE.ShaderChunk[\"beginnormal_vertex\"], THREE.ShaderChunk[\"morphnormal_vertex\"], THREE.ShaderChunk[\"skinbase_vertex\"], THREE.ShaderChunk[\"skinnormal_vertex\"], THREE.ShaderChunk[\"defaultnormal_vertex\"], \"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\n    \"\tvNormal = normalize( transformedNormal );\", \"#endif\", THREE.ShaderChunk[\"begin_vertex\"], THREE.ShaderChunk[\"displacementmap_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"project_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"\tvViewPosition = - mvPosition.xyz;\", THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"envmap_vertex\"], THREE.ShaderChunk[\"lights_phong_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"#define PHONG\", \"uniform vec3 diffuse;\", \"uniform vec3 emissive;\", \"uniform vec3 specular;\", \"uniform float shininess;\", \"uniform float opacity;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"uv_pars_fragment\"], THREE.ShaderChunk[\"uv2_pars_fragment\"], THREE.ShaderChunk[\"map_pars_fragment\"], THREE.ShaderChunk[\"alphamap_pars_fragment\"], THREE.ShaderChunk[\"aomap_pars_fragment\"], THREE.ShaderChunk[\"lightmap_pars_fragment\"], THREE.ShaderChunk[\"emissivemap_pars_fragment\"], THREE.ShaderChunk[\"envmap_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"lights_phong_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"bumpmap_pars_fragment\"], THREE.ShaderChunk[\"normalmap_pars_fragment\"], THREE.ShaderChunk[\"specularmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tvec3 outgoingLight = vec3( 0.0 );\", \"\tvec4 diffuseColor = vec4( diffuse, opacity );\", \"\tvec3 totalAmbientLight = ambientLightColor;\", \"\tvec3 totalEmissiveLight = emissive;\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"alphamap_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], THREE.ShaderChunk[\"specularmap_fragment\"], THREE.ShaderChunk[\"lightmap_fragment\"], THREE.ShaderChunk[\"aomap_fragment\"], THREE.ShaderChunk[\"emissivemap_fragment\"], THREE.ShaderChunk[\"lights_phong_fragment\"], THREE.ShaderChunk[\"envmap_fragment\"], THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"linear_to_gamma_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\", \"}\"].join(\"\\n\")\n  },\n  'points': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"points\"], THREE.UniformsLib[\"shadowmap\"]]),\n    vertexShader: [\"uniform float size;\", \"uniform float scale;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"color_vertex\"], \"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", \"\t#ifdef USE_SIZEATTENUATION\", \"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\", \"\t#else\", \"\t\tgl_PointSize = size;\", \"\t#endif\", \"\tgl_Position = projectionMatrix * mvPosition;\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform vec3 psColor;\", \"uniform float opacity;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"map_particle_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tvec3 outgoingLight = vec3( 0.0 );\", \"\tvec4 diffuseColor = vec4( psColor, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_particle_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], \"\toutgoingLight = diffuseColor.rgb;\", // simple shader\n    THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\", \"}\"].join(\"\\n\")\n  },\n  'dashed': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"fog\"], {\n      \"scale\": {\n        type: \"f\",\n        value: 1\n      },\n      \"dashSize\": {\n        type: \"f\",\n        value: 1\n      },\n      \"totalSize\": {\n        type: \"f\",\n        value: 2\n      }\n    }]),\n    vertexShader: [\"uniform float scale;\", \"attribute float lineDistance;\", \"varying float vLineDistance;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"color_vertex\"], \"\tvLineDistance = scale * lineDistance;\", \"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", \"\tgl_Position = projectionMatrix * mvPosition;\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform vec3 diffuse;\", \"uniform float opacity;\", \"uniform float dashSize;\", \"uniform float totalSize;\", \"varying float vLineDistance;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\", \"\t\tdiscard;\", \"\t}\", \"\tvec3 outgoingLight = vec3( 0.0 );\", \"\tvec4 diffuseColor = vec4( diffuse, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"color_fragment\"], \"\toutgoingLight = diffuseColor.rgb;\", // simple shader\n    THREE.ShaderChunk[\"fog_fragment\"], \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\", \"}\"].join(\"\\n\")\n  },\n  'depth': {\n    uniforms: {\n      \"mNear\": {\n        type: \"f\",\n        value: 1.0\n      },\n      \"mFar\": {\n        type: \"f\",\n        value: 2000.0\n      },\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: [THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"begin_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"project_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform float mNear;\", \"uniform float mFar;\", \"uniform float opacity;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"\t#ifdef USE_LOGDEPTHBUF_EXT\", \"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\", \"\t#else\", \"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\", \"\t#endif\", \"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\", \"\tgl_FragColor = vec4( vec3( color ), opacity );\", \"}\"].join(\"\\n\")\n  },\n  'normal': {\n    uniforms: {\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: [\"varying vec3 vNormal;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", \"\tvNormal = normalize( normalMatrix * normal );\", THREE.ShaderChunk[\"begin_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"project_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform float opacity;\", \"varying vec3 vNormal;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"}\"].join(\"\\n\")\n  },\n\n  /* -------------------------------------------------------------------------\r\n  //\tCube map shader\r\n   ------------------------------------------------------------------------- */\n  'cube': {\n    uniforms: {\n      \"tCube\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"f\",\n        value: -1\n      }\n    },\n    vertexShader: [\"varying vec3 vWorldPosition;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", \"\tvWorldPosition = transformDirection( position, modelMatrix );\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform samplerCube tCube;\", \"uniform float tFlip;\", \"varying vec3 vWorldPosition;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"}\"].join(\"\\n\")\n  },\n\n  /* -------------------------------------------------------------------------\r\n  //\tCube map shader\r\n   ------------------------------------------------------------------------- */\n  'equirect': {\n    uniforms: {\n      \"tEquirect\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"f\",\n        value: -1\n      }\n    },\n    vertexShader: [\"varying vec3 vWorldPosition;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", \"\tvWorldPosition = transformDirection( position, modelMatrix );\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform sampler2D tEquirect;\", \"uniform float tFlip;\", \"varying vec3 vWorldPosition;\", THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", // \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\n    \"vec3 direction = normalize( vWorldPosition );\", \"vec2 sampleUV;\", \"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\", \"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\", \"gl_FragColor = texture2D( tEquirect, sampleUV );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"}\"].join(\"\\n\")\n  },\n\n  /* Depth encoding into RGBA texture\r\n   *\r\n   * based on SpiderGL shadow map example\r\n   * http://spidergl.org/example.php?id=6\r\n   *\r\n   * originally from\r\n   * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n   *\r\n   * see also\r\n   * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n   */\n  'depthRGBA': {\n    uniforms: {},\n    vertexShader: [THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"skinbase_vertex\"], THREE.ShaderChunk[\"begin_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"project_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [THREE.ShaderChunk[\"common\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"vec4 pack_depth( const in float depth ) {\", \"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\", \"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\", \"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\n    \"\tres -= res.xxyz * bit_mask;\", \"\treturn res;\", \"}\", \"void main() {\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"\t#ifdef USE_LOGDEPTHBUF_EXT\", \"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\", \"\t#else\", \"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\", \"\t#endif\", //\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\n    //\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\n    //\"gl_FragData[ 0 ] = pack_depth( z );\",\n    //\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\n    \"}\"].join(\"\\n\")\n  }\n}; // File:src/renderers/WebGLRenderer.js\n\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\n\nTHREE.WebGLRenderer = function (parameters) {\n  console.log('THREE.WebGLRenderer', THREE.REVISION);\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement('canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _width = _canvas.width,\n      _height = _canvas.height,\n      pixelRatio = 1,\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n      _clearColor = new THREE.Color(0x000000),\n      _clearAlpha = 0;\n\n  var lights = [];\n  var opaqueObjects = [];\n  var opaqueObjectsLastIndex = -1;\n  var transparentObjects = [];\n  var transparentObjectsLastIndex = -1;\n  var opaqueImmediateObjects = [];\n  var opaqueImmediateObjectsLastIndex = -1;\n  var transparentImmediateObjects = [];\n  var transparentImmediateObjectsLastIndex = -1;\n  var morphInfluences = new Float32Array(8);\n  var sprites = [];\n  var lensFlares = []; // public properties\n\n  this.domElement = _canvas;\n  this.context = null; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // flags\n\n  this.autoScaleCubemaps = true; // internal properties\n\n  var _this = this,\n      // internal state cache\n  _currentProgram = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryProgram = '',\n      _currentCamera = null,\n      _usedTextureUnits = 0,\n      _viewportX = 0,\n      _viewportY = 0,\n      _viewportWidth = _canvas.width,\n      _viewportHeight = _canvas.height,\n      _currentWidth = 0,\n      _currentHeight = 0,\n      // frustum\n  _frustum = new THREE.Frustum(),\n      // camera matrices cache\n  _projScreenMatrix = new THREE.Matrix4(),\n      _vector3 = new THREE.Vector3(),\n      // light arrays cache\n  _direction = new THREE.Vector3(),\n      _lightsNeedUpdate = true,\n      _lights = {\n    ambient: [0, 0, 0],\n    directional: {\n      length: 0,\n      colors: [],\n      positions: []\n    },\n    point: {\n      length: 0,\n      colors: [],\n      positions: [],\n      distances: [],\n      decays: []\n    },\n    spot: {\n      length: 0,\n      colors: [],\n      positions: [],\n      distances: [],\n      directions: [],\n      anglesCos: [],\n      exponents: [],\n      decays: []\n    },\n    hemi: {\n      length: 0,\n      skyColors: [],\n      groundColors: [],\n      positions: []\n    }\n  },\n      // info\n  _infoMemory = {\n    geometries: 0,\n    textures: 0\n  },\n      _infoRender = {\n    calls: 0,\n    vertices: 0,\n    faces: 0,\n    points: 0\n  };\n\n  this.info = {\n    render: _infoRender,\n    memory: _infoMemory,\n    programs: null\n  }; // initialize\n\n  var _gl;\n\n  try {\n    var attributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer\n    };\n    _gl = _context || _canvas.getContext('webgl', attributes) || _canvas.getContext('experimental-webgl', attributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw 'Error creating WebGL context with your selected attributes.';\n      } else {\n        throw 'Error creating WebGL context.';\n      }\n    }\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error);\n  }\n\n  var extensions = new THREE.WebGLExtensions(_gl);\n  extensions.get('OES_texture_float');\n  extensions.get('OES_texture_float_linear');\n  extensions.get('OES_texture_half_float');\n  extensions.get('OES_texture_half_float_linear');\n  extensions.get('OES_standard_derivatives');\n  extensions.get('ANGLE_instanced_arrays');\n\n  if (extensions.get('OES_element_index_uint')) {\n    THREE.BufferGeometry.MaxIndex = 4294967296;\n  }\n\n  var capabilities = new THREE.WebGLCapabilities(_gl, extensions, parameters);\n  var state = new THREE.WebGLState(_gl, extensions, paramThreeToGL);\n  var properties = new THREE.WebGLProperties();\n  var objects = new THREE.WebGLObjects(_gl, properties, this.info);\n  var programCache = new THREE.WebGLPrograms(this, capabilities);\n  this.info.programs = programCache.programs;\n  var bufferRenderer = new THREE.WebGLBufferRenderer(_gl, extensions, _infoRender);\n  var indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer(_gl, extensions, _infoRender); //\n\n  function glClearColor(r, g, b, a) {\n    if (_premultipliedAlpha === true) {\n      r *= a;\n      g *= a;\n      b *= a;\n    }\n\n    _gl.clearColor(r, g, b, a);\n  }\n\n  function setDefaultGLState() {\n    state.init();\n\n    _gl.viewport(_viewportX, _viewportY, _viewportWidth, _viewportHeight);\n\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  }\n\n  function resetGLState() {\n    _currentProgram = null;\n    _currentCamera = null;\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _lightsNeedUpdate = true;\n    state.reset();\n  }\n\n  setDefaultGLState();\n  this.context = _gl;\n  this.capabilities = capabilities;\n  this.extensions = extensions;\n  this.state = state; // shadow map\n\n  var shadowMap = new THREE.WebGLShadowMap(this, lights, objects);\n  this.shadowMap = shadowMap; // Plugins\n\n  var spritePlugin = new THREE.SpritePlugin(this, sprites);\n  var lensFlarePlugin = new THREE.LensFlarePlugin(this, lensFlares); // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    extensions.get('WEBGL_lose_context').loseContext();\n  };\n\n  this.getMaxAnisotropy = function () {\n    var value;\n    return function getMaxAnisotropy() {\n      if (value !== undefined) return value;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        value = _gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        value = 0;\n      }\n\n      return value;\n    };\n  }();\n\n  this.getPrecision = function () {\n    return capabilities.precision;\n  };\n\n  this.getPixelRatio = function () {\n    return pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value !== undefined) pixelRatio = value;\n  };\n\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    _width = width;\n    _height = height;\n    _canvas.width = width * pixelRatio;\n    _canvas.height = height * pixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    _viewportX = x * pixelRatio;\n    _viewportY = y * pixelRatio;\n    _viewportWidth = width * pixelRatio;\n    _viewportHeight = height * pixelRatio;\n\n    _gl.viewport(_viewportX, _viewportY, _viewportWidth, _viewportHeight);\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    _gl.scissor(x * pixelRatio, y * pixelRatio, width * pixelRatio, height * pixelRatio);\n  };\n\n  this.enableScissorTest = function (boolean) {\n    state.setScissorTest(boolean);\n  }; // Clearing\n\n\n  this.getClearColor = function () {\n    return _clearColor;\n  };\n\n  this.setClearColor = function (color, alpha) {\n    _clearColor.set(color);\n\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.getClearAlpha = function () {\n    return _clearAlpha;\n  };\n\n  this.setClearAlpha = function (alpha) {\n    _clearAlpha = alpha;\n    glClearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    _gl.clear(_gl.COLOR_BUFFER_BIT);\n  };\n\n  this.clearDepth = function () {\n    _gl.clear(_gl.DEPTH_BUFFER_BIT);\n  };\n\n  this.clearStencil = function () {\n    _gl.clear(_gl.STENCIL_BUFFER_BIT);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; // Reset\n\n\n  this.resetGLState = resetGLState;\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    resetGLState();\n    setDefaultGLState();\n    properties.clear();\n  }\n\n  ;\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n    _infoMemory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    _infoMemory.textures--;\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    } // remove all webgl properties\n\n\n    properties.delete(texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    if (!renderTarget || renderTargetProperties.__webglTexture === undefined) return;\n\n    _gl.deleteTexture(renderTargetProperties.__webglTexture);\n\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        _gl.deleteRenderbuffer(renderTargetProperties.__webglRenderbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      _gl.deleteRenderbuffer(renderTargetProperties.__webglRenderbuffer);\n    }\n\n    properties.delete(renderTarget);\n  }\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReference(material);\n    properties.delete(material);\n  }\n\n  function releaseMaterialProgramReference(material) {\n    var programInfo = properties.get(material).program;\n    material.program = undefined;\n\n    if (programInfo !== undefined) {\n      programCache.releaseProgram(programInfo);\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferImmediate = function (object, program, material) {\n    state.initAttributes();\n    var buffers = properties.get(object);\n    if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n    if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n    if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n    if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n    var attributes = program.getAttributes();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.position);\n\n      _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n      if (material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading) {\n        for (var i = 0, l = object.count * 3; i < l; i += 9) {\n          var array = object.normalArray;\n          var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.normal);\n\n      _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.uv);\n\n      _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== THREE.NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(attributes.color);\n\n      _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    state.disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  this.renderBufferDirect = function (camera, lights, fog, geometry, material, object, group) {\n    setMaterial(material);\n    var program = setProgram(camera, lights, fog, material, object);\n    var updateBuffers = false;\n    var geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n    if (geometryProgram !== _currentGeometryProgram) {\n      _currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    } // morph targets\n\n\n    var morphTargetInfluences = object.morphTargetInfluences;\n\n    if (morphTargetInfluences !== undefined) {\n      var activeInfluences = [];\n\n      for (var i = 0, l = morphTargetInfluences.length; i < l; i++) {\n        var influence = morphTargetInfluences[i];\n        activeInfluences.push([influence, i]);\n      }\n\n      activeInfluences.sort(numericalSort);\n\n      if (activeInfluences.length > 8) {\n        activeInfluences.length = 8;\n      }\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var i = 0, l = activeInfluences.length; i < l; i++) {\n        var influence = activeInfluences[i];\n        morphInfluences[i] = influence[0];\n\n        if (influence[0] !== 0) {\n          var index = influence[1];\n          if (material.morphTargets === true && morphAttributes.position) geometry.addAttribute('morphTarget' + i, morphAttributes.position[index]);\n          if (material.morphNormals === true && morphAttributes.normal) geometry.addAttribute('morphNormal' + i, morphAttributes.normal[index]);\n        } else {\n          if (material.morphTargets === true) geometry.removeAttribute('morphTarget' + i);\n          if (material.morphNormals === true) geometry.removeAttribute('morphNormal' + i);\n        }\n      }\n\n      var uniforms = program.getUniforms();\n\n      if (uniforms.morphTargetInfluences !== null) {\n        _gl.uniform1fv(uniforms.morphTargetInfluences, morphInfluences);\n      }\n\n      updateBuffers = true;\n    } //\n\n\n    var index = geometry.index;\n    var position = geometry.attributes.position;\n\n    if (material.wireframe === true) {\n      index = objects.getWireframeAttribute(geometry);\n    }\n\n    var renderer;\n\n    if (index !== null) {\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(index);\n    } else {\n      renderer = bufferRenderer;\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(material, program, geometry);\n\n      if (index !== null) {\n        _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer(index));\n      }\n    }\n\n    if (group === undefined) {\n      var count;\n\n      if (index !== null) {\n        count = index.count;\n      } else if (position instanceof THREE.InterleavedBufferAttribute) {\n        count = position.data.array.length / 3;\n      } else {\n        count = position.count;\n      }\n\n      var drawRange = geometry.drawRange;\n      group = {\n        start: drawRange.start,\n        count: Math.min(drawRange.count, count)\n      };\n    }\n\n    if (object instanceof THREE.Mesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * pixelRatio);\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.TRIANGLES);\n      }\n\n      if (geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0) {\n        renderer.renderInstances(geometry);\n      } else {\n        renderer.render(group.start, group.count);\n      }\n    } else if (object instanceof THREE.Line) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * pixelRatio);\n\n      if (object instanceof THREE.LineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n\n      renderer.render(group.start, group.count);\n    } else if (object instanceof THREE.Points) {\n      renderer.setMode(_gl.POINTS);\n      renderer.render(group.start, group.count);\n    }\n  };\n\n  function setupVertexAttributes(material, program, geometry, startIndex) {\n    var extension;\n\n    if (geometry instanceof THREE.InstancedBufferGeometry) {\n      extension = extensions.get('ANGLE_instanced_arrays');\n\n      if (extension === null) {\n        console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    if (startIndex === undefined) startIndex = 0;\n    state.initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute !== undefined) {\n          state.enableAttribute(programAttribute);\n          var size = geometryAttribute.itemSize;\n          var buffer = objects.getAttributeBuffer(geometryAttribute);\n\n          if (geometryAttribute instanceof THREE.InterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, (startIndex * stride + offset) * data.array.BYTES_PER_ELEMENT);\n\n            if (data instanceof THREE.InstancedInterleavedBuffer) {\n              if (extension === null) {\n                console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.');\n                return;\n              }\n\n              extension.vertexAttribDivisorANGLE(programAttribute, data.meshPerAttribute);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            }\n          } else {\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4); // 4 bytes per Float32\n\n\n            if (geometryAttribute instanceof THREE.InstancedBufferAttribute) {\n              if (extension === null) {\n                console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.');\n                return;\n              }\n\n              extension.vertexAttribDivisorANGLE(programAttribute, geometryAttribute.meshPerAttribute);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            }\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n\n                break;\n\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n\n                break;\n\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n\n                break;\n\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n\n            }\n          }\n        }\n      }\n    }\n\n    state.disableUnusedAttributes();\n  } // Sorting\n\n\n  function numericalSort(a, b) {\n    return b[0] - a[0];\n  }\n\n  function painterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.object.renderOrder !== b.object.renderOrder) {\n      return a.object.renderOrder - b.object.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  } // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (camera instanceof THREE.Camera === false) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    var fog = scene.fog; // reset caching for this frame\n\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _currentCamera = null;\n    _lightsNeedUpdate = true; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    lights.length = 0;\n    opaqueObjectsLastIndex = -1;\n    transparentObjectsLastIndex = -1;\n    opaqueImmediateObjectsLastIndex = -1;\n    transparentImmediateObjectsLastIndex = -1;\n    sprites.length = 0;\n    lensFlares.length = 0;\n    projectObject(scene);\n    opaqueObjects.length = opaqueObjectsLastIndex + 1;\n    transparentObjects.length = transparentObjectsLastIndex + 1;\n    opaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\n    transparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\n\n    if (_this.sortObjects === true) {\n      opaqueObjects.sort(painterSortStable);\n      transparentObjects.sort(reversePainterSortStable);\n    } //\n\n\n    shadowMap.render(scene, camera); //\n\n    _infoRender.calls = 0;\n    _infoRender.vertices = 0;\n    _infoRender.faces = 0;\n    _infoRender.points = 0;\n    this.setRenderTarget(renderTarget);\n\n    if (this.autoClear || forceClear) {\n      this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n    } //\n\n\n    if (scene.overrideMaterial) {\n      var overrideMaterial = scene.overrideMaterial;\n      renderObjects(opaqueObjects, camera, lights, fog, overrideMaterial);\n      renderObjects(transparentObjects, camera, lights, fog, overrideMaterial);\n      renderObjectsImmediate(opaqueImmediateObjects, camera, lights, fog, overrideMaterial);\n      renderObjectsImmediate(transparentImmediateObjects, camera, lights, fog, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      state.setBlending(THREE.NoBlending);\n      renderObjects(opaqueObjects, camera, lights, fog);\n      renderObjectsImmediate(opaqueImmediateObjects, camera, lights, fog); // transparent pass (back-to-front order)\n\n      renderObjects(transparentObjects, camera, lights, fog);\n      renderObjectsImmediate(transparentImmediateObjects, camera, lights, fog);\n    } // custom render plugins (post pass)\n\n\n    spritePlugin.render(scene, camera);\n    lensFlarePlugin.render(scene, camera, _currentWidth, _currentHeight); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter) {\n      updateRenderTargetMipmap(renderTarget);\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    state.setDepthTest(true);\n    state.setDepthWrite(true);\n    state.setColorWrite(true); // _gl.finish();\n  };\n\n  function pushImmediateRenderItem(object) {\n    var array, index; // allocate the next position in the appropriate array\n\n    if (object.material.transparent) {\n      array = transparentImmediateObjects;\n      index = ++transparentImmediateObjectsLastIndex;\n    } else {\n      array = opaqueImmediateObjects;\n      index = ++opaqueImmediateObjectsLastIndex;\n    } // recycle existing position or grow the array\n\n\n    if (index < array.length) {\n      array[index] = object;\n    } else {\n      // assert( index === array.length );\n      array.push(object);\n    }\n  }\n\n  function pushRenderItem(object, geometry, material, z, group) {\n    var array, index; // allocate the next position in the appropriate array\n\n    if (material.transparent) {\n      array = transparentObjects;\n      index = ++transparentObjectsLastIndex;\n    } else {\n      array = opaqueObjects;\n      index = ++opaqueObjectsLastIndex;\n    } // recycle existing render item or grow the array\n\n\n    var renderItem = array[index];\n\n    if (renderItem !== undefined) {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.z = _vector3.z;\n      renderItem.group = group;\n    } else {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        z: _vector3.z,\n        group: group\n      }; // assert( index === array.length );\n\n      array.push(renderItem);\n    }\n  }\n\n  function projectObject(object) {\n    if (object.visible === false) return;\n\n    if (object instanceof THREE.Light) {\n      lights.push(object);\n    } else if (object instanceof THREE.Sprite) {\n      sprites.push(object);\n    } else if (object instanceof THREE.LensFlare) {\n      lensFlares.push(object);\n    } else if (object instanceof THREE.ImmediateRenderObject) {\n      pushImmediateRenderItem(object);\n    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points) {\n      if (object instanceof THREE.SkinnedMesh) {\n        object.skeleton.update();\n      }\n\n      if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n        var material = object.material;\n\n        if (material.visible === true) {\n          if (_this.sortObjects === true) {\n            _vector3.setFromMatrixPosition(object.matrixWorld);\n\n            _vector3.applyProjection(_projScreenMatrix);\n          }\n\n          var geometry = objects.update(object);\n\n          if (material instanceof THREE.MeshFaceMaterial) {\n            var groups = geometry.groups;\n            var materials = material.materials;\n\n            for (var i = 0, l = groups.length; i < l; i++) {\n              var group = groups[i];\n              var groupMaterial = materials[group.materialIndex];\n\n              if (groupMaterial.visible === true) {\n                pushRenderItem(object, geometry, groupMaterial, _vector3.z, group);\n              }\n            }\n          } else {\n            pushRenderItem(object, geometry, material, _vector3.z);\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i]);\n    }\n  }\n\n  function renderObjects(renderList, camera, lights, fog, overrideMaterial) {\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      _this.renderBufferDirect(camera, lights, fog, geometry, material, object, group);\n    }\n  }\n\n  function renderObjectsImmediate(renderList, camera, lights, fog, overrideMaterial) {\n    var material = overrideMaterial;\n\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var object = renderList[i];\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n      if (overrideMaterial === undefined) material = object.material;\n      setMaterial(material);\n      var program = setProgram(camera, lights, fog, material, object);\n      _currentGeometryProgram = '';\n      object.render(function (object) {\n        _this.renderBufferImmediate(object, program, material);\n      });\n    }\n  }\n\n  function initMaterial(material, lights, fog, object) {\n    var materialProperties = properties.get(material);\n    var parameters = programCache.getParameters(material, lights, fog, object);\n    var code = programCache.getProgramCode(material, parameters);\n    var program = materialProperties.program;\n    var programChange = true;\n\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      releaseMaterialProgramReference(material);\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n\n    if (programChange) {\n      if (parameters.shaderID) {\n        var shader = THREE.ShaderLib[parameters.shaderID];\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: THREE.UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.__webglShader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n\n      material.__webglShader = materialProperties.__webglShader;\n      program = programCache.acquireProgram(material, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n\n    var attributes = program.getAttributes();\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        if (attributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n\n      for (i = 0; i < _this.maxMorphNormals; i++) {\n        if (attributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    materialProperties.uniformsList = [];\n    var uniformLocations = materialProperties.program.getUniforms();\n\n    for (var u in materialProperties.__webglShader.uniforms) {\n      var location = uniformLocations[u];\n\n      if (location) {\n        materialProperties.uniformsList.push([materialProperties.__webglShader.uniforms[u], location]);\n      }\n    }\n  }\n\n  function setMaterial(material) {\n    setMaterialFaces(material);\n\n    if (material.transparent === true) {\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha);\n    } else {\n      state.setBlending(THREE.NoBlending);\n    }\n\n    state.setDepthFunc(material.depthFunc);\n    state.setDepthTest(material.depthTest);\n    state.setDepthWrite(material.depthWrite);\n    state.setColorWrite(material.colorWrite);\n    state.setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  }\n\n  function setMaterialFaces(material) {\n    material.side !== THREE.DoubleSide ? state.enable(_gl.CULL_FACE) : state.disable(_gl.CULL_FACE);\n    state.setFlipSided(material.side === THREE.BackSide);\n  }\n\n  function setProgram(camera, lights, fog, material, object) {\n    _usedTextureUnits = 0;\n    var materialProperties = properties.get(material);\n\n    if (material.needsUpdate || !materialProperties.program) {\n      initMaterial(material, lights, fog, object);\n      material.needsUpdate = false;\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = materialProperties.program,\n        p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.__webglShader.uniforms;\n\n    if (program.id !== _currentProgram) {\n      _gl.useProgram(program.program);\n\n      _currentProgram = program.id;\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      if (_currentMaterialId === -1) refreshLights = true;\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      _gl.uniformMatrix4fv(p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        _gl.uniform1f(p_uniforms.logDepthBufFC, 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (camera !== _currentCamera) _currentCamera = camera; // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n      if (material instanceof THREE.ShaderMaterial || material instanceof THREE.MeshPhongMaterial || material.envMap) {\n        if (p_uniforms.cameraPosition !== undefined) {\n          _vector3.setFromMatrixPosition(camera.matrixWorld);\n\n          _gl.uniform3f(p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z);\n        }\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshBasicMaterial || material instanceof THREE.ShaderMaterial || material.skinning) {\n        if (p_uniforms.viewMatrix !== undefined) {\n          _gl.uniformMatrix4fv(p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements);\n        }\n      }\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      if (object.bindMatrix && p_uniforms.bindMatrix !== undefined) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrix, false, object.bindMatrix.elements);\n      }\n\n      if (object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements);\n      }\n\n      if (capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture) {\n        if (p_uniforms.boneTexture !== undefined) {\n          var textureUnit = getTextureUnit();\n\n          _gl.uniform1i(p_uniforms.boneTexture, textureUnit);\n\n          _this.setTexture(object.skeleton.boneTexture, textureUnit);\n        }\n\n        if (p_uniforms.boneTextureWidth !== undefined) {\n          _gl.uniform1i(p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth);\n        }\n\n        if (p_uniforms.boneTextureHeight !== undefined) {\n          _gl.uniform1i(p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight);\n        }\n      } else if (object.skeleton && object.skeleton.boneMatrices) {\n        if (p_uniforms.boneGlobalMatrices !== undefined) {\n          _gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices);\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      // refresh uniforms common to several materials\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material.lights) {\n        if (_lightsNeedUpdate) {\n          refreshLights = true;\n          setupLights(lights, camera);\n          _lightsNeedUpdate = false;\n        }\n\n        if (refreshLights) {\n          refreshUniformsLights(m_uniforms, _lights);\n          markUniformsLightsNeedsUpdate(m_uniforms, true);\n        } else {\n          markUniformsLightsNeedsUpdate(m_uniforms, false);\n        }\n      }\n\n      if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } // refresh single material specific uniforms\n\n\n      if (material instanceof THREE.LineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n      } else if (material instanceof THREE.LineDashedMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n        refreshUniformsDash(m_uniforms, material);\n      } else if (material instanceof THREE.PointsMaterial) {\n        refreshUniformsParticle(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsPhong(m_uniforms, material);\n      } else if (material instanceof THREE.MeshDepthMaterial) {\n        m_uniforms.mNear.value = camera.near;\n        m_uniforms.mFar.value = camera.far;\n        m_uniforms.opacity.value = material.opacity;\n      } else if (material instanceof THREE.MeshNormalMaterial) {\n        m_uniforms.opacity.value = material.opacity;\n      }\n\n      if (object.receiveShadow && !material._shadowPass) {\n        refreshUniformsShadow(m_uniforms, lights);\n      } // load common uniforms\n\n\n      loadUniformsGeneric(materialProperties.uniformsList);\n    }\n\n    loadUniformsMatrices(p_uniforms, object);\n\n    if (p_uniforms.modelMatrix !== undefined) {\n      _gl.uniformMatrix4fv(p_uniforms.modelMatrix, false, object.matrixWorld.elements);\n    }\n\n    return program;\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n    uniforms.diffuse.value = material.color;\n\n    if (material.emissive) {\n      uniforms.emissive.value = material.emissive;\n    }\n\n    uniforms.map.value = material.map;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n\n    uniforms.envMap.value = material.envMap;\n    uniforms.flipEnvMap.value = material.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1;\n    uniforms.reflectivity.value = material.reflectivity;\n    uniforms.refractionRatio.value = material.refractionRatio;\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsParticle(uniforms, material) {\n    uniforms.psColor.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size;\n    uniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\n\n    uniforms.map.value = material.map;\n\n    if (material.map !== null) {\n      var offset = material.map.offset;\n      var repeat = material.map.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog instanceof THREE.Fog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog instanceof THREE.FogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = material.shininess;\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsLights(uniforms, lights) {\n    uniforms.ambientLightColor.value = lights.ambient;\n    uniforms.directionalLightColor.value = lights.directional.colors;\n    uniforms.directionalLightDirection.value = lights.directional.positions;\n    uniforms.pointLightColor.value = lights.point.colors;\n    uniforms.pointLightPosition.value = lights.point.positions;\n    uniforms.pointLightDistance.value = lights.point.distances;\n    uniforms.pointLightDecay.value = lights.point.decays;\n    uniforms.spotLightColor.value = lights.spot.colors;\n    uniforms.spotLightPosition.value = lights.spot.positions;\n    uniforms.spotLightDistance.value = lights.spot.distances;\n    uniforms.spotLightDirection.value = lights.spot.directions;\n    uniforms.spotLightAngleCos.value = lights.spot.anglesCos;\n    uniforms.spotLightExponent.value = lights.spot.exponents;\n    uniforms.spotLightDecay.value = lights.spot.decays;\n    uniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\n    uniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\n    uniforms.hemisphereLightDirection.value = lights.hemi.positions;\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLightColor.needsUpdate = value;\n    uniforms.directionalLightDirection.needsUpdate = value;\n    uniforms.pointLightColor.needsUpdate = value;\n    uniforms.pointLightPosition.needsUpdate = value;\n    uniforms.pointLightDistance.needsUpdate = value;\n    uniforms.pointLightDecay.needsUpdate = value;\n    uniforms.spotLightColor.needsUpdate = value;\n    uniforms.spotLightPosition.needsUpdate = value;\n    uniforms.spotLightDistance.needsUpdate = value;\n    uniforms.spotLightDirection.needsUpdate = value;\n    uniforms.spotLightAngleCos.needsUpdate = value;\n    uniforms.spotLightExponent.needsUpdate = value;\n    uniforms.spotLightDecay.needsUpdate = value;\n    uniforms.hemisphereLightSkyColor.needsUpdate = value;\n    uniforms.hemisphereLightGroundColor.needsUpdate = value;\n    uniforms.hemisphereLightDirection.needsUpdate = value;\n  }\n\n  function refreshUniformsShadow(uniforms, lights) {\n    if (uniforms.shadowMatrix) {\n      var j = 0;\n\n      for (var i = 0, il = lights.length; i < il; i++) {\n        var light = lights[i];\n        if (!light.castShadow) continue;\n\n        if (light instanceof THREE.SpotLight || light instanceof THREE.DirectionalLight) {\n          uniforms.shadowMap.value[j] = light.shadowMap;\n          uniforms.shadowMapSize.value[j] = light.shadowMapSize;\n          uniforms.shadowMatrix.value[j] = light.shadowMatrix;\n          uniforms.shadowDarkness.value[j] = light.shadowDarkness;\n          uniforms.shadowBias.value[j] = light.shadowBias;\n          j++;\n        }\n      }\n    }\n  } // Uniforms (load to GPU)\n\n\n  function loadUniformsMatrices(uniforms, object) {\n    _gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, object.modelViewMatrix.elements);\n\n    if (uniforms.normalMatrix) {\n      _gl.uniformMatrix3fv(uniforms.normalMatrix, false, object.normalMatrix.elements);\n    }\n  }\n\n  function getTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n\n    if (textureUnit >= capabilities.maxTextures) {\n      console.warn('WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n    }\n\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  function loadUniformsGeneric(uniforms) {\n    var texture, textureUnit;\n\n    for (var j = 0, jl = uniforms.length; j < jl; j++) {\n      var uniform = uniforms[j][0]; // needsUpdate property is not added to all uniforms.\n\n      if (uniform.needsUpdate === false) continue;\n      var type = uniform.type;\n      var value = uniform.value;\n      var location = uniforms[j][1];\n\n      switch (type) {\n        case '1i':\n          _gl.uniform1i(location, value);\n\n          break;\n\n        case '1f':\n          _gl.uniform1f(location, value);\n\n          break;\n\n        case '2f':\n          _gl.uniform2f(location, value[0], value[1]);\n\n          break;\n\n        case '3f':\n          _gl.uniform3f(location, value[0], value[1], value[2]);\n\n          break;\n\n        case '4f':\n          _gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n\n          break;\n\n        case '1iv':\n          _gl.uniform1iv(location, value);\n\n          break;\n\n        case '3iv':\n          _gl.uniform3iv(location, value);\n\n          break;\n\n        case '1fv':\n          _gl.uniform1fv(location, value);\n\n          break;\n\n        case '2fv':\n          _gl.uniform2fv(location, value);\n\n          break;\n\n        case '3fv':\n          _gl.uniform3fv(location, value);\n\n          break;\n\n        case '4fv':\n          _gl.uniform4fv(location, value);\n\n          break;\n\n        case 'Matrix3fv':\n          _gl.uniformMatrix3fv(location, false, value);\n\n          break;\n\n        case 'Matrix4fv':\n          _gl.uniformMatrix4fv(location, false, value);\n\n          break;\n        //\n\n        case 'i':\n          // single integer\n          _gl.uniform1i(location, value);\n\n          break;\n\n        case 'f':\n          // single float\n          _gl.uniform1f(location, value);\n\n          break;\n\n        case 'v2':\n          // single THREE.Vector2\n          _gl.uniform2f(location, value.x, value.y);\n\n          break;\n\n        case 'v3':\n          // single THREE.Vector3\n          _gl.uniform3f(location, value.x, value.y, value.z);\n\n          break;\n\n        case 'v4':\n          // single THREE.Vector4\n          _gl.uniform4f(location, value.x, value.y, value.z, value.w);\n\n          break;\n\n        case 'c':\n          // single THREE.Color\n          _gl.uniform3f(location, value.r, value.g, value.b);\n\n          break;\n\n        case 'iv1':\n          // flat array of integers (JS or typed array)\n          _gl.uniform1iv(location, value);\n\n          break;\n\n        case 'iv':\n          // flat array of integers with 3 x N size (JS or typed array)\n          _gl.uniform3iv(location, value);\n\n          break;\n\n        case 'fv1':\n          // flat array of floats (JS or typed array)\n          _gl.uniform1fv(location, value);\n\n          break;\n\n        case 'fv':\n          // flat array of floats with 3 x N size (JS or typed array)\n          _gl.uniform3fv(location, value);\n\n          break;\n\n        case 'v2v':\n          // array of THREE.Vector2\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(2 * value.length);\n          }\n\n          for (var i = 0, i2 = 0, il = value.length; i < il; i++, i2 += 2) {\n            uniform._array[i2 + 0] = value[i].x;\n            uniform._array[i2 + 1] = value[i].y;\n          }\n\n          _gl.uniform2fv(location, uniform._array);\n\n          break;\n\n        case 'v3v':\n          // array of THREE.Vector3\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(3 * value.length);\n          }\n\n          for (var i = 0, i3 = 0, il = value.length; i < il; i++, i3 += 3) {\n            uniform._array[i3 + 0] = value[i].x;\n            uniform._array[i3 + 1] = value[i].y;\n            uniform._array[i3 + 2] = value[i].z;\n          }\n\n          _gl.uniform3fv(location, uniform._array);\n\n          break;\n\n        case 'v4v':\n          // array of THREE.Vector4\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(4 * value.length);\n          }\n\n          for (var i = 0, i4 = 0, il = value.length; i < il; i++, i4 += 4) {\n            uniform._array[i4 + 0] = value[i].x;\n            uniform._array[i4 + 1] = value[i].y;\n            uniform._array[i4 + 2] = value[i].z;\n            uniform._array[i4 + 3] = value[i].w;\n          }\n\n          _gl.uniform4fv(location, uniform._array);\n\n          break;\n\n        case 'm3':\n          // single THREE.Matrix3\n          _gl.uniformMatrix3fv(location, false, value.elements);\n\n          break;\n\n        case 'm3v':\n          // array of THREE.Matrix3\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(9 * value.length);\n          }\n\n          for (var i = 0, il = value.length; i < il; i++) {\n            value[i].flattenToArrayOffset(uniform._array, i * 9);\n          }\n\n          _gl.uniformMatrix3fv(location, false, uniform._array);\n\n          break;\n\n        case 'm4':\n          // single THREE.Matrix4\n          _gl.uniformMatrix4fv(location, false, value.elements);\n\n          break;\n\n        case 'm4v':\n          // array of THREE.Matrix4\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(16 * value.length);\n          }\n\n          for (var i = 0, il = value.length; i < il; i++) {\n            value[i].flattenToArrayOffset(uniform._array, i * 16);\n          }\n\n          _gl.uniformMatrix4fv(location, false, uniform._array);\n\n          break;\n\n        case 't':\n          // single THREE.Texture (2d or cube)\n          texture = value;\n          textureUnit = getTextureUnit();\n\n          _gl.uniform1i(location, textureUnit);\n\n          if (!texture) continue;\n\n          if (texture instanceof THREE.CubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n            // CompressedTexture can have Array in image :/\n            setCubeTexture(texture, textureUnit);\n          } else if (texture instanceof THREE.WebGLRenderTargetCube) {\n            setCubeTextureDynamic(texture, textureUnit);\n          } else {\n            _this.setTexture(texture, textureUnit);\n          }\n\n          break;\n\n        case 'tv':\n          // array of THREE.Texture (2d)\n          if (uniform._array === undefined) {\n            uniform._array = [];\n          }\n\n          for (var i = 0, il = uniform.value.length; i < il; i++) {\n            uniform._array[i] = getTextureUnit();\n          }\n\n          _gl.uniform1iv(location, uniform._array);\n\n          for (var i = 0, il = uniform.value.length; i < il; i++) {\n            texture = uniform.value[i];\n            textureUnit = uniform._array[i];\n            if (!texture) continue;\n\n            _this.setTexture(texture, textureUnit);\n          }\n\n          break;\n\n        default:\n          console.warn('THREE.WebGLRenderer: Unknown uniform type: ' + type);\n      }\n    }\n  }\n\n  function setColorLinear(array, offset, color, intensity) {\n    array[offset + 0] = color.r * intensity;\n    array[offset + 1] = color.g * intensity;\n    array[offset + 2] = color.b * intensity;\n  }\n\n  function setupLights(lights, camera) {\n    var l,\n        ll,\n        light,\n        r = 0,\n        g = 0,\n        b = 0,\n        color,\n        skyColor,\n        groundColor,\n        intensity,\n        distance,\n        zlights = _lights,\n        viewMatrix = camera.matrixWorldInverse,\n        dirColors = zlights.directional.colors,\n        dirPositions = zlights.directional.positions,\n        pointColors = zlights.point.colors,\n        pointPositions = zlights.point.positions,\n        pointDistances = zlights.point.distances,\n        pointDecays = zlights.point.decays,\n        spotColors = zlights.spot.colors,\n        spotPositions = zlights.spot.positions,\n        spotDistances = zlights.spot.distances,\n        spotDirections = zlights.spot.directions,\n        spotAnglesCos = zlights.spot.anglesCos,\n        spotExponents = zlights.spot.exponents,\n        spotDecays = zlights.spot.decays,\n        hemiSkyColors = zlights.hemi.skyColors,\n        hemiGroundColors = zlights.hemi.groundColors,\n        hemiPositions = zlights.hemi.positions,\n        dirLength = 0,\n        pointLength = 0,\n        spotLength = 0,\n        hemiLength = 0,\n        dirCount = 0,\n        pointCount = 0,\n        spotCount = 0,\n        hemiCount = 0,\n        dirOffset = 0,\n        pointOffset = 0,\n        spotOffset = 0,\n        hemiOffset = 0;\n\n    for (l = 0, ll = lights.length; l < ll; l++) {\n      light = lights[l];\n      if (light.onlyShadow) continue;\n      color = light.color;\n      intensity = light.intensity;\n      distance = light.distance;\n\n      if (light instanceof THREE.AmbientLight) {\n        if (!light.visible) continue;\n        r += color.r;\n        g += color.g;\n        b += color.b;\n      } else if (light instanceof THREE.DirectionalLight) {\n        dirCount += 1;\n        if (!light.visible) continue;\n\n        _direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        _direction.sub(_vector3);\n\n        _direction.transformDirection(viewMatrix);\n\n        dirOffset = dirLength * 3;\n        dirPositions[dirOffset + 0] = _direction.x;\n        dirPositions[dirOffset + 1] = _direction.y;\n        dirPositions[dirOffset + 2] = _direction.z;\n        setColorLinear(dirColors, dirOffset, color, intensity);\n        dirLength += 1;\n      } else if (light instanceof THREE.PointLight) {\n        pointCount += 1;\n        if (!light.visible) continue;\n        pointOffset = pointLength * 3;\n        setColorLinear(pointColors, pointOffset, color, intensity);\n\n        _vector3.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.applyMatrix4(viewMatrix);\n\n        pointPositions[pointOffset + 0] = _vector3.x;\n        pointPositions[pointOffset + 1] = _vector3.y;\n        pointPositions[pointOffset + 2] = _vector3.z; // distance is 0 if decay is 0, because there is no attenuation at all.\n\n        pointDistances[pointLength] = distance;\n        pointDecays[pointLength] = light.distance === 0 ? 0.0 : light.decay;\n        pointLength += 1;\n      } else if (light instanceof THREE.SpotLight) {\n        spotCount += 1;\n        if (!light.visible) continue;\n        spotOffset = spotLength * 3;\n        setColorLinear(spotColors, spotOffset, color, intensity);\n\n        _direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.copy(_direction).applyMatrix4(viewMatrix);\n\n        spotPositions[spotOffset + 0] = _vector3.x;\n        spotPositions[spotOffset + 1] = _vector3.y;\n        spotPositions[spotOffset + 2] = _vector3.z;\n        spotDistances[spotLength] = distance;\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        _direction.sub(_vector3);\n\n        _direction.transformDirection(viewMatrix);\n\n        spotDirections[spotOffset + 0] = _direction.x;\n        spotDirections[spotOffset + 1] = _direction.y;\n        spotDirections[spotOffset + 2] = _direction.z;\n        spotAnglesCos[spotLength] = Math.cos(light.angle);\n        spotExponents[spotLength] = light.exponent;\n        spotDecays[spotLength] = light.distance === 0 ? 0.0 : light.decay;\n        spotLength += 1;\n      } else if (light instanceof THREE.HemisphereLight) {\n        hemiCount += 1;\n        if (!light.visible) continue;\n\n        _direction.setFromMatrixPosition(light.matrixWorld);\n\n        _direction.transformDirection(viewMatrix);\n\n        hemiOffset = hemiLength * 3;\n        hemiPositions[hemiOffset + 0] = _direction.x;\n        hemiPositions[hemiOffset + 1] = _direction.y;\n        hemiPositions[hemiOffset + 2] = _direction.z;\n        skyColor = light.color;\n        groundColor = light.groundColor;\n        setColorLinear(hemiSkyColors, hemiOffset, skyColor, intensity);\n        setColorLinear(hemiGroundColors, hemiOffset, groundColor, intensity);\n        hemiLength += 1;\n      }\n    } // null eventual remains from removed lights\n    // (this is to avoid if in shader)\n\n\n    for (l = dirLength * 3, ll = Math.max(dirColors.length, dirCount * 3); l < ll; l++) dirColors[l] = 0.0;\n\n    for (l = pointLength * 3, ll = Math.max(pointColors.length, pointCount * 3); l < ll; l++) pointColors[l] = 0.0;\n\n    for (l = spotLength * 3, ll = Math.max(spotColors.length, spotCount * 3); l < ll; l++) spotColors[l] = 0.0;\n\n    for (l = hemiLength * 3, ll = Math.max(hemiSkyColors.length, hemiCount * 3); l < ll; l++) hemiSkyColors[l] = 0.0;\n\n    for (l = hemiLength * 3, ll = Math.max(hemiGroundColors.length, hemiCount * 3); l < ll; l++) hemiGroundColors[l] = 0.0;\n\n    zlights.directional.length = dirLength;\n    zlights.point.length = pointLength;\n    zlights.spot.length = spotLength;\n    zlights.hemi.length = hemiLength;\n    zlights.ambient[0] = r;\n    zlights.ambient[1] = g;\n    zlights.ambient[2] = b;\n  } // GL state setting\n\n\n  this.setFaceCulling = function (cullFace, frontFaceDirection) {\n    if (cullFace === THREE.CullFaceNone) {\n      state.disable(_gl.CULL_FACE);\n    } else {\n      if (frontFaceDirection === THREE.FrontFaceDirectionCW) {\n        _gl.frontFace(_gl.CW);\n      } else {\n        _gl.frontFace(_gl.CCW);\n      }\n\n      if (cullFace === THREE.CullFaceBack) {\n        _gl.cullFace(_gl.BACK);\n      } else if (cullFace === THREE.CullFaceFront) {\n        _gl.cullFace(_gl.FRONT);\n      } else {\n        _gl.cullFace(_gl.FRONT_AND_BACK);\n      }\n\n      state.enable(_gl.CULL_FACE);\n    }\n  }; // Textures\n\n\n  function setTextureParameters(textureType, texture, isImagePowerOfTwo) {\n    var extension;\n\n    if (isImagePowerOfTwo) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      if (texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )');\n      }\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )');\n      }\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension) {\n      if (texture.type === THREE.FloatType && extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === THREE.HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, _this.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      _infoMemory.textures++;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    texture.image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n    var image = texture.image,\n        isImagePowerOfTwo = THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height),\n        glFormat = paramThreeToGL(texture.format),\n        glType = paramThreeToGL(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isImagePowerOfTwo);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture instanceof THREE.DataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isImagePowerOfTwo) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if (texture instanceof THREE.CompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n          if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          } else {\n            console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\");\n          }\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isImagePowerOfTwo) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image);\n      }\n    }\n\n    if (texture.generateMipmaps && isImagePowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  }\n\n  this.setTexture = function (texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === undefined) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n        return;\n      }\n\n      if (image.complete === false) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n        return;\n      }\n\n      uploadTexture(textureProperties, texture, slot);\n      return;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  };\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElement('canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function setCubeTexture(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (!textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          _infoMemory.textures++;\n        }\n\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture instanceof THREE.CompressedTexture;\n        var isDataTexture = texture.image[0] instanceof THREE.DataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (_this.autoScaleCubemaps && !isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isImagePowerOfTwo = THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height),\n            glFormat = paramThreeToGL(texture.format),\n            glType = paramThreeToGL(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n                if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\");\n                }\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (texture.generateMipmaps && isImagePowerOfTwo) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n\n  function setCubeTextureDynamic(texture, slot) {\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n  } // Render targets\n\n\n  function setupFrameBuffer(framebuffer, renderTarget, textureTarget) {\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get(renderTarget).__webglTexture, 0);\n  }\n\n  function setupRenderBuffer(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      /* For some reason this is not working. Defaulting to RGBA4.\r\n      } else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n      \t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n      \t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n      */\n\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n  }\n\n  this.setRenderTarget = function (renderTarget) {\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n\n    if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n      var renderTargetProperties = properties.get(renderTarget);\n      if (renderTarget.depthBuffer === undefined) renderTarget.depthBuffer = true;\n      if (renderTarget.stencilBuffer === undefined) renderTarget.stencilBuffer = true;\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      renderTargetProperties.__webglTexture = _gl.createTexture();\n      _infoMemory.textures++; // Setup texture, create render and frame buffers\n\n      var isTargetPowerOfTwo = THREE.Math.isPowerOfTwo(renderTarget.width) && THREE.Math.isPowerOfTwo(renderTarget.height),\n          glFormat = paramThreeToGL(renderTarget.format),\n          glType = paramThreeToGL(renderTarget.type);\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n        renderTargetProperties.__webglRenderbuffer = [];\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n          renderTargetProperties.__webglRenderbuffer[i] = _gl.createRenderbuffer();\n          state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n          setupFrameBuffer(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n          setupRenderBuffer(renderTargetProperties.__webglRenderbuffer[i], renderTarget);\n        }\n\n        if (renderTarget.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n        if (renderTarget.shareDepthFrom) {\n          renderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\n        } else {\n          renderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\n        }\n\n        state.bindTexture(_gl.TEXTURE_2D, renderTargetProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo);\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n        setupFrameBuffer(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D);\n\n        if (renderTarget.shareDepthFrom) {\n          if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n            _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer);\n          } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n            _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer);\n          }\n        } else {\n          setupRenderBuffer(renderTargetProperties.__webglRenderbuffer, renderTarget);\n        }\n\n        if (renderTarget.generateMipmaps && isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n      } // Release everything\n\n\n      if (isCube) {\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n      } else {\n        state.bindTexture(_gl.TEXTURE_2D, null);\n      }\n\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    }\n\n    var framebuffer, width, height, vx, vy;\n\n    if (renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n\n      if (isCube) {\n        framebuffer = renderTargetProperties.__webglFramebuffer[renderTarget.activeCubeFace];\n      } else {\n        framebuffer = renderTargetProperties.__webglFramebuffer;\n      }\n\n      width = renderTarget.width;\n      height = renderTarget.height;\n      vx = 0;\n      vy = 0;\n    } else {\n      framebuffer = null;\n      width = _viewportWidth;\n      height = _viewportHeight;\n      vx = _viewportX;\n      vy = _viewportY;\n    }\n\n    if (framebuffer !== _currentFramebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _gl.viewport(vx, vy, width, height);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    _currentWidth = width;\n    _currentHeight = height;\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n    if (!(renderTarget instanceof THREE.WebGLRenderTarget)) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    if (properties.get(renderTarget).__webglFramebuffer) {\n      if (renderTarget.format !== THREE.RGBAFormat) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.');\n        return;\n      }\n\n      var restore = false;\n\n      if (properties.get(renderTarget).__webglFramebuffer !== _currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, properties.get(renderTarget).__webglFramebuffer);\n\n        restore = true;\n      }\n\n      if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n        _gl.readPixels(x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer);\n      } else {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n      }\n\n      if (restore) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n      }\n    }\n  };\n\n  function updateRenderTargetMipmap(renderTarget) {\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(renderTarget).__webglTexture);\n\n      _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      state.bindTexture(_gl.TEXTURE_2D, properties.get(renderTarget).__webglTexture);\n\n      _gl.generateMipmap(_gl.TEXTURE_2D);\n\n      state.bindTexture(_gl.TEXTURE_2D, null);\n    }\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } // Map three.js constants to WebGL constants\n\n\n  function paramThreeToGL(p) {\n    var extension;\n    if (p === THREE.RepeatWrapping) return _gl.REPEAT;\n    if (p === THREE.ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n    if (p === THREE.MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n    if (p === THREE.NearestFilter) return _gl.NEAREST;\n    if (p === THREE.NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n    if (p === THREE.NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n    if (p === THREE.LinearFilter) return _gl.LINEAR;\n    if (p === THREE.LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n    if (p === THREE.LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n    if (p === THREE.UnsignedByteType) return _gl.UNSIGNED_BYTE;\n    if (p === THREE.UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === THREE.UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === THREE.UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n    if (p === THREE.ByteType) return _gl.BYTE;\n    if (p === THREE.ShortType) return _gl.SHORT;\n    if (p === THREE.UnsignedShortType) return _gl.UNSIGNED_SHORT;\n    if (p === THREE.IntType) return _gl.INT;\n    if (p === THREE.UnsignedIntType) return _gl.UNSIGNED_INT;\n    if (p === THREE.FloatType) return _gl.FLOAT;\n    extension = extensions.get('OES_texture_half_float');\n\n    if (extension !== null) {\n      if (p === THREE.HalfFloatType) return extension.HALF_FLOAT_OES;\n    }\n\n    if (p === THREE.AlphaFormat) return _gl.ALPHA;\n    if (p === THREE.RGBFormat) return _gl.RGB;\n    if (p === THREE.RGBAFormat) return _gl.RGBA;\n    if (p === THREE.LuminanceFormat) return _gl.LUMINANCE;\n    if (p === THREE.LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n    if (p === THREE.AddEquation) return _gl.FUNC_ADD;\n    if (p === THREE.SubtractEquation) return _gl.FUNC_SUBTRACT;\n    if (p === THREE.ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n    if (p === THREE.ZeroFactor) return _gl.ZERO;\n    if (p === THREE.OneFactor) return _gl.ONE;\n    if (p === THREE.SrcColorFactor) return _gl.SRC_COLOR;\n    if (p === THREE.OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n    if (p === THREE.SrcAlphaFactor) return _gl.SRC_ALPHA;\n    if (p === THREE.OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n    if (p === THREE.DstAlphaFactor) return _gl.DST_ALPHA;\n    if (p === THREE.OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n    if (p === THREE.DstColorFactor) return _gl.DST_COLOR;\n    if (p === THREE.OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n    if (p === THREE.SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n    extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      if (p === THREE.RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n    }\n\n    extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      if (p === THREE.MinEquation) return extension.MIN_EXT;\n      if (p === THREE.MaxEquation) return extension.MAX_EXT;\n    }\n\n    return 0;\n  } // DEPRECATED\n\n\n  this.supportsFloatTextures = function () {\n    console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n    return extensions.get('OES_texture_float');\n  };\n\n  this.supportsHalfFloatTextures = function () {\n    console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n    return extensions.get('OES_texture_half_float');\n  };\n\n  this.supportsStandardDerivatives = function () {\n    console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n    return extensions.get('OES_standard_derivatives');\n  };\n\n  this.supportsCompressedTextureS3TC = function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n    return extensions.get('WEBGL_compressed_texture_s3tc');\n  };\n\n  this.supportsCompressedTexturePVRTC = function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n    return extensions.get('WEBGL_compressed_texture_pvrtc');\n  };\n\n  this.supportsBlendMinMax = function () {\n    console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n    return extensions.get('EXT_blend_minmax');\n  };\n\n  this.supportsVertexTextures = function () {\n    return capabilities.vertexTextures;\n  };\n\n  this.supportsInstancedArrays = function () {\n    console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n    return extensions.get('ANGLE_instanced_arrays');\n  }; //\n\n\n  this.initMaterial = function () {\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n  };\n\n  this.addPrePlugin = function () {\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n  };\n\n  this.addPostPlugin = function () {\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n  };\n\n  this.updateShadowMap = function () {\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n  };\n\n  Object.defineProperties(this, {\n    shadowMapEnabled: {\n      get: function () {\n        return shadowMap.enabled;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function () {\n        return shadowMap.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function () {\n        return shadowMap.cullFace;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.');\n        shadowMap.cullFace = value;\n      }\n    },\n    shadowMapDebug: {\n      get: function () {\n        return shadowMap.debug;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.');\n        shadowMap.debug = value;\n      }\n    }\n  });\n}; // File:src/renderers/WebGLRenderTarget.js\n\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.WebGLRenderTarget = function (width, height, options) {\n  this.uuid = THREE.Math.generateUUID();\n  this.width = width;\n  this.height = height;\n  options = options || {};\n  this.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\n  this.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\n  this.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n  this.generateMipmaps = true;\n  this.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\n};\n\nTHREE.WebGLRenderTarget.prototype = {\n  constructor: THREE.WebGLRenderTarget,\n  setSize: function (width, height) {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.format = source.format;\n    this.type = source.type;\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.generateMipmaps = source.generateMipmaps;\n    this.shareDepthFrom = source.shareDepthFrom;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype); // File:src/renderers/WebGLRenderTargetCube.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\n\nTHREE.WebGLRenderTargetCube = function (width, height, options) {\n  THREE.WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube; // File:src/renderers/webgl/WebGLBufferRenderer.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\nTHREE.WebGLBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    _gl.drawArrays(mode, start, count);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    var position = geometry.attributes.position;\n\n    if (position instanceof THREE.InterleavedBufferAttribute) {\n      extension.drawArraysInstancedANGLE(mode, 0, position.data.count, geometry.maxInstancedCount);\n    } else {\n      extension.drawArraysInstancedANGLE(mode, 0, position.count, geometry.maxInstancedCount);\n    }\n  }\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLIndexedBufferRenderer = function (_gl, extensions, _infoRender) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, size;\n\n  function setIndex(index) {\n    if (index.array instanceof Uint32Array && extensions.get('OES_element_index_uint')) {\n      type = _gl.UNSIGNED_INT;\n      size = 4;\n    } else {\n      type = _gl.UNSIGNED_SHORT;\n      size = 2;\n    }\n  }\n\n  function render(start, count) {\n    _gl.drawElements(mode, count, type, start * size);\n\n    _infoRender.calls++;\n    _infoRender.vertices += count;\n    if (mode === _gl.TRIANGLES) _infoRender.faces += count / 3;\n  }\n\n  function renderInstances(geometry) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    var index = geometry.index;\n    extension.drawElementsInstancedANGLE(mode, index.array.length, type, 0, geometry.maxInstancedCount);\n  }\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}; // File:src/renderers/webgl/WebGLExtensions.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLExtensions = function (gl) {\n  var extensions = {};\n\n  this.get = function (name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    var extension;\n\n    switch (name) {\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      default:\n        extension = gl.getExtension(name);\n    }\n\n    if (extension === null) {\n      console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n    }\n\n    extensions[name] = extension;\n    return extension;\n  };\n}; // File:src/renderers/webgl/WebGLCapabilities.js\n\n\nTHREE.WebGLCapabilities = function (gl, extensions, parameters) {\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  this.getMaxPrecision = getMaxPrecision;\n  this.precision = parameters.precision !== undefined ? parameters.precision : 'highp', this.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n  this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  this.maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  this.maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  this.maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  this.vertexTextures = this.maxVertexTextures > 0;\n  this.floatFragmentTextures = !!extensions.get('OES_texture_float');\n  this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n  var _maxPrecision = getMaxPrecision(this.precision);\n\n  if (_maxPrecision !== this.precision) {\n    console.warn('THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.');\n    this.precision = _maxPrecision;\n  }\n\n  if (this.logarithmicDepthBuffer) {\n    this.logarithmicDepthBuffer = !!extensions.get('EXT_frag_depth');\n  }\n}; // File:src/renderers/webgl/WebGLGeometries.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLGeometries = function (gl, properties, info) {\n  var geometries = {};\n\n  function get(object) {\n    var geometry = object.geometry;\n\n    if (geometries[geometry.id] !== undefined) {\n      return geometries[geometry.id];\n    }\n\n    geometry.addEventListener('dispose', onGeometryDispose);\n    var buffergeometry;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry instanceof THREE.Geometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new THREE.BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries[geometry.id] = buffergeometry;\n    info.memory.geometries++;\n    return buffergeometry;\n  }\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries[geometry.id];\n    deleteAttributes(buffergeometry.attributes);\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id];\n    var property = properties.get(geometry);\n    if (property.wireframe) deleteAttribute(property.wireframe);\n    info.memory.geometries--;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function deleteAttribute(attribute) {\n    var buffer = getAttributeBuffer(attribute);\n\n    if (buffer !== undefined) {\n      gl.deleteBuffer(buffer);\n      removeAttributeBuffer(attribute);\n    }\n  }\n\n  function deleteAttributes(attributes) {\n    for (var name in attributes) {\n      deleteAttribute(attributes[name]);\n    }\n  }\n\n  function removeAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      properties.delete(attribute.data);\n    } else {\n      properties.delete(attribute);\n    }\n  }\n\n  this.get = get;\n}; // File:src/renderers/webgl/WebGLObjects.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLObjects = function (gl, properties, info) {\n  var geometries = new THREE.WebGLGeometries(gl, properties, info); //\n\n  function update(object) {\n    // TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n    var geometry = geometries.get(object);\n\n    if (object.geometry instanceof THREE.Geometry) {\n      geometry.updateFromObject(object);\n    }\n\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n\n    if (index !== null) {\n      updateAttribute(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in attributes) {\n      updateAttribute(attributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        updateAttribute(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n\n    return geometry;\n  }\n\n  function updateAttribute(attribute, bufferType) {\n    var data = attribute instanceof THREE.InterleavedBufferAttribute ? attribute.data : attribute;\n    var attributeProperties = properties.get(data);\n\n    if (attributeProperties.__webglBuffer === undefined) {\n      createBuffer(attributeProperties, data, bufferType);\n    } else if (attributeProperties.version !== data.version) {\n      updateBuffer(attributeProperties, data, bufferType);\n    }\n  }\n\n  function createBuffer(attributeProperties, data, bufferType) {\n    attributeProperties.__webglBuffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n    var usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    gl.bufferData(bufferType, data.array, usage);\n    attributeProperties.version = data.version;\n  }\n\n  function updateBuffer(attributeProperties, data, bufferType) {\n    gl.bindBuffer(bufferType, attributeProperties.__webglBuffer);\n\n    if (data.dynamic === false || data.updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, data.array);\n    } else if (data.updateRange.count === 0) {\n      console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n    } else {\n      gl.bufferSubData(bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT, data.array.subarray(data.updateRange.offset, data.updateRange.offset + data.updateRange.count));\n      data.updateRange.count = 0; // reset range\n    }\n\n    attributeProperties.version = data.version;\n  }\n\n  function getAttributeBuffer(attribute) {\n    if (attribute instanceof THREE.InterleavedBufferAttribute) {\n      return properties.get(attribute.data).__webglBuffer;\n    }\n\n    return properties.get(attribute).__webglBuffer;\n  }\n\n  function getWireframeAttribute(geometry) {\n    var property = properties.get(geometry);\n\n    if (property.wireframe !== undefined) {\n      return property.wireframe;\n    }\n\n    var indices = [];\n    var index = geometry.index;\n    var attributes = geometry.attributes;\n    var position = attributes.position; // console.time( 'wireframe' );\n\n    if (index !== null) {\n      var edges = {};\n      var array = index.array;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        if (checkEdge(edges, a, b)) indices.push(a, b);\n        if (checkEdge(edges, b, c)) indices.push(b, c);\n        if (checkEdge(edges, c, a)) indices.push(c, a);\n      }\n    } else {\n      var array = attributes.position.array;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    } // console.timeEnd( 'wireframe' );\n\n\n    var TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n    var attribute = new THREE.BufferAttribute(new TypeArray(indices), 1);\n    updateAttribute(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    property.wireframe = attribute;\n    return attribute;\n  }\n\n  function checkEdge(edges, a, b) {\n    if (a > b) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var list = edges[a];\n\n    if (list === undefined) {\n      edges[a] = [b];\n      return true;\n    } else if (list.indexOf(b) === -1) {\n      list.push(b);\n      return true;\n    }\n\n    return false;\n  }\n\n  this.getAttributeBuffer = getAttributeBuffer;\n  this.getWireframeAttribute = getWireframeAttribute;\n  this.update = update;\n}; // File:src/renderers/webgl/WebGLProgram.js\n\n\nTHREE.WebGLProgram = function () {\n  var programIdCount = 0;\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchUniformLocations(gl, program, identifiers) {\n    var uniforms = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveUniform(program, i);\n      var name = info.name;\n      var location = gl.getUniformLocation(program, name); // console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\n\n      var suffixPos = name.lastIndexOf('[0]');\n\n      if (suffixPos !== -1 && suffixPos === name.length - 3) {\n        uniforms[name.substr(0, suffixPos)] = location;\n      }\n\n      uniforms[name] = location;\n    }\n\n    return uniforms;\n  }\n\n  function fetchAttributeLocations(gl, program, identifiers) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  return function WebGLProgram(renderer, code, material, parameters) {\n    var gl = renderer.context;\n    var defines = material.defines;\n    var vertexShader = material.__webglShader.vertexShader;\n    var fragmentShader = material.__webglShader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === THREE.PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case THREE.CubeReflectionMapping:\n        case THREE.CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case THREE.EquirectangularReflectionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case THREE.SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case THREE.CubeRefractionMapping:\n        case THREE.EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case THREE.MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case THREE.MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case THREE.AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material instanceof THREE.RawShaderMaterial) {\n      prefixVertex = '';\n      prefixFragment = '';\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', renderer.gammaInput ? '#define GAMMA_INPUT' : '', renderer.gammaOutput ? '#define GAMMA_OUTPUT' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_DIR_LIGHTS ' + parameters.maxDirLights, '#define MAX_POINT_LIGHTS ' + parameters.maxPointLights, '#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights, '#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights, '#define MAX_SHADOWS ' + parameters.maxShadows, '#define MAX_BONES ' + parameters.maxBones, parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [parameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + material.__webglShader.name, customDefines, '#define MAX_DIR_LIGHTS ' + parameters.maxDirLights, '#define MAX_POINT_LIGHTS ' + parameters.maxPointLights, '#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights, '#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights, '#define MAX_SHADOWS ' + parameters.maxShadows, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '', renderer.gammaInput ? '#define GAMMA_INPUT' : '', renderer.gammaOutput ? '#define GAMMA_OUTPUT' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.metal ? '#define METAL' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && renderer.extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader;\n    var glVertexShader = THREE.WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = THREE.WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program);\n    var vertexLog = gl.getShaderInfoLog(glVertexShader);\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader);\n    var runnable = true;\n    var haveDiagnostics = true;\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = fetchUniformLocations(gl, program);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  };\n}(); // File:src/renderers/webgl/WebGLPrograms.js\n\n\nTHREE.WebGLPrograms = function (renderer, capabilities) {\n  var programs = [];\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points'\n  };\n  var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\", \"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\", \"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\", \"flipSided\"];\n\n  function allocateBones(object) {\n    if (capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = capabilities.maxVertexUniforms;\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = nVertexMatrices;\n\n      if (object !== undefined && object instanceof THREE.SkinnedMesh) {\n        maxBones = Math.min(object.skeleton.bones.length, maxBones);\n\n        if (maxBones < object.skeleton.bones.length) {\n          console.warn('WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)');\n        }\n      }\n\n      return maxBones;\n    }\n  }\n\n  function allocateLights(lights) {\n    var dirLights = 0;\n    var pointLights = 0;\n    var spotLights = 0;\n    var hemiLights = 0;\n\n    for (var l = 0, ll = lights.length; l < ll; l++) {\n      var light = lights[l];\n      if (light.onlyShadow || light.visible === false) continue;\n      if (light instanceof THREE.DirectionalLight) dirLights++;\n      if (light instanceof THREE.PointLight) pointLights++;\n      if (light instanceof THREE.SpotLight) spotLights++;\n      if (light instanceof THREE.HemisphereLight) hemiLights++;\n    }\n\n    return {\n      'directional': dirLights,\n      'point': pointLights,\n      'spot': spotLights,\n      'hemi': hemiLights\n    };\n  }\n\n  function allocateShadows(lights) {\n    var maxShadows = 0;\n\n    for (var l = 0, ll = lights.length; l < ll; l++) {\n      var light = lights[l];\n      if (!light.castShadow) continue;\n      if (light instanceof THREE.SpotLight) maxShadows++;\n      if (light instanceof THREE.DirectionalLight) maxShadows++;\n    }\n\n    return maxShadows;\n  }\n\n  this.getParameters = function (material, lights, fog, object) {\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    var maxLightCount = allocateLights(lights);\n    var maxShadows = allocateShadows(lights);\n    var maxBones = allocateBones(object);\n    var precision = renderer.getPrecision();\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    }\n\n    var parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      map: !!material.map,\n      envMap: !!material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      displacementMap: !!material.displacementMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: fog,\n      useFog: material.fog,\n      fogExp: fog instanceof THREE.FogExp2,\n      flatShading: material.shading === THREE.FlatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: renderer.maxMorphTargets,\n      maxMorphNormals: renderer.maxMorphNormals,\n      maxDirLights: maxLightCount.directional,\n      maxPointLights: maxLightCount.point,\n      maxSpotLights: maxLightCount.spot,\n      maxHemiLights: maxLightCount.hemi,\n      maxShadows: maxShadows,\n      shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\n      shadowMapType: renderer.shadowMap.type,\n      shadowMapDebug: renderer.shadowMap.debug,\n      alphaTest: material.alphaTest,\n      metal: material.metal,\n      doubleSided: material.side === THREE.DoubleSide,\n      flipSided: material.side === THREE.BackSide\n    };\n    return parameters;\n  };\n\n  this.getProgramCode = function (material, parameters) {\n    var chunks = [];\n\n    if (parameters.shaderID) {\n      chunks.push(parameters.shaderID);\n    } else {\n      chunks.push(material.fragmentShader);\n      chunks.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        chunks.push(name);\n        chunks.push(material.defines[name]);\n      }\n    }\n\n    for (var i = 0; i < parameterNames.length; i++) {\n      var parameterName = parameterNames[i];\n      chunks.push(parameterName);\n      chunks.push(parameters[parameterName]);\n    }\n\n    return chunks.join();\n  };\n\n  this.acquireProgram = function (material, parameters, code) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var programInfo = programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new THREE.WebGLProgram(renderer, code, material, parameters);\n      programs.push(program);\n    }\n\n    return program;\n  };\n\n  this.releaseProgram = function (program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n  this.programs = programs;\n}; // File:src/renderers/webgl/WebGLProperties.js\n\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\n\n\nTHREE.WebGLProperties = function () {\n  var properties = {};\n\n  this.get = function (object) {\n    var uuid = object.uuid;\n    var map = properties[uuid];\n\n    if (map === undefined) {\n      map = {};\n      properties[uuid] = map;\n    }\n\n    return map;\n  };\n\n  this.delete = function (object) {\n    delete properties[object.uuid];\n  };\n\n  this.clear = function () {\n    properties = {};\n  };\n}; // File:src/renderers/webgl/WebGLShader.js\n\n\nTHREE.WebGLShader = function () {\n  var addLineNumbers = function (string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  };\n\n  return function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n    }\n\n    if (gl.getShaderInfoLog(shader) !== '') {\n      console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n    } // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  };\n}(); // File:src/renderers/webgl/WebGLShadowMap.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.WebGLShadowMap = function (_renderer, _lights, _objects) {\n  var _gl = _renderer.context,\n      _state = _renderer.state,\n      _frustum = new THREE.Frustum(),\n      _projScreenMatrix = new THREE.Matrix4(),\n      _min = new THREE.Vector3(),\n      _max = new THREE.Vector3(),\n      _matrixPosition = new THREE.Vector3(),\n      _renderList = []; // init\n\n\n  var depthShader = THREE.ShaderLib[\"depthRGBA\"];\n  var depthUniforms = THREE.UniformsUtils.clone(depthShader.uniforms);\n\n  var _depthMaterial = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader\n  });\n\n  var _depthMaterialMorph = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader,\n    morphTargets: true\n  });\n\n  var _depthMaterialSkin = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader,\n    skinning: true\n  });\n\n  var _depthMaterialMorphSkin = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader,\n    morphTargets: true,\n    skinning: true\n  });\n\n  _depthMaterial._shadowPass = true;\n  _depthMaterialMorph._shadowPass = true;\n  _depthMaterialSkin._shadowPass = true;\n  _depthMaterialMorphSkin._shadowPass = true; //\n\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = THREE.PCFShadowMap;\n  this.cullFace = THREE.CullFaceFront;\n\n  this.render = function (scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return; // set GL state for depth map\n\n    _gl.clearColor(1, 1, 1, 1);\n\n    _state.disable(_gl.BLEND);\n\n    _state.enable(_gl.CULL_FACE);\n\n    _gl.frontFace(_gl.CCW);\n\n    if (scope.cullFace === THREE.CullFaceFront) {\n      _gl.cullFace(_gl.FRONT);\n    } else {\n      _gl.cullFace(_gl.BACK);\n    }\n\n    _state.setDepthTest(true); // render depth map\n\n\n    for (var i = 0, il = _lights.length; i < il; i++) {\n      var light = _lights[i];\n      if (!light.castShadow) continue;\n\n      if (!light.shadowMap) {\n        var shadowFilter = THREE.LinearFilter;\n\n        if (scope.type === THREE.PCFSoftShadowMap) {\n          shadowFilter = THREE.NearestFilter;\n        }\n\n        var pars = {\n          minFilter: shadowFilter,\n          magFilter: shadowFilter,\n          format: THREE.RGBAFormat\n        };\n        light.shadowMap = new THREE.WebGLRenderTarget(light.shadowMapWidth, light.shadowMapHeight, pars);\n        light.shadowMapSize = new THREE.Vector2(light.shadowMapWidth, light.shadowMapHeight);\n        light.shadowMatrix = new THREE.Matrix4();\n      }\n\n      if (!light.shadowCamera) {\n        if (light instanceof THREE.SpotLight) {\n          light.shadowCamera = new THREE.PerspectiveCamera(light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar);\n        } else if (light instanceof THREE.DirectionalLight) {\n          light.shadowCamera = new THREE.OrthographicCamera(light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar);\n        } else {\n          console.error(\"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light);\n          continue;\n        }\n\n        scene.add(light.shadowCamera);\n        if (scene.autoUpdate === true) scene.updateMatrixWorld();\n      }\n\n      if (light.shadowCameraVisible && !light.cameraHelper) {\n        light.cameraHelper = new THREE.CameraHelper(light.shadowCamera);\n        scene.add(light.cameraHelper);\n      }\n\n      var shadowMap = light.shadowMap;\n      var shadowMatrix = light.shadowMatrix;\n      var shadowCamera = light.shadowCamera; //\n\n      shadowCamera.position.setFromMatrixPosition(light.matrixWorld);\n\n      _matrixPosition.setFromMatrixPosition(light.target.matrixWorld);\n\n      shadowCamera.lookAt(_matrixPosition);\n      shadowCamera.updateMatrixWorld();\n      shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld); //\n\n      if (light.cameraHelper) light.cameraHelper.visible = light.shadowCameraVisible;\n      if (light.shadowCameraVisible) light.cameraHelper.update(); // compute shadow matrix\n\n      shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n      shadowMatrix.multiply(shadowCamera.projectionMatrix);\n      shadowMatrix.multiply(shadowCamera.matrixWorldInverse); // update camera matrices and frustum\n\n      _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n      _frustum.setFromMatrix(_projScreenMatrix); // render shadow map\n\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // set object matrices & frustum culling\n\n\n      _renderList.length = 0;\n      projectObject(scene, shadowCamera); // render regular objects\n\n      for (var j = 0, jl = _renderList.length; j < jl; j++) {\n        var object = _renderList[j];\n\n        var geometry = _objects.update(object);\n\n        var material = object.material;\n\n        if (material instanceof THREE.MeshFaceMaterial) {\n          var groups = geometry.groups;\n          var materials = material.materials;\n\n          for (var k = 0, kl = groups.length; k < kl; k++) {\n            var group = groups[k];\n            var groupMaterial = materials[group.materialIndex];\n\n            if (groupMaterial.visible === true) {\n              _renderer.renderBufferDirect(shadowCamera, _lights, null, geometry, getDepthMaterial(object, groupMaterial), object, group);\n            }\n          }\n        } else {\n          _renderer.renderBufferDirect(shadowCamera, _lights, null, geometry, getDepthMaterial(object, material), object);\n        }\n      }\n    } // restore GL state\n\n\n    var clearColor = _renderer.getClearColor(),\n        clearAlpha = _renderer.getClearAlpha();\n\n    _renderer.setClearColor(clearColor, clearAlpha);\n\n    _state.enable(_gl.BLEND);\n\n    if (scope.cullFace === THREE.CullFaceFront) {\n      _gl.cullFace(_gl.BACK);\n    }\n\n    _renderer.resetGLState();\n\n    scope.needsUpdate = false;\n  };\n\n  function getDepthMaterial(object, material) {\n    var geometry = object.geometry;\n    var useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\n    var useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n    var depthMaterial;\n\n    if (object.customDepthMaterial) {\n      depthMaterial = object.customDepthMaterial;\n    } else if (useSkinning) {\n      depthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\n    } else if (useMorphing) {\n      depthMaterial = _depthMaterialMorph;\n    } else {\n      depthMaterial = _depthMaterial;\n    }\n\n    depthMaterial.visible = material.visible;\n    depthMaterial.wireframe = material.wireframe;\n    depthMaterial.wireframeLinewidth = material.wireframeLinewidth;\n    return depthMaterial;\n  }\n\n  function projectObject(object, camera) {\n    if (object.visible === false) return;\n\n    if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points) {\n      if (object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n        var material = object.material;\n\n        if (material.visible === true) {\n          object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\n          _renderList.push(object);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera);\n    }\n  }\n}; // File:src/renderers/webgl/WebGLState.js\n\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\n\n\nTHREE.WebGLState = function (gl, extensions, paramThreeToGL) {\n  var _this = this;\n\n  var newAttributes = new Uint8Array(16);\n  var enabledAttributes = new Uint8Array(16);\n  var capabilities = {};\n  var compressedTextureFormats = null;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentDepthFunc = null;\n  var currentDepthWrite = null;\n  var currentColorWrite = null;\n  var currentFlipSided = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var currentTextureSlot = undefined;\n  var currentBoundTextures = {};\n\n  this.init = function () {\n    gl.clearColor(0, 0, 0, 1);\n    gl.clearDepth(1);\n    gl.clearStencil(0);\n    this.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n    gl.frontFace(gl.CCW);\n    gl.cullFace(gl.BACK);\n    this.enable(gl.CULL_FACE);\n    this.enable(gl.BLEND);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  };\n\n  this.initAttributes = function () {\n    for (var i = 0, l = newAttributes.length; i < l; i++) {\n      newAttributes[i] = 0;\n    }\n  };\n\n  this.enableAttribute = function (attribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n  };\n\n  this.disableUnusedAttributes = function () {\n    for (var i = 0, l = enabledAttributes.length; i < l; i++) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  };\n\n  this.enable = function (id) {\n    if (capabilities[id] !== true) {\n      gl.enable(id);\n      capabilities[id] = true;\n    }\n  };\n\n  this.disable = function (id) {\n    if (capabilities[id] !== false) {\n      gl.disable(id);\n      capabilities[id] = false;\n    }\n  };\n\n  this.getCompressedTextureFormats = function () {\n    if (compressedTextureFormats === null) {\n      compressedTextureFormats = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc')) {\n        var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n\n    return compressedTextureFormats;\n  };\n\n  this.setBlending = function (blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha) {\n    if (blending !== currentBlending) {\n      if (blending === THREE.NoBlending) {\n        this.disable(gl.BLEND);\n      } else if (blending === THREE.AdditiveBlending) {\n        this.enable(gl.BLEND);\n        gl.blendEquation(gl.FUNC_ADD);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n      } else if (blending === THREE.SubtractiveBlending) {\n        // TODO: Find blendFuncSeparate() combination\n        this.enable(gl.BLEND);\n        gl.blendEquation(gl.FUNC_ADD);\n        gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n      } else if (blending === THREE.MultiplyBlending) {\n        // TODO: Find blendFuncSeparate() combination\n        this.enable(gl.BLEND);\n        gl.blendEquation(gl.FUNC_ADD);\n        gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n      } else if (blending === THREE.CustomBlending) {\n        this.enable(gl.BLEND);\n      } else {\n        this.enable(gl.BLEND);\n        gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      }\n\n      currentBlending = blending;\n    }\n\n    if (blending === THREE.CustomBlending) {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(paramThreeToGL(blendEquation), paramThreeToGL(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(paramThreeToGL(blendSrc), paramThreeToGL(blendDst), paramThreeToGL(blendSrcAlpha), paramThreeToGL(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n    } else {\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n    }\n  };\n\n  this.setDepthFunc = function (depthFunc) {\n    if (currentDepthFunc !== depthFunc) {\n      if (depthFunc) {\n        switch (depthFunc) {\n          case THREE.NeverDepth:\n            gl.depthFunc(gl.NEVER);\n            break;\n\n          case THREE.AlwaysDepth:\n            gl.depthFunc(gl.ALWAYS);\n            break;\n\n          case THREE.LessDepth:\n            gl.depthFunc(gl.LESS);\n            break;\n\n          case THREE.LessEqualDepth:\n            gl.depthFunc(gl.LEQUAL);\n            break;\n\n          case THREE.EqualDepth:\n            gl.depthFunc(gl.EQUAL);\n            break;\n\n          case THREE.GreaterEqualDepth:\n            gl.depthFunc(gl.GEQUAL);\n            break;\n\n          case THREE.GreaterDepth:\n            gl.depthFunc(gl.GREATER);\n            break;\n\n          case THREE.NotEqualDepth:\n            gl.depthFunc(gl.NOTEQUAL);\n            break;\n\n          default:\n            gl.depthFunc(gl.LEQUAL);\n        }\n      } else {\n        gl.depthFunc(gl.LEQUAL);\n      }\n\n      currentDepthFunc = depthFunc;\n    }\n  };\n\n  this.setDepthTest = function (depthTest) {\n    if (depthTest) {\n      this.enable(gl.DEPTH_TEST);\n    } else {\n      this.disable(gl.DEPTH_TEST);\n    }\n  };\n\n  this.setDepthWrite = function (depthWrite) {\n    if (currentDepthWrite !== depthWrite) {\n      gl.depthMask(depthWrite);\n      currentDepthWrite = depthWrite;\n    }\n  };\n\n  this.setColorWrite = function (colorWrite) {\n    if (currentColorWrite !== colorWrite) {\n      gl.colorMask(colorWrite, colorWrite, colorWrite, colorWrite);\n      currentColorWrite = colorWrite;\n    }\n  };\n\n  this.setFlipSided = function (flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  };\n\n  this.setLineWidth = function (width) {\n    if (width !== currentLineWidth) {\n      gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  };\n\n  this.setPolygonOffset = function (polygonOffset, factor, units) {\n    if (polygonOffset) {\n      this.enable(gl.POLYGON_OFFSET_FILL);\n    } else {\n      this.disable(gl.POLYGON_OFFSET_FILL);\n    }\n\n    if (polygonOffset && (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units)) {\n      gl.polygonOffset(factor, units);\n      currentPolygonOffsetFactor = factor;\n      currentPolygonOffsetUnits = units;\n    }\n  };\n\n  this.setScissorTest = function (scissorTest) {\n    if (scissorTest) {\n      this.enable(gl.SCISSOR_TEST);\n    } else {\n      this.disable(gl.SCISSOR_TEST);\n    }\n  }; // texture\n\n\n  this.activeTexture = function (webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  };\n\n  this.bindTexture = function (webglType, webglTexture) {\n    if (currentTextureSlot === undefined) {\n      _this.activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  };\n\n  this.compressedTexImage2D = function () {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  this.texImage2D = function () {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error(error);\n    }\n  }; //\n\n\n  this.reset = function () {\n    for (var i = 0; i < enabledAttributes.length; i++) {\n      if (enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n\n    capabilities = {};\n    compressedTextureFormats = null;\n    currentBlending = null;\n    currentDepthWrite = null;\n    currentColorWrite = null;\n    currentFlipSided = null;\n  };\n}; // File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.LensFlarePlugin = function (renderer, flares) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var hasVertexTexture;\n  var tempTexture, occlusionTexture;\n\n  var init = function () {\n    var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n    tempTexture = gl.createTexture();\n    occlusionTexture = gl.createTexture();\n    state.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    hasVertexTexture = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;\n    var shader;\n\n    if (hasVertexTexture) {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n        \"if( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n        \"} else if( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    } else {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if( renderType == 2 ) {\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"precision mediump float;\", \"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform sampler2D occlusionMap;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"void main() {\", // pink square\n        \"if( renderType == 0 ) {\", \"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\", // restore\n        \"} else if( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\", \"visibility = ( 1.0 - visibility / 4.0 );\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * visibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    }\n\n    program = createProgram(shader);\n    attributes = {\n      vertex: gl.getAttribLocation(program, \"position\"),\n      uv: gl.getAttribLocation(program, \"uv\")\n    };\n    uniforms = {\n      renderType: gl.getUniformLocation(program, \"renderType\"),\n      map: gl.getUniformLocation(program, \"map\"),\n      occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity: gl.getUniformLocation(program, \"opacity\"),\n      color: gl.getUniformLocation(program, \"color\"),\n      scale: gl.getUniformLocation(program, \"scale\"),\n      rotation: gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  };\n  /*\r\n   * Render lens flares\r\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n   *         reads these back and calculates occlusion.\r\n   */\n\n\n  this.render = function (scene, camera, viewportWidth, viewportHeight) {\n    if (flares.length === 0) return;\n    var tempPosition = new THREE.Vector3();\n    var invAspect = viewportHeight / viewportWidth,\n        halfViewportWidth = viewportWidth * 0.5,\n        halfViewportHeight = viewportHeight * 0.5;\n    var size = 16 / viewportHeight,\n        scale = new THREE.Vector2(size * invAspect, size);\n    var screenPosition = new THREE.Vector3(1, 1, 0),\n        screenPositionPixels = new THREE.Vector2(1, 1);\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.vertex);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes(); // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/uniforms\n\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    state.disable(gl.CULL_FACE);\n    gl.depthMask(false);\n\n    for (var i = 0, l = flares.length; i < l; i++) {\n      size = 16 / viewportHeight;\n      scale.set(size * invAspect, size); // calc object screen position\n\n      var flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyProjection(camera.projectionMatrix); // setup arrays for gl programs\n\n      screenPosition.copy(tempPosition);\n      screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\n      screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight; // screen cull\n\n      if (hasVertexTexture || screenPositionPixels.x > 0 && screenPositionPixels.x < viewportWidth && screenPositionPixels.y > 0 && screenPositionPixels.y < viewportHeight) {\n        // save current RGB to temp texture\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, null);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0); // render pink quad\n\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        state.disable(gl.BLEND);\n        state.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n        state.activeTexture(gl.TEXTURE0);\n        state.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0); // restore graphics\n\n        gl.uniform1i(uniforms.renderType, 1);\n        state.disable(gl.DEPTH_TEST);\n        state.activeTexture(gl.TEXTURE1);\n        state.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n        flare.positionScreen.copy(screenPosition);\n\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        } // render flares\n\n\n        gl.uniform1i(uniforms.renderType, 2);\n        state.enable(gl.BLEND);\n\n        for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n          var sprite = flare.lensFlares[j];\n\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewportHeight;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            state.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            renderer.setTexture(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    renderer.resetGLState();\n  };\n\n  function createProgram(shader) {\n    var program = gl.createProgram();\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}; // File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\n\nTHREE.SpritePlugin = function (renderer, sprites) {\n  var gl = renderer.context;\n  var state = renderer.state;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture; // decompose matrixWorld\n\n  var spritePosition = new THREE.Vector3();\n  var spriteRotation = new THREE.Quaternion();\n  var spriteScale = new THREE.Vector3();\n\n  var init = function () {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElement('canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n  };\n\n  this.render = function (scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog instanceof THREE.Fog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog instanceof THREE.FogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = -sprite.modelViewMatrix.elements[14];\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      state.setDepthTest(material.depthTest);\n      state.setDepthWrite(material.depthWrite);\n\n      if (material.map && material.map.image && material.map.image.width) {\n        renderer.setTexture(material.map, 0);\n      } else {\n        renderer.setTexture(texture, 0);\n      }\n\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    renderer.resetGLState();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  function painterSortStable(a, b) {\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}; // File:src/extras/GeometryUtils.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.GeometryUtils = {\n  merge: function (geometry1, geometry2, materialIndexOffset) {\n    console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n    var matrix;\n\n    if (geometry2 instanceof THREE.Mesh) {\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n    }\n\n    geometry1.merge(geometry2, matrix, materialIndexOffset);\n  },\n  center: function (geometry) {\n    console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n    return geometry.center();\n  }\n}; // File:src/extras/ImageUtils.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\n\nTHREE.ImageUtils = {\n  crossOrigin: undefined,\n  loadTexture: function (url, mapping, onLoad, onError) {\n    var loader = new THREE.ImageLoader();\n    loader.crossOrigin = this.crossOrigin;\n    var texture = new THREE.Texture(undefined, mapping);\n    loader.load(url, function (image) {\n      texture.image = image;\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture);\n    }, undefined, function (event) {\n      if (onError) onError(event);\n    });\n    texture.sourceFile = url;\n    return texture;\n  },\n  loadTextureCube: function (array, mapping, onLoad, onError) {\n    var images = [];\n    var loader = new THREE.ImageLoader();\n    loader.crossOrigin = this.crossOrigin;\n    var texture = new THREE.CubeTexture(images, mapping);\n    var loaded = 0;\n\n    var loadTexture = function (i) {\n      loader.load(array[i], function (image) {\n        texture.images[i] = image;\n        loaded += 1;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    };\n\n    for (var i = 0, il = array.length; i < il; ++i) {\n      loadTexture(i);\n    }\n\n    return texture;\n  },\n  loadCompressedTexture: function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  },\n  loadCompressedTextureCube: function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  },\n  getNormalMap: function (image, depth) {\n    // Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\n    var cross = function (a, b) {\n      return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n    };\n\n    var subtract = function (a, b) {\n      return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\n    };\n\n    var normalize = function (a) {\n      var l = Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n      return [a[0] / l, a[1] / l, a[2] / l];\n    };\n\n    depth = depth | 1;\n    var width = image.width;\n    var height = image.height;\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0);\n    var data = context.getImageData(0, 0, width, height).data;\n    var imageData = context.createImageData(width, height);\n    var output = imageData.data;\n\n    for (var x = 0; x < width; x++) {\n      for (var y = 0; y < height; y++) {\n        var ly = y - 1 < 0 ? 0 : y - 1;\n        var uy = y + 1 > height - 1 ? height - 1 : y + 1;\n        var lx = x - 1 < 0 ? 0 : x - 1;\n        var ux = x + 1 > width - 1 ? width - 1 : x + 1;\n        var points = [];\n        var origin = [0, 0, data[(y * width + x) * 4] / 255 * depth];\n        points.push([-1, 0, data[(y * width + lx) * 4] / 255 * depth]);\n        points.push([-1, -1, data[(ly * width + lx) * 4] / 255 * depth]);\n        points.push([0, -1, data[(ly * width + x) * 4] / 255 * depth]);\n        points.push([1, -1, data[(ly * width + ux) * 4] / 255 * depth]);\n        points.push([1, 0, data[(y * width + ux) * 4] / 255 * depth]);\n        points.push([1, 1, data[(uy * width + ux) * 4] / 255 * depth]);\n        points.push([0, 1, data[(uy * width + x) * 4] / 255 * depth]);\n        points.push([-1, 1, data[(uy * width + lx) * 4] / 255 * depth]);\n        var normals = [];\n        var num_points = points.length;\n\n        for (var i = 0; i < num_points; i++) {\n          var v1 = points[i];\n          var v2 = points[(i + 1) % num_points];\n          v1 = subtract(v1, origin);\n          v2 = subtract(v2, origin);\n          normals.push(normalize(cross(v1, v2)));\n        }\n\n        var normal = [0, 0, 0];\n\n        for (var i = 0; i < normals.length; i++) {\n          normal[0] += normals[i][0];\n          normal[1] += normals[i][1];\n          normal[2] += normals[i][2];\n        }\n\n        normal[0] /= normals.length;\n        normal[1] /= normals.length;\n        normal[2] /= normals.length;\n        var idx = (y * width + x) * 4;\n        output[idx] = (normal[0] + 1.0) / 2.0 * 255 | 0;\n        output[idx + 1] = (normal[1] + 1.0) / 2.0 * 255 | 0;\n        output[idx + 2] = normal[2] * 255 | 0;\n        output[idx + 3] = 255;\n      }\n    }\n\n    context.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n  generateDataTexture: function (width, height, color) {\n    var size = width * height;\n    var data = new Uint8Array(3 * size);\n    var r = Math.floor(color.r * 255);\n    var g = Math.floor(color.g * 255);\n    var b = Math.floor(color.b * 255);\n\n    for (var i = 0; i < size; i++) {\n      data[i * 3] = r;\n      data[i * 3 + 1] = g;\n      data[i * 3 + 2] = b;\n    }\n\n    var texture = new THREE.DataTexture(data, width, height, THREE.RGBFormat);\n    texture.needsUpdate = true;\n    return texture;\n  }\n}; // File:src/extras/SceneUtils.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.SceneUtils = {\n  createMultiMaterialObject: function (geometry, materials) {\n    var group = new THREE.Group();\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      group.add(new THREE.Mesh(geometry, materials[i]));\n    }\n\n    return group;\n  },\n  detach: function (child, parent, scene) {\n    child.applyMatrix(parent.matrixWorld);\n    parent.remove(child);\n    scene.add(child);\n  },\n  attach: function (child, scene, parent) {\n    var matrixWorldInverse = new THREE.Matrix4();\n    matrixWorldInverse.getInverse(parent.matrixWorld);\n    child.applyMatrix(matrixWorldInverse);\n    scene.remove(child);\n    parent.add(child);\n  }\n}; // File:src/extras/FontUtils.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\n\nTHREE.FontUtils = {\n  faces: {},\n  // Just for now. face[weight][style]\n  face: 'helvetiker',\n  weight: 'normal',\n  style: 'normal',\n  size: 150,\n  divisions: 10,\n  getFace: function () {\n    try {\n      return this.faces[this.face.toLowerCase()][this.weight][this.style];\n    } catch (e) {\n      throw \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\";\n    }\n  },\n  loadFace: function (data) {\n    var family = data.familyName.toLowerCase();\n    var ThreeFont = this;\n    ThreeFont.faces[family] = ThreeFont.faces[family] || {};\n    ThreeFont.faces[family][data.cssFontWeight] = ThreeFont.faces[family][data.cssFontWeight] || {};\n    ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle] = data;\n    ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle] = data;\n    return data;\n  },\n  drawText: function (text) {\n    // RenderText\n    var i,\n        face = this.getFace(),\n        scale = this.size / face.resolution,\n        offset = 0,\n        chars = String(text).split(''),\n        length = chars.length;\n    var fontPaths = [];\n\n    for (i = 0; i < length; i++) {\n      var path = new THREE.Path();\n      var ret = this.extractGlyphPoints(chars[i], face, scale, offset, path);\n      offset += ret.offset;\n      fontPaths.push(ret.path);\n    } // get the width\n\n\n    var width = offset / 2; //\n    // for ( p = 0; p < allPts.length; p++ ) {\n    //\n    // \tallPts[ p ].x -= width;\n    //\n    // }\n    //var extract = this.extractPoints( allPts, characterPts );\n    //extract.contour = allPts;\n    //extract.paths = fontPaths;\n    //extract.offset = width;\n\n    return {\n      paths: fontPaths,\n      offset: width\n    };\n  },\n  extractGlyphPoints: function (c, face, scale, offset, path) {\n    var pts = [];\n    var i,\n        i2,\n        divisions,\n        outline,\n        action,\n        length,\n        scaleX,\n        scaleY,\n        x,\n        y,\n        cpx,\n        cpy,\n        cpx0,\n        cpy0,\n        cpx1,\n        cpy1,\n        cpx2,\n        cpy2,\n        laste,\n        glyph = face.glyphs[c] || face.glyphs['?'];\n    if (!glyph) return;\n\n    if (glyph.o) {\n      outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n      length = outline.length;\n      scaleX = scale;\n      scaleY = scale;\n\n      for (i = 0; i < length;) {\n        action = outline[i++]; //console.log( action );\n\n        switch (action) {\n          case 'm':\n            // Move To\n            x = outline[i++] * scaleX + offset;\n            y = outline[i++] * scaleY;\n            path.moveTo(x, y);\n            break;\n\n          case 'l':\n            // Line To\n            x = outline[i++] * scaleX + offset;\n            y = outline[i++] * scaleY;\n            path.lineTo(x, y);\n            break;\n\n          case 'q':\n            // QuadraticCurveTo\n            cpx = outline[i++] * scaleX + offset;\n            cpy = outline[i++] * scaleY;\n            cpx1 = outline[i++] * scaleX + offset;\n            cpy1 = outline[i++] * scaleY;\n            path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n            laste = pts[pts.length - 1];\n\n            if (laste) {\n              cpx0 = laste.x;\n              cpy0 = laste.y;\n\n              for (i2 = 1, divisions = this.divisions; i2 <= divisions; i2++) {\n                var t = i2 / divisions;\n                THREE.Shape.Utils.b2(t, cpx0, cpx1, cpx);\n                THREE.Shape.Utils.b2(t, cpy0, cpy1, cpy);\n              }\n            }\n\n            break;\n\n          case 'b':\n            // Cubic Bezier Curve\n            cpx = outline[i++] * scaleX + offset;\n            cpy = outline[i++] * scaleY;\n            cpx1 = outline[i++] * scaleX + offset;\n            cpy1 = outline[i++] * scaleY;\n            cpx2 = outline[i++] * scaleX + offset;\n            cpy2 = outline[i++] * scaleY;\n            path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n            laste = pts[pts.length - 1];\n\n            if (laste) {\n              cpx0 = laste.x;\n              cpy0 = laste.y;\n\n              for (i2 = 1, divisions = this.divisions; i2 <= divisions; i2++) {\n                var t = i2 / divisions;\n                THREE.Shape.Utils.b3(t, cpx0, cpx1, cpx2, cpx);\n                THREE.Shape.Utils.b3(t, cpy0, cpy1, cpy2, cpy);\n              }\n            }\n\n            break;\n        }\n      }\n    }\n\n    return {\n      offset: glyph.ha * scale,\n      path: path\n    };\n  }\n};\n\nTHREE.FontUtils.generateShapes = function (text, parameters) {\n  // Parameters\n  parameters = parameters || {};\n  var size = parameters.size !== undefined ? parameters.size : 100;\n  var curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\n  var font = parameters.font !== undefined ? parameters.font : 'helvetiker';\n  var weight = parameters.weight !== undefined ? parameters.weight : 'normal';\n  var style = parameters.style !== undefined ? parameters.style : 'normal';\n  THREE.FontUtils.size = size;\n  THREE.FontUtils.divisions = curveSegments;\n  THREE.FontUtils.face = font;\n  THREE.FontUtils.weight = weight;\n  THREE.FontUtils.style = style; // Get a Font data json object\n\n  var data = THREE.FontUtils.drawText(text);\n  var paths = data.paths;\n  var shapes = [];\n\n  for (var p = 0, pl = paths.length; p < pl; p++) {\n    Array.prototype.push.apply(shapes, paths[p].toShapes());\n  }\n\n  return shapes;\n};\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\n\n\n(function (namespace) {\n  var EPSILON = 0.0000000001; // takes in an contour array and returns\n\n  var process = function (contour, indices) {\n    var n = contour.length;\n    if (n < 3) return null;\n    var result = [],\n        verts = [],\n        vertIndices = [];\n    /* we want a counter-clockwise polygon in verts */\n\n    var u, v, w;\n\n    if (area(contour) > 0.0) {\n      for (v = 0; v < n; v++) verts[v] = v;\n    } else {\n      for (v = 0; v < n; v++) verts[v] = n - 1 - v;\n    }\n\n    var nv = n;\n    /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n    var count = 2 * nv;\n    /* error detection */\n\n    for (v = nv - 1; nv > 2;) {\n      /* if we loop, it is probably a non-simple polygon */\n      if (count-- <= 0) {\n        //** Triangulate: ERROR - probable bad polygon!\n        //throw ( \"Warning, unable to triangulate polygon!\" );\n        //return null;\n        // Sometimes warning is fine, especially polygons are triangulated in reverse.\n        console.warn('THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()');\n        if (indices) return vertIndices;\n        return result;\n      }\n      /* three consecutive vertices in current polygon, <u,v,w> */\n\n\n      u = v;\n      if (nv <= u) u = 0;\n      /* previous */\n\n      v = u + 1;\n      if (nv <= v) v = 0;\n      /* new v    */\n\n      w = v + 1;\n      if (nv <= w) w = 0;\n      /* next     */\n\n      if (snip(contour, u, v, w, nv, verts)) {\n        var a, b, c, s, t;\n        /* true names of the vertices */\n\n        a = verts[u];\n        b = verts[v];\n        c = verts[w];\n        /* output Triangle */\n\n        result.push([contour[a], contour[b], contour[c]]);\n        vertIndices.push([verts[u], verts[v], verts[w]]);\n        /* remove v from the remaining polygon */\n\n        for (s = v, t = v + 1; t < nv; s++, t++) {\n          verts[s] = verts[t];\n        }\n\n        nv--;\n        /* reset error detection counter */\n\n        count = 2 * nv;\n      }\n    }\n\n    if (indices) return vertIndices;\n    return result;\n  }; // calculate area of the contour polygon\n\n\n  var area = function (contour) {\n    var n = contour.length;\n    var a = 0.0;\n\n    for (var p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n\n    return a * 0.5;\n  };\n\n  var snip = function (contour, u, v, w, n, verts) {\n    var p;\n    var ax, ay, bx, by;\n    var cx, cy, px, py;\n    ax = contour[verts[u]].x;\n    ay = contour[verts[u]].y;\n    bx = contour[verts[v]].x;\n    by = contour[verts[v]].y;\n    cx = contour[verts[w]].x;\n    cy = contour[verts[w]].y;\n    if (EPSILON > (bx - ax) * (cy - ay) - (by - ay) * (cx - ax)) return false;\n    var aX, aY, bX, bY, cX, cY;\n    var apx, apy, bpx, bpy, cpx, cpy;\n    var cCROSSap, bCROSScp, aCROSSbp;\n    aX = cx - bx;\n    aY = cy - by;\n    bX = ax - cx;\n    bY = ay - cy;\n    cX = bx - ax;\n    cY = by - ay;\n\n    for (p = 0; p < n; p++) {\n      px = contour[verts[p]].x;\n      py = contour[verts[p]].y;\n      if (px === ax && py === ay || px === bx && py === by || px === cx && py === cy) continue;\n      apx = px - ax;\n      apy = py - ay;\n      bpx = px - bx;\n      bpy = py - by;\n      cpx = px - cx;\n      cpy = py - cy; // see if p is inside triangle abc\n\n      aCROSSbp = aX * bpy - aY * bpx;\n      cCROSSap = cX * apy - cY * apx;\n      bCROSScp = bX * cpy - bY * cpx;\n      if (aCROSSbp >= -EPSILON && bCROSScp >= -EPSILON && cCROSSap >= -EPSILON) return false;\n    }\n\n    return true;\n  };\n\n  namespace.Triangulate = process;\n  namespace.Triangulate.area = area;\n  return namespace;\n})(THREE.FontUtils); // To use the typeface.js face files, hook up the API\n\n\nTHREE.typeface_js = {\n  faces: THREE.FontUtils.faces,\n  loadFace: THREE.FontUtils.loadFace\n};\nif (typeof self !== 'undefined') self._typeface_js = THREE.typeface_js; // File:src/extras/audio/Audio.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.Audio = function (listener) {\n  THREE.Object3D.call(this);\n  this.type = 'Audio';\n  this.context = listener.context;\n  this.source = this.context.createBufferSource();\n  this.source.onended = this.onEnded.bind(this);\n  this.gain = this.context.createGain();\n  this.gain.connect(this.context.destination);\n  this.panner = this.context.createPanner();\n  this.panner.connect(this.gain);\n  this.autoplay = false;\n  this.startTime = 0;\n  this.playbackRate = 1;\n  this.isPlaying = false;\n};\n\nTHREE.Audio.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Audio.prototype.constructor = THREE.Audio;\n\nTHREE.Audio.prototype.load = function (file) {\n  var scope = this;\n  var request = new XMLHttpRequest();\n  request.open('GET', file, true);\n  request.responseType = 'arraybuffer';\n\n  request.onload = function (e) {\n    scope.context.decodeAudioData(this.response, function (buffer) {\n      scope.source.buffer = buffer;\n      if (scope.autoplay) scope.play();\n    });\n  };\n\n  request.send();\n  return this;\n};\n\nTHREE.Audio.prototype.play = function () {\n  if (this.isPlaying === true) {\n    console.warn('THREE.Audio: Audio is already playing.');\n    return;\n  }\n\n  var source = this.context.createBufferSource();\n  source.buffer = this.source.buffer;\n  source.loop = this.source.loop;\n  source.onended = this.source.onended;\n  source.start(0, this.startTime);\n  source.playbackRate.value = this.playbackRate;\n  this.isPlaying = true;\n  this.source = source;\n  this.connect();\n};\n\nTHREE.Audio.prototype.pause = function () {\n  this.source.stop();\n  this.startTime = this.context.currentTime;\n};\n\nTHREE.Audio.prototype.stop = function () {\n  this.source.stop();\n  this.startTime = 0;\n};\n\nTHREE.Audio.prototype.connect = function () {\n  if (this.filter !== undefined) {\n    this.source.connect(this.filter);\n    this.filter.connect(this.panner);\n  } else {\n    this.source.connect(this.panner);\n  }\n};\n\nTHREE.Audio.prototype.disconnect = function () {\n  if (this.filter !== undefined) {\n    this.source.disconnect(this.filter);\n    this.filter.disconnect(this.panner);\n  } else {\n    this.source.disconnect(this.panner);\n  }\n};\n\nTHREE.Audio.prototype.setFilter = function (value) {\n  if (this.isPlaying === true) {\n    this.disconnect();\n    this.filter = value;\n    this.connect();\n  } else {\n    this.filter = value;\n  }\n};\n\nTHREE.Audio.prototype.getFilter = function () {\n  return this.filter;\n};\n\nTHREE.Audio.prototype.setPlaybackRate = function (value) {\n  this.playbackRate = value;\n\n  if (this.isPlaying === true) {\n    this.source.playbackRate.value = this.playbackRate;\n  }\n};\n\nTHREE.Audio.prototype.getPlaybackRate = function () {\n  return this.playbackRate;\n};\n\nTHREE.Audio.prototype.onEnded = function () {\n  this.isPlaying = false;\n};\n\nTHREE.Audio.prototype.setLoop = function (value) {\n  this.source.loop = value;\n};\n\nTHREE.Audio.prototype.getLoop = function () {\n  return this.source.loop;\n};\n\nTHREE.Audio.prototype.setRefDistance = function (value) {\n  this.panner.refDistance = value;\n};\n\nTHREE.Audio.prototype.getRefDistance = function () {\n  return this.panner.refDistance;\n};\n\nTHREE.Audio.prototype.setRolloffFactor = function (value) {\n  this.panner.rolloffFactor = value;\n};\n\nTHREE.Audio.prototype.getRolloffFactor = function () {\n  return this.panner.rolloffFactor;\n};\n\nTHREE.Audio.prototype.setVolume = function (value) {\n  this.gain.gain.value = value;\n};\n\nTHREE.Audio.prototype.getVolume = function () {\n  return this.gain.gain.value;\n};\n\nTHREE.Audio.prototype.updateMatrixWorld = function () {\n  var position = new THREE.Vector3();\n  return function updateMatrixWorld(force) {\n    THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n    position.setFromMatrixPosition(this.matrixWorld);\n    this.panner.setPosition(position.x, position.y, position.z);\n  };\n}(); // File:src/extras/audio/AudioListener.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.AudioListener = function () {\n  THREE.Object3D.call(this);\n  this.type = 'AudioListener';\n  this.context = new (window.AudioContext || window.webkitAudioContext)();\n};\n\nTHREE.AudioListener.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\n\nTHREE.AudioListener.prototype.updateMatrixWorld = function () {\n  var position = new THREE.Vector3();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3();\n  var orientation = new THREE.Vector3();\n  return function updateMatrixWorld(force) {\n    THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n    var listener = this.context.listener;\n    var up = this.up;\n    this.matrixWorld.decompose(position, quaternion, scale);\n    orientation.set(0, 0, -1).applyQuaternion(quaternion);\n    listener.setPosition(position.x, position.y, position.z);\n    listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n  };\n}(); // File:src/extras/core/Curve.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\n\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\n\n\nTHREE.Curve = function () {}; // Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\n\n\nTHREE.Curve.prototype.getPoint = function (t) {\n  console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");\n  return null;\n}; // Get point at relative position in curve according to arc length\n// - u [0 .. 1]\n\n\nTHREE.Curve.prototype.getPointAt = function (u) {\n  var t = this.getUtoTmapping(u);\n  return this.getPoint(t);\n}; // Get sequence of points using getPoint( t )\n\n\nTHREE.Curve.prototype.getPoints = function (divisions) {\n  if (!divisions) divisions = 5;\n  var d,\n      pts = [];\n\n  for (d = 0; d <= divisions; d++) {\n    pts.push(this.getPoint(d / divisions));\n  }\n\n  return pts;\n}; // Get sequence of points using getPointAt( u )\n\n\nTHREE.Curve.prototype.getSpacedPoints = function (divisions) {\n  if (!divisions) divisions = 5;\n  var d,\n      pts = [];\n\n  for (d = 0; d <= divisions; d++) {\n    pts.push(this.getPointAt(d / divisions));\n  }\n\n  return pts;\n}; // Get total curve arc length\n\n\nTHREE.Curve.prototype.getLength = function () {\n  var lengths = this.getLengths();\n  return lengths[lengths.length - 1];\n}; // Get list of cumulative segment lengths\n\n\nTHREE.Curve.prototype.getLengths = function (divisions) {\n  if (!divisions) divisions = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200;\n\n  if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n    //console.log( \"cached\", this.cacheArcLengths );\n    return this.cacheArcLengths;\n  }\n\n  this.needsUpdate = false;\n  var cache = [];\n  var current,\n      last = this.getPoint(0);\n  var p,\n      sum = 0;\n  cache.push(0);\n\n  for (p = 1; p <= divisions; p++) {\n    current = this.getPoint(p / divisions);\n    sum += current.distanceTo(last);\n    cache.push(sum);\n    last = current;\n  }\n\n  this.cacheArcLengths = cache;\n  return cache; // { sums: cache, sum:sum }; Sum is in the last element.\n};\n\nTHREE.Curve.prototype.updateArcLengths = function () {\n  this.needsUpdate = true;\n  this.getLengths();\n}; // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\nTHREE.Curve.prototype.getUtoTmapping = function (u, distance) {\n  var arcLengths = this.getLengths();\n  var i = 0,\n      il = arcLengths.length;\n  var targetArcLength; // The targeted u distance value to get\n\n  if (distance) {\n    targetArcLength = distance;\n  } else {\n    targetArcLength = u * arcLengths[il - 1];\n  } //var time = Date.now();\n  // binary search for the index with largest value smaller than target u distance\n\n\n  var low = 0,\n      high = il - 1,\n      comparison;\n\n  while (low <= high) {\n    i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n    comparison = arcLengths[i] - targetArcLength;\n\n    if (comparison < 0) {\n      low = i + 1;\n    } else if (comparison > 0) {\n      high = i - 1;\n    } else {\n      high = i;\n      break; // DONE\n    }\n  }\n\n  i = high; //console.log('b' , i, low, high, Date.now()- time);\n\n  if (arcLengths[i] === targetArcLength) {\n    var t = i / (il - 1);\n    return t;\n  } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n  var lengthBefore = arcLengths[i];\n  var lengthAfter = arcLengths[i + 1];\n  var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n  var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n  var t = (i + segmentFraction) / (il - 1);\n  return t;\n}; // Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\n\n\nTHREE.Curve.prototype.getTangent = function (t) {\n  var delta = 0.0001;\n  var t1 = t - delta;\n  var t2 = t + delta; // Capping in case of danger\n\n  if (t1 < 0) t1 = 0;\n  if (t2 > 1) t2 = 1;\n  var pt1 = this.getPoint(t1);\n  var pt2 = this.getPoint(t2);\n  var vec = pt2.clone().sub(pt1);\n  return vec.normalize();\n};\n\nTHREE.Curve.prototype.getTangentAt = function (u) {\n  var t = this.getUtoTmapping(u);\n  return this.getTangent(t);\n};\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\n\n\nTHREE.Curve.Utils = {\n  tangentQuadraticBezier: function (t, p0, p1, p2) {\n    return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n  },\n  // Puay Bing, thanks for helping with this derivative!\n  tangentCubicBezier: function (t, p0, p1, p2, p3) {\n    return -3 * p0 * (1 - t) * (1 - t) + 3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) + 6 * t * p2 * (1 - t) - 3 * t * t * p2 + 3 * t * t * p3;\n  },\n  tangentSpline: function (t, p0, p1, p2, p3) {\n    // To check if my formulas are correct\n    var h00 = 6 * t * t - 6 * t; // derived from 2t^3 − 3t^2 + 1\n\n    var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\n    var h01 = -6 * t * t + 6 * t; // − 2t3 + 3t2\n\n    var h11 = 3 * t * t - 2 * t; // t3 − t2\n\n    return h00 + h10 + h01 + h11;\n  },\n  // Catmull-Rom\n  interpolate: function (p0, p1, p2, p3, t) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}; // TODO: Transformation for Curves?\n\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\n// A Factory method for creating new curve subclasses\n\nTHREE.Curve.create = function (constructor, getPointFunc) {\n  constructor.prototype = Object.create(THREE.Curve.prototype);\n  constructor.prototype.constructor = constructor;\n  constructor.prototype.getPoint = getPointFunc;\n  return constructor;\n}; // File:src/extras/core/CurvePath.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\n\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\n\n\nTHREE.CurvePath = function () {\n  this.curves = [];\n  this.bends = [];\n  this.autoClose = false; // Automatically closes the path\n};\n\nTHREE.CurvePath.prototype = Object.create(THREE.Curve.prototype);\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\n\nTHREE.CurvePath.prototype.add = function (curve) {\n  this.curves.push(curve);\n};\n\nTHREE.CurvePath.prototype.checkConnection = function () {// TODO\n  // If the ending of curve is not connected to the starting\n  // or the next curve, then, this is not a real path\n};\n\nTHREE.CurvePath.prototype.closePath = function () {\n  // TODO Test\n  // and verify for vector3 (needs to implement equals)\n  // Add a line curve if start and end of lines are not connected\n  var startPoint = this.curves[0].getPoint(0);\n  var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n  if (!startPoint.equals(endPoint)) {\n    this.curves.push(new THREE.LineCurve(endPoint, startPoint));\n  }\n}; // To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\n\n\nTHREE.CurvePath.prototype.getPoint = function (t) {\n  var d = t * this.getLength();\n  var curveLengths = this.getCurveLengths();\n  var i = 0,\n      diff,\n      curve; // To think about boundaries points.\n\n  while (i < curveLengths.length) {\n    if (curveLengths[i] >= d) {\n      diff = curveLengths[i] - d;\n      curve = this.curves[i];\n      var u = 1 - diff / curve.getLength();\n      return curve.getPointAt(u);\n    }\n\n    i++;\n  }\n\n  return null; // loop where sum != 0, sum > d , sum+1 <d\n};\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\n\n\nTHREE.CurvePath.prototype.getLength = function () {\n  var lens = this.getCurveLengths();\n  return lens[lens.length - 1];\n}; // Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\nTHREE.CurvePath.prototype.getCurveLengths = function () {\n  // We use cache values if curves and cache array are same length\n  if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n    return this.cacheLengths;\n  } // Get length of sub-curve\n  // Push sums into cached array\n\n\n  var lengths = [],\n      sums = 0;\n  var i,\n      il = this.curves.length;\n\n  for (i = 0; i < il; i++) {\n    sums += this.curves[i].getLength();\n    lengths.push(sums);\n  }\n\n  this.cacheLengths = lengths;\n  return lengths;\n}; // Returns min and max coordinates\n\n\nTHREE.CurvePath.prototype.getBoundingBox = function () {\n  var points = this.getPoints();\n  var maxX, maxY, maxZ;\n  var minX, minY, minZ;\n  maxX = maxY = Number.NEGATIVE_INFINITY;\n  minX = minY = Number.POSITIVE_INFINITY;\n  var p, i, il, sum;\n  var v3 = points[0] instanceof THREE.Vector3;\n  sum = v3 ? new THREE.Vector3() : new THREE.Vector2();\n\n  for (i = 0, il = points.length; i < il; i++) {\n    p = points[i];\n    if (p.x > maxX) maxX = p.x;else if (p.x < minX) minX = p.x;\n    if (p.y > maxY) maxY = p.y;else if (p.y < minY) minY = p.y;\n\n    if (v3) {\n      if (p.z > maxZ) maxZ = p.z;else if (p.z < minZ) minZ = p.z;\n    }\n\n    sum.add(p);\n  }\n\n  var ret = {\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY\n  };\n\n  if (v3) {\n    ret.maxZ = maxZ;\n    ret.minZ = minZ;\n  }\n\n  return ret;\n};\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\n/// Generate geometry from path points (for Line or Points objects)\n\n\nTHREE.CurvePath.prototype.createPointsGeometry = function (divisions) {\n  var pts = this.getPoints(divisions, true);\n  return this.createGeometry(pts);\n}; // Generate geometry from equidistant sampling along the path\n\n\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function (divisions) {\n  var pts = this.getSpacedPoints(divisions, true);\n  return this.createGeometry(pts);\n};\n\nTHREE.CurvePath.prototype.createGeometry = function (points) {\n  var geometry = new THREE.Geometry();\n\n  for (var i = 0; i < points.length; i++) {\n    geometry.vertices.push(new THREE.Vector3(points[i].x, points[i].y, points[i].z || 0));\n  }\n\n  return geometry;\n};\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\n// Wrap path / Bend modifiers?\n\n\nTHREE.CurvePath.prototype.addWrapPath = function (bendpath) {\n  this.bends.push(bendpath);\n};\n\nTHREE.CurvePath.prototype.getTransformedPoints = function (segments, bends) {\n  var oldPts = this.getPoints(segments); // getPoints getSpacedPoints\n\n  var i, il;\n\n  if (!bends) {\n    bends = this.bends;\n  }\n\n  for (i = 0, il = bends.length; i < il; i++) {\n    oldPts = this.getWrapPoints(oldPts, bends[i]);\n  }\n\n  return oldPts;\n};\n\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function (segments, bends) {\n  var oldPts = this.getSpacedPoints(segments);\n  var i, il;\n\n  if (!bends) {\n    bends = this.bends;\n  }\n\n  for (i = 0, il = bends.length; i < il; i++) {\n    oldPts = this.getWrapPoints(oldPts, bends[i]);\n  }\n\n  return oldPts;\n}; // This returns getPoints() bend/wrapped around the contour of a path.\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\n\n\nTHREE.CurvePath.prototype.getWrapPoints = function (oldPts, path) {\n  var bounds = this.getBoundingBox();\n  var i, il, p, oldX, oldY, xNorm;\n\n  for (i = 0, il = oldPts.length; i < il; i++) {\n    p = oldPts[i];\n    oldX = p.x;\n    oldY = p.y;\n    xNorm = oldX / bounds.maxX; // If using actual distance, for length > path, requires line extrusions\n    //xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\n\n    xNorm = path.getUtoTmapping(xNorm, oldX); // check for out of bounds?\n\n    var pathPt = path.getPoint(xNorm);\n    var normal = path.getTangent(xNorm);\n    normal.set(-normal.y, normal.x).multiplyScalar(oldY);\n    p.x = pathPt.x + normal.x;\n    p.y = pathPt.y + normal.y;\n  }\n\n  return oldPts;\n}; // File:src/extras/core/Path.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\n\n\nTHREE.Path = function (points) {\n  THREE.CurvePath.call(this);\n  this.actions = [];\n\n  if (points) {\n    this.fromPoints(points);\n  }\n};\n\nTHREE.Path.prototype = Object.create(THREE.CurvePath.prototype);\nTHREE.Path.prototype.constructor = THREE.Path;\nTHREE.PathActions = {\n  MOVE_TO: 'moveTo',\n  LINE_TO: 'lineTo',\n  QUADRATIC_CURVE_TO: 'quadraticCurveTo',\n  // Bezier quadratic curve\n  BEZIER_CURVE_TO: 'bezierCurveTo',\n  // Bezier cubic curve\n  CSPLINE_THRU: 'splineThru',\n  // Catmull-Rom spline\n  ARC: 'arc',\n  // Circle\n  ELLIPSE: 'ellipse'\n}; // TODO Clean up PATH API\n// Create path using straight lines to connect all points\n// - vectors: array of Vector2\n\nTHREE.Path.prototype.fromPoints = function (vectors) {\n  this.moveTo(vectors[0].x, vectors[0].y);\n\n  for (var v = 1, vlen = vectors.length; v < vlen; v++) {\n    this.lineTo(vectors[v].x, vectors[v].y);\n  }\n}; // startPath() endPath()?\n\n\nTHREE.Path.prototype.moveTo = function (x, y) {\n  var args = Array.prototype.slice.call(arguments);\n  this.actions.push({\n    action: THREE.PathActions.MOVE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.lineTo = function (x, y) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  var curve = new THREE.LineCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(x, y));\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.LINE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.quadraticCurveTo = function (aCPx, aCPy, aX, aY) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  var curve = new THREE.QuadraticBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCPx, aCPy), new THREE.Vector2(aX, aY));\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.QUADRATIC_CURVE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.bezierCurveTo = function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  var curve = new THREE.CubicBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCP1x, aCP1y), new THREE.Vector2(aCP2x, aCP2y), new THREE.Vector2(aX, aY));\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.BEZIER_CURVE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.splineThru = function (pts\n/*Array of Vector*/\n) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1]; //---\n\n  var npts = [new THREE.Vector2(x0, y0)];\n  Array.prototype.push.apply(npts, pts);\n  var curve = new THREE.SplineCurve(npts);\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.CSPLINE_THRU,\n    args: args\n  });\n}; // FUTURE: Change the API or follow canvas API?\n\n\nTHREE.Path.prototype.arc = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.Path.prototype.absarc = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.Path.prototype.ellipse = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n};\n\nTHREE.Path.prototype.absellipse = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n  var args = [aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation || 0 // aRotation is optional.\n  ];\n  var curve = new THREE.EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  this.curves.push(curve);\n  var lastPoint = curve.getPoint(1);\n  args.push(lastPoint.x);\n  args.push(lastPoint.y);\n  this.actions.push({\n    action: THREE.PathActions.ELLIPSE,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.getSpacedPoints = function (divisions, closedPath) {\n  if (!divisions) divisions = 40;\n  var points = [];\n\n  for (var i = 0; i < divisions; i++) {\n    points.push(this.getPoint(i / divisions)); //if( !this.getPoint( i / divisions ) ) throw \"DIE\";\n  } // if ( closedPath ) {\n  //\n  // \tpoints.push( points[ 0 ] );\n  //\n  // }\n\n\n  return points;\n};\n/* Return an array of vectors based on contour of the path */\n\n\nTHREE.Path.prototype.getPoints = function (divisions, closedPath) {\n  if (this.useSpacedPoints) {\n    return this.getSpacedPoints(divisions, closedPath);\n  }\n\n  divisions = divisions || 12;\n  var points = [];\n  var i, il, item, action, args;\n  var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0, laste, j, t, tx, ty;\n\n  for (i = 0, il = this.actions.length; i < il; i++) {\n    item = this.actions[i];\n    action = item.action;\n    args = item.args;\n\n    switch (action) {\n      case THREE.PathActions.MOVE_TO:\n        points.push(new THREE.Vector2(args[0], args[1]));\n        break;\n\n      case THREE.PathActions.LINE_TO:\n        points.push(new THREE.Vector2(args[0], args[1]));\n        break;\n\n      case THREE.PathActions.QUADRATIC_CURVE_TO:\n        cpx = args[2];\n        cpy = args[3];\n        cpx1 = args[0];\n        cpy1 = args[1];\n\n        if (points.length > 0) {\n          laste = points[points.length - 1];\n          cpx0 = laste.x;\n          cpy0 = laste.y;\n        } else {\n          laste = this.actions[i - 1].args;\n          cpx0 = laste[laste.length - 2];\n          cpy0 = laste[laste.length - 1];\n        }\n\n        for (j = 1; j <= divisions; j++) {\n          t = j / divisions;\n          tx = THREE.Shape.Utils.b2(t, cpx0, cpx1, cpx);\n          ty = THREE.Shape.Utils.b2(t, cpy0, cpy1, cpy);\n          points.push(new THREE.Vector2(tx, ty));\n        }\n\n        break;\n\n      case THREE.PathActions.BEZIER_CURVE_TO:\n        cpx = args[4];\n        cpy = args[5];\n        cpx1 = args[0];\n        cpy1 = args[1];\n        cpx2 = args[2];\n        cpy2 = args[3];\n\n        if (points.length > 0) {\n          laste = points[points.length - 1];\n          cpx0 = laste.x;\n          cpy0 = laste.y;\n        } else {\n          laste = this.actions[i - 1].args;\n          cpx0 = laste[laste.length - 2];\n          cpy0 = laste[laste.length - 1];\n        }\n\n        for (j = 1; j <= divisions; j++) {\n          t = j / divisions;\n          tx = THREE.Shape.Utils.b3(t, cpx0, cpx1, cpx2, cpx);\n          ty = THREE.Shape.Utils.b3(t, cpy0, cpy1, cpy2, cpy);\n          points.push(new THREE.Vector2(tx, ty));\n        }\n\n        break;\n\n      case THREE.PathActions.CSPLINE_THRU:\n        laste = this.actions[i - 1].args;\n        var last = new THREE.Vector2(laste[laste.length - 2], laste[laste.length - 1]);\n        var spts = [last];\n        var n = divisions * args[0].length;\n        spts = spts.concat(args[0]);\n        var spline = new THREE.SplineCurve(spts);\n\n        for (j = 1; j <= n; j++) {\n          points.push(spline.getPointAt(j / n));\n        }\n\n        break;\n\n      case THREE.PathActions.ARC:\n        var aX = args[0],\n            aY = args[1],\n            aRadius = args[2],\n            aStartAngle = args[3],\n            aEndAngle = args[4],\n            aClockwise = !!args[5];\n        var deltaAngle = aEndAngle - aStartAngle;\n        var angle;\n        var tdivisions = divisions * 2;\n\n        for (j = 1; j <= tdivisions; j++) {\n          t = j / tdivisions;\n\n          if (!aClockwise) {\n            t = 1 - t;\n          }\n\n          angle = aStartAngle + t * deltaAngle;\n          tx = aX + aRadius * Math.cos(angle);\n          ty = aY + aRadius * Math.sin(angle); //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n          points.push(new THREE.Vector2(tx, ty));\n        } //console.log(points);\n\n\n        break;\n\n      case THREE.PathActions.ELLIPSE:\n        var aX = args[0],\n            aY = args[1],\n            xRadius = args[2],\n            yRadius = args[3],\n            aStartAngle = args[4],\n            aEndAngle = args[5],\n            aClockwise = !!args[6],\n            aRotation = args[7];\n        var deltaAngle = aEndAngle - aStartAngle;\n        var angle;\n        var tdivisions = divisions * 2;\n        var cos, sin;\n\n        if (aRotation !== 0) {\n          cos = Math.cos(aRotation);\n          sin = Math.sin(aRotation);\n        }\n\n        for (j = 1; j <= tdivisions; j++) {\n          t = j / tdivisions;\n\n          if (!aClockwise) {\n            t = 1 - t;\n          }\n\n          angle = aStartAngle + t * deltaAngle;\n          tx = aX + xRadius * Math.cos(angle);\n          ty = aY + yRadius * Math.sin(angle);\n\n          if (aRotation !== 0) {\n            var x = tx,\n                y = ty; // Rotate the point about the center of the ellipse.\n\n            tx = (x - aX) * cos - (y - aY) * sin + aX;\n            ty = (x - aX) * sin + (y - aY) * cos + aY;\n          } //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n\n          points.push(new THREE.Vector2(tx, ty));\n        } //console.log(points);\n\n\n        break;\n    } // end switch\n\n  } // Normalize to remove the closing point by default.\n\n\n  var lastPoint = points[points.length - 1];\n  var EPSILON = 0.0000000001;\n  if (Math.abs(lastPoint.x - points[0].x) < EPSILON && Math.abs(lastPoint.y - points[0].y) < EPSILON) points.splice(points.length - 1, 1);\n\n  if (closedPath) {\n    points.push(points[0]);\n  }\n\n  return points;\n}; //\n// Breaks path into shapes\n//\n//\tAssumptions (if parameter isCCW==true the opposite holds):\n//\t- solid shapes are defined clockwise (CW)\n//\t- holes are defined counterclockwise (CCW)\n//\n//\tIf parameter noHoles==true:\n//  - all subPaths are regarded as solid shapes\n//  - definition order CW/CCW has no relevance\n//\n\n\nTHREE.Path.prototype.toShapes = function (isCCW, noHoles) {\n  function extractSubpaths(inActions) {\n    var i, il, item, action, args;\n    var subPaths = [],\n        lastPath = new THREE.Path();\n\n    for (i = 0, il = inActions.length; i < il; i++) {\n      item = inActions[i];\n      args = item.args;\n      action = item.action;\n\n      if (action === THREE.PathActions.MOVE_TO) {\n        if (lastPath.actions.length !== 0) {\n          subPaths.push(lastPath);\n          lastPath = new THREE.Path();\n        }\n      }\n\n      lastPath[action].apply(lastPath, args);\n    }\n\n    if (lastPath.actions.length !== 0) {\n      subPaths.push(lastPath);\n    } // console.log(subPaths);\n\n\n    return subPaths;\n  }\n\n  function toShapesNoHoles(inSubpaths) {\n    var shapes = [];\n\n    for (var i = 0, il = inSubpaths.length; i < il; i++) {\n      var tmpPath = inSubpaths[i];\n      var tmpShape = new THREE.Shape();\n      tmpShape.actions = tmpPath.actions;\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n    } //console.log(\"shape\", shapes);\n\n\n    return shapes;\n  }\n\n  function isPointInsidePolygon(inPt, inPolygon) {\n    var EPSILON = 0.0000000001;\n    var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n    // toggling of inside/outside at every single! intersection point of an edge\n    //  with the horizontal line through inPt, left of inPt\n    //  not counting lowerY endpoints of edges and whole edges on that line\n\n    var inside = false;\n\n    for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n      var edgeLowPt = inPolygon[p];\n      var edgeHighPt = inPolygon[q];\n      var edgeDx = edgeHighPt.x - edgeLowPt.x;\n      var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n      if (Math.abs(edgeDy) > EPSILON) {\n        // not parallel\n        if (edgeDy < 0) {\n          edgeLowPt = inPolygon[q];\n          edgeDx = -edgeDx;\n          edgeHighPt = inPolygon[p];\n          edgeDy = -edgeDy;\n        }\n\n        if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n        if (inPt.y === edgeLowPt.y) {\n          if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n          // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n        } else {\n          var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n          if (perpEdge === 0) return true; // inPt is on contour ?\n\n          if (perpEdge < 0) continue;\n          inside = !inside; // true intersection left of inPt\n        }\n      } else {\n        // parallel or collinear\n        if (inPt.y !== edgeLowPt.y) continue; // parallel\n        // edge lies on the same horizontal line as inPt\n\n        if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n        // continue;\n      }\n    }\n\n    return inside;\n  }\n\n  var subPaths = extractSubpaths(this.actions);\n  if (subPaths.length === 0) return [];\n  if (noHoles === true) return toShapesNoHoles(subPaths);\n  var solid,\n      tmpPath,\n      tmpShape,\n      shapes = [];\n\n  if (subPaths.length === 1) {\n    tmpPath = subPaths[0];\n    tmpShape = new THREE.Shape();\n    tmpShape.actions = tmpPath.actions;\n    tmpShape.curves = tmpPath.curves;\n    shapes.push(tmpShape);\n    return shapes;\n  }\n\n  var holesFirst = !THREE.Shape.Utils.isClockWise(subPaths[0].getPoints());\n  holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n  var betterShapeHoles = [];\n  var newShapes = [];\n  var newShapeHoles = [];\n  var mainIdx = 0;\n  var tmpPoints;\n  newShapes[mainIdx] = undefined;\n  newShapeHoles[mainIdx] = [];\n  var i, il;\n\n  for (i = 0, il = subPaths.length; i < il; i++) {\n    tmpPath = subPaths[i];\n    tmpPoints = tmpPath.getPoints();\n    solid = THREE.Shape.Utils.isClockWise(tmpPoints);\n    solid = isCCW ? !solid : solid;\n\n    if (solid) {\n      if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n      newShapes[mainIdx] = {\n        s: new THREE.Shape(),\n        p: tmpPoints\n      };\n      newShapes[mainIdx].s.actions = tmpPath.actions;\n      newShapes[mainIdx].s.curves = tmpPath.curves;\n      if (holesFirst) mainIdx++;\n      newShapeHoles[mainIdx] = []; //console.log('cw', i);\n    } else {\n      newShapeHoles[mainIdx].push({\n        h: tmpPath,\n        p: tmpPoints[0]\n      }); //console.log('ccw', i);\n    }\n  } // only Holes? -> probably all Shapes with wrong orientation\n\n\n  if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n  if (newShapes.length > 1) {\n    var ambiguous = false;\n    var toChange = [];\n\n    for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n      betterShapeHoles[sIdx] = [];\n    }\n\n    for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n      var sho = newShapeHoles[sIdx];\n\n      for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n        var ho = sho[hIdx];\n        var hole_unassigned = true;\n\n        for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n          if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n            if (sIdx !== s2Idx) toChange.push({\n              froms: sIdx,\n              tos: s2Idx,\n              hole: hIdx\n            });\n\n            if (hole_unassigned) {\n              hole_unassigned = false;\n              betterShapeHoles[s2Idx].push(ho);\n            } else {\n              ambiguous = true;\n            }\n          }\n        }\n\n        if (hole_unassigned) {\n          betterShapeHoles[sIdx].push(ho);\n        }\n      }\n    } // console.log(\"ambiguous: \", ambiguous);\n\n\n    if (toChange.length > 0) {\n      // console.log(\"to change: \", toChange);\n      if (!ambiguous) newShapeHoles = betterShapeHoles;\n    }\n  }\n\n  var tmpHoles, j, jl;\n\n  for (i = 0, il = newShapes.length; i < il; i++) {\n    tmpShape = newShapes[i].s;\n    shapes.push(tmpShape);\n    tmpHoles = newShapeHoles[i];\n\n    for (j = 0, jl = tmpHoles.length; j < jl; j++) {\n      tmpShape.holes.push(tmpHoles[j].h);\n    }\n  } //console.log(\"shape\", shapes);\n\n\n  return shapes;\n}; // File:src/extras/core/Shape.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\n\nTHREE.Shape = function () {\n  THREE.Path.apply(this, arguments);\n  this.holes = [];\n};\n\nTHREE.Shape.prototype = Object.create(THREE.Path.prototype);\nTHREE.Shape.prototype.constructor = THREE.Shape; // Convenience method to return ExtrudeGeometry\n\nTHREE.Shape.prototype.extrude = function (options) {\n  var extruded = new THREE.ExtrudeGeometry(this, options);\n  return extruded;\n}; // Convenience method to return ShapeGeometry\n\n\nTHREE.Shape.prototype.makeGeometry = function (options) {\n  var geometry = new THREE.ShapeGeometry(this, options);\n  return geometry;\n}; // Get points of holes\n\n\nTHREE.Shape.prototype.getPointsHoles = function (divisions) {\n  var i,\n      il = this.holes.length,\n      holesPts = [];\n\n  for (i = 0; i < il; i++) {\n    holesPts[i] = this.holes[i].getTransformedPoints(divisions, this.bends);\n  }\n\n  return holesPts;\n}; // Get points of holes (spaced by regular distance)\n\n\nTHREE.Shape.prototype.getSpacedPointsHoles = function (divisions) {\n  var i,\n      il = this.holes.length,\n      holesPts = [];\n\n  for (i = 0; i < il; i++) {\n    holesPts[i] = this.holes[i].getTransformedSpacedPoints(divisions, this.bends);\n  }\n\n  return holesPts;\n}; // Get points of shape and holes (keypoints based on segments parameter)\n\n\nTHREE.Shape.prototype.extractAllPoints = function (divisions) {\n  return {\n    shape: this.getTransformedPoints(divisions),\n    holes: this.getPointsHoles(divisions)\n  };\n};\n\nTHREE.Shape.prototype.extractPoints = function (divisions) {\n  if (this.useSpacedPoints) {\n    return this.extractAllSpacedPoints(divisions);\n  }\n\n  return this.extractAllPoints(divisions);\n}; //\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\n//\n// \treturn {\n//\n// \t\tshape: this.transform( bend, divisions ),\n// \t\tholes: this.getPointsHoles( divisions, bend )\n//\n// \t};\n//\n// };\n// Get points of shape and holes (spaced by regular distance)\n\n\nTHREE.Shape.prototype.extractAllSpacedPoints = function (divisions) {\n  return {\n    shape: this.getTransformedSpacedPoints(divisions),\n    holes: this.getSpacedPointsHoles(divisions)\n  };\n};\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\n\n\nTHREE.Shape.Utils = {\n  triangulateShape: function (contour, holes) {\n    function point_in_segment_2D_colin(inSegPt1, inSegPt2, inOtherPt) {\n      // inOtherPt needs to be collinear to the inSegment\n      if (inSegPt1.x !== inSegPt2.x) {\n        if (inSegPt1.x < inSegPt2.x) {\n          return inSegPt1.x <= inOtherPt.x && inOtherPt.x <= inSegPt2.x;\n        } else {\n          return inSegPt2.x <= inOtherPt.x && inOtherPt.x <= inSegPt1.x;\n        }\n      } else {\n        if (inSegPt1.y < inSegPt2.y) {\n          return inSegPt1.y <= inOtherPt.y && inOtherPt.y <= inSegPt2.y;\n        } else {\n          return inSegPt2.y <= inOtherPt.y && inOtherPt.y <= inSegPt1.y;\n        }\n      }\n    }\n\n    function intersect_segments_2D(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs) {\n      var EPSILON = 0.0000000001;\n      var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,\n          seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n      var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,\n          seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n      var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n      var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n      var limit = seg1dy * seg2dx - seg1dx * seg2dy;\n      var perpSeg1 = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n      if (Math.abs(limit) > EPSILON) {\n        // not parallel\n        var perpSeg2;\n\n        if (limit > 0) {\n          if (perpSeg1 < 0 || perpSeg1 > limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 < 0 || perpSeg2 > limit) return [];\n        } else {\n          if (perpSeg1 > 0 || perpSeg1 < limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 > 0 || perpSeg2 < limit) return [];\n        } // i.e. to reduce rounding errors\n        // intersection at endpoint of segment#1?\n\n\n        if (perpSeg2 === 0) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt1];\n        }\n\n        if (perpSeg2 === limit) {\n          if (inExcludeAdjacentSegs && (perpSeg1 === 0 || perpSeg1 === limit)) return [];\n          return [inSeg1Pt2];\n        } // intersection at endpoint of segment#2?\n\n\n        if (perpSeg1 === 0) return [inSeg2Pt1];\n        if (perpSeg1 === limit) return [inSeg2Pt2]; // return real intersection point\n\n        var factorSeg1 = perpSeg2 / limit;\n        return [{\n          x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n          y: inSeg1Pt1.y + factorSeg1 * seg1dy\n        }];\n      } else {\n        // parallel or collinear\n        if (perpSeg1 !== 0 || seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy) return []; // they are collinear or degenerate\n\n        var seg1Pt = seg1dx === 0 && seg1dy === 0; // segment1 is just a point?\n\n        var seg2Pt = seg2dx === 0 && seg2dy === 0; // segment2 is just a point?\n        // both segments are points\n\n        if (seg1Pt && seg2Pt) {\n          if (inSeg1Pt1.x !== inSeg2Pt1.x || inSeg1Pt1.y !== inSeg2Pt1.y) return []; // they are distinct  points\n\n          return [inSeg1Pt1]; // they are the same point\n        } // segment#1  is a single point\n\n\n        if (seg1Pt) {\n          if (!point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return []; // but not in segment#2\n\n          return [inSeg1Pt1];\n        } // segment#2  is a single point\n\n\n        if (seg2Pt) {\n          if (!point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return []; // but not in segment#1\n\n          return [inSeg2Pt1];\n        } // they are collinear segments, which might overlap\n\n\n        var seg1min, seg1max, seg1minVal, seg1maxVal;\n        var seg2min, seg2max, seg2minVal, seg2maxVal;\n\n        if (seg1dx !== 0) {\n          // the segments are NOT on a vertical line\n          if (inSeg1Pt1.x < inSeg1Pt2.x) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.x;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.x;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.x;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.x;\n          }\n\n          if (inSeg2Pt1.x < inSeg2Pt2.x) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.x;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.x;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.x;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.x;\n          }\n        } else {\n          // the segments are on a vertical line\n          if (inSeg1Pt1.y < inSeg1Pt2.y) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.y;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.y;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.y;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.y;\n          }\n\n          if (inSeg2Pt1.y < inSeg2Pt2.y) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.y;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.y;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.y;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.y;\n          }\n        }\n\n        if (seg1minVal <= seg2minVal) {\n          if (seg1maxVal < seg2minVal) return [];\n\n          if (seg1maxVal === seg2minVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg2min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg2min, seg1max];\n          return [seg2min, seg2max];\n        } else {\n          if (seg1minVal > seg2maxVal) return [];\n\n          if (seg1minVal === seg2maxVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg1min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg1min, seg1max];\n          return [seg1min, seg2max];\n        }\n      }\n    }\n\n    function isPointInsideAngle(inVertex, inLegFromPt, inLegToPt, inOtherPt) {\n      // The order of legs is important\n      var EPSILON = 0.0000000001; // translation of all points, so that Vertex is at (0,0)\n\n      var legFromPtX = inLegFromPt.x - inVertex.x,\n          legFromPtY = inLegFromPt.y - inVertex.y;\n      var legToPtX = inLegToPt.x - inVertex.x,\n          legToPtY = inLegToPt.y - inVertex.y;\n      var otherPtX = inOtherPt.x - inVertex.x,\n          otherPtY = inOtherPt.y - inVertex.y; // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\n      var from2toAngle = legFromPtX * legToPtY - legFromPtY * legToPtX;\n      var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n      if (Math.abs(from2toAngle) > EPSILON) {\n        // angle != 180 deg.\n        var other2toAngle = otherPtX * legToPtY - otherPtY * legToPtX; // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n        if (from2toAngle > 0) {\n          // main angle < 180 deg.\n          return from2otherAngle >= 0 && other2toAngle >= 0;\n        } else {\n          // main angle > 180 deg.\n          return from2otherAngle >= 0 || other2toAngle >= 0;\n        }\n      } else {\n        // angle == 180 deg.\n        // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n        return from2otherAngle > 0;\n      }\n    }\n\n    function removeHoles(contour, holes) {\n      var shape = contour.concat(); // work on this shape\n\n      var hole;\n\n      function isCutLineInsideAngles(inShapeIdx, inHoleIdx) {\n        // Check if hole point lies within angle around shape point\n        var lastShapeIdx = shape.length - 1;\n        var prevShapeIdx = inShapeIdx - 1;\n        if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n        var nextShapeIdx = inShapeIdx + 1;\n        if (nextShapeIdx > lastShapeIdx) nextShapeIdx = 0;\n        var insideAngle = isPointInsideAngle(shape[inShapeIdx], shape[prevShapeIdx], shape[nextShapeIdx], hole[inHoleIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n          return false;\n        } // Check if shape point lies within angle around hole point\n\n\n        var lastHoleIdx = hole.length - 1;\n        var prevHoleIdx = inHoleIdx - 1;\n        if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n        var nextHoleIdx = inHoleIdx + 1;\n        if (nextHoleIdx > lastHoleIdx) nextHoleIdx = 0;\n        insideAngle = isPointInsideAngle(hole[inHoleIdx], hole[prevHoleIdx], hole[nextHoleIdx], shape[inShapeIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n          return false;\n        }\n\n        return true;\n      }\n\n      function intersectsShapeEdge(inShapePt, inHolePt) {\n        // checks for intersections with shape edges\n        var sIdx, nextIdx, intersection;\n\n        for (sIdx = 0; sIdx < shape.length; sIdx++) {\n          nextIdx = sIdx + 1;\n          nextIdx %= shape.length;\n          intersection = intersect_segments_2D(inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true);\n          if (intersection.length > 0) return true;\n        }\n\n        return false;\n      }\n\n      var indepHoles = [];\n\n      function intersectsHoleEdge(inShapePt, inHolePt) {\n        // checks for intersections with hole edges\n        var ihIdx, chkHole, hIdx, nextIdx, intersection;\n\n        for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx++) {\n          chkHole = holes[indepHoles[ihIdx]];\n\n          for (hIdx = 0; hIdx < chkHole.length; hIdx++) {\n            nextIdx = hIdx + 1;\n            nextIdx %= chkHole.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true);\n            if (intersection.length > 0) return true;\n          }\n        }\n\n        return false;\n      }\n\n      var holeIndex,\n          shapeIndex,\n          shapePt,\n          holePt,\n          holeIdx,\n          cutKey,\n          failedCuts = [],\n          tmpShape1,\n          tmpShape2,\n          tmpHole1,\n          tmpHole2;\n\n      for (var h = 0, hl = holes.length; h < hl; h++) {\n        indepHoles.push(h);\n      }\n\n      var minShapeIndex = 0;\n      var counter = indepHoles.length * 2;\n\n      while (indepHoles.length > 0) {\n        counter--;\n\n        if (counter < 0) {\n          console.log(\"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\");\n          break;\n        } // search for shape-vertex and hole-vertex,\n        // which can be connected without intersections\n\n\n        for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex++) {\n          shapePt = shape[shapeIndex];\n          holeIndex = -1; // search for hole which can be reached without intersections\n\n          for (var h = 0; h < indepHoles.length; h++) {\n            holeIdx = indepHoles[h]; // prevent multiple checks\n\n            cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n            if (failedCuts[cutKey] !== undefined) continue;\n            hole = holes[holeIdx];\n\n            for (var h2 = 0; h2 < hole.length; h2++) {\n              holePt = hole[h2];\n              if (!isCutLineInsideAngles(shapeIndex, h2)) continue;\n              if (intersectsShapeEdge(shapePt, holePt)) continue;\n              if (intersectsHoleEdge(shapePt, holePt)) continue;\n              holeIndex = h2;\n              indepHoles.splice(h, 1);\n              tmpShape1 = shape.slice(0, shapeIndex + 1);\n              tmpShape2 = shape.slice(shapeIndex);\n              tmpHole1 = hole.slice(holeIndex);\n              tmpHole2 = hole.slice(0, holeIndex + 1);\n              shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n              minShapeIndex = shapeIndex; // Debug only, to show the selected cuts\n              // glob_CutLines.push( [ shapePt, holePt ] );\n\n              break;\n            }\n\n            if (holeIndex >= 0) break; // hole-vertex found\n\n            failedCuts[cutKey] = true; // remember failure\n          }\n\n          if (holeIndex >= 0) break; // hole-vertex found\n        }\n      }\n\n      return shape;\n      /* shape with no holes */\n    }\n\n    var i,\n        il,\n        f,\n        face,\n        key,\n        index,\n        allPointsMap = {}; // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n    var allpoints = contour.concat();\n\n    for (var h = 0, hl = holes.length; h < hl; h++) {\n      Array.prototype.push.apply(allpoints, holes[h]);\n    } //console.log( \"allpoints\",allpoints, allpoints.length );\n    // prepare all points map\n\n\n    for (i = 0, il = allpoints.length; i < il; i++) {\n      key = allpoints[i].x + \":\" + allpoints[i].y;\n\n      if (allPointsMap[key] !== undefined) {\n        console.warn(\"THREE.Shape: Duplicate point\", key);\n      }\n\n      allPointsMap[key] = i;\n    } // remove holes by cutting paths to holes and adding them to the shape\n\n\n    var shapeWithoutHoles = removeHoles(contour, holes);\n    var triangles = THREE.FontUtils.Triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n    //console.log( \"triangles\",triangles, triangles.length );\n    // check all face vertices against all points map\n\n    for (i = 0, il = triangles.length; i < il; i++) {\n      face = triangles[i];\n\n      for (f = 0; f < 3; f++) {\n        key = face[f].x + \":\" + face[f].y;\n        index = allPointsMap[key];\n\n        if (index !== undefined) {\n          face[f] = index;\n        }\n      }\n    }\n\n    return triangles.concat();\n  },\n  isClockWise: function (pts) {\n    return THREE.FontUtils.Triangulate.area(pts) < 0;\n  },\n  // Bezier Curves formulas obtained from\n  // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n  // Quad Bezier Functions\n  b2p0: function (t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  },\n  b2p1: function (t, p) {\n    return 2 * (1 - t) * t * p;\n  },\n  b2p2: function (t, p) {\n    return t * t * p;\n  },\n  b2: function (t, p0, p1, p2) {\n    return this.b2p0(t, p0) + this.b2p1(t, p1) + this.b2p2(t, p2);\n  },\n  // Cubic Bezier Functions\n  b3p0: function (t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  },\n  b3p1: function (t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  },\n  b3p2: function (t, p) {\n    var k = 1 - t;\n    return 3 * k * t * t * p;\n  },\n  b3p3: function (t, p) {\n    return t * t * t * p;\n  },\n  b3: function (t, p0, p1, p2, p3) {\n    return this.b3p0(t, p0) + this.b3p1(t, p1) + this.b3p2(t, p2) + this.b3p3(t, p3);\n  }\n}; // File:src/extras/curves/LineCurve.js\n\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\n\nTHREE.LineCurve = function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\n\nTHREE.LineCurve.prototype.getPoint = function (t) {\n  var point = this.v2.clone().sub(this.v1);\n  point.multiplyScalar(t).add(this.v1);\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nTHREE.LineCurve.prototype.getPointAt = function (u) {\n  return this.getPoint(u);\n};\n\nTHREE.LineCurve.prototype.getTangent = function (t) {\n  var tangent = this.v2.clone().sub(this.v1);\n  return tangent.normalize();\n}; // File:src/extras/curves/QuadraticBezierCurve.js\n\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\n\n\nTHREE.QuadraticBezierCurve = function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\n\nTHREE.QuadraticBezierCurve.prototype.getPoint = function (t) {\n  var vector = new THREE.Vector2();\n  vector.x = THREE.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x);\n  vector.y = THREE.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y);\n  return vector;\n};\n\nTHREE.QuadraticBezierCurve.prototype.getTangent = function (t) {\n  var vector = new THREE.Vector2();\n  vector.x = THREE.Curve.Utils.tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x);\n  vector.y = THREE.Curve.Utils.tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y); // returns unit vector\n\n  return vector.normalize();\n}; // File:src/extras/curves/CubicBezierCurve.js\n\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\n\n\nTHREE.CubicBezierCurve = function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n};\n\nTHREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\n\nTHREE.CubicBezierCurve.prototype.getPoint = function (t) {\n  var tx, ty;\n  tx = THREE.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n  ty = THREE.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n  return new THREE.Vector2(tx, ty);\n};\n\nTHREE.CubicBezierCurve.prototype.getTangent = function (t) {\n  var tx, ty;\n  tx = THREE.Curve.Utils.tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n  ty = THREE.Curve.Utils.tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n  var tangent = new THREE.Vector2(tx, ty);\n  tangent.normalize();\n  return tangent;\n}; // File:src/extras/curves/SplineCurve.js\n\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\n\n\nTHREE.SplineCurve = function (points\n/* array of Vector2 */\n) {\n  this.points = points == undefined ? [] : points;\n};\n\nTHREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\n\nTHREE.SplineCurve.prototype.getPoint = function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var vector = new THREE.Vector2();\n  vector.x = THREE.Curve.Utils.interpolate(point0.x, point1.x, point2.x, point3.x, weight);\n  vector.y = THREE.Curve.Utils.interpolate(point0.y, point1.y, point2.y, point3.y, weight);\n  return vector;\n}; // File:src/extras/curves/EllipseCurve.js\n\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\n\n\nTHREE.EllipseCurve = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n  this.aX = aX;\n  this.aY = aY;\n  this.xRadius = xRadius;\n  this.yRadius = yRadius;\n  this.aStartAngle = aStartAngle;\n  this.aEndAngle = aEndAngle;\n  this.aClockwise = aClockwise;\n  this.aRotation = aRotation || 0;\n};\n\nTHREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\n\nTHREE.EllipseCurve.prototype.getPoint = function (t) {\n  var deltaAngle = this.aEndAngle - this.aStartAngle;\n  if (deltaAngle < 0) deltaAngle += Math.PI * 2;\n  if (deltaAngle > Math.PI * 2) deltaAngle -= Math.PI * 2;\n  var angle;\n\n  if (this.aClockwise === true) {\n    angle = this.aEndAngle + (1 - t) * (Math.PI * 2 - deltaAngle);\n  } else {\n    angle = this.aStartAngle + t * deltaAngle;\n  }\n\n  var x = this.aX + this.xRadius * Math.cos(angle);\n  var y = this.aY + this.yRadius * Math.sin(angle);\n\n  if (this.aRotation !== 0) {\n    var cos = Math.cos(this.aRotation);\n    var sin = Math.sin(this.aRotation);\n    var tx = x,\n        ty = y; // Rotate the point about the center of the ellipse.\n\n    x = (tx - this.aX) * cos - (ty - this.aY) * sin + this.aX;\n    y = (tx - this.aX) * sin + (ty - this.aY) * cos + this.aY;\n  }\n\n  return new THREE.Vector2(x, y);\n}; // File:src/extras/curves/ArcCurve.js\n\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\n\n\nTHREE.ArcCurve = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  THREE.EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype);\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve; // File:src/extras/curves/LineCurve3.js\n\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\n\nTHREE.LineCurve3 = THREE.Curve.create(function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.subVectors(this.v2, this.v1); // diff\n\n  vector.multiplyScalar(t);\n  vector.add(this.v1);\n  return vector;\n}); // File:src/extras/curves/QuadraticBezierCurve3.js\n\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\n\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x);\n  vector.y = THREE.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y);\n  vector.z = THREE.Shape.Utils.b2(t, this.v0.z, this.v1.z, this.v2.z);\n  return vector;\n}); // File:src/extras/curves/CubicBezierCurve3.js\n\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\n\nTHREE.CubicBezierCurve3 = THREE.Curve.create(function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n  vector.y = THREE.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n  vector.z = THREE.Shape.Utils.b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z);\n  return vector;\n}); // File:src/extras/curves/SplineCurve3.js\n\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\n\nTHREE.SplineCurve3 = THREE.Curve.create(function (points\n/* array of Vector3 */\n) {\n  console.warn('THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3');\n  this.points = points == undefined ? [] : points;\n}, function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint == 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Curve.Utils.interpolate(point0.x, point1.x, point2.x, point3.x, weight);\n  vector.y = THREE.Curve.Utils.interpolate(point0.y, point1.y, point2.y, point3.y, weight);\n  vector.z = THREE.Curve.Utils.interpolate(point0.z, point1.z, point2.z, point3.z, weight);\n  return vector;\n}); // File:src/extras/curves/CatmullRomCurve3.js\n\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\n\nTHREE.CatmullRomCurve3 = function () {\n  var tmp = new THREE.Vector3(),\n      px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n  /*\r\n  Based on an optimized c++ solution in\r\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n   - http://ideone.com/NoEbVM\r\n  \n  This CubicPoly class could be used for reusing some variables and calculations,\r\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\r\n  which can be placed in CurveUtils.\r\n  */\n\n  function CubicPoly() {}\n  /*\r\n   * Compute coefficients for a cubic polynomial\r\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n   * such that\r\n   *   p(0) = x0, p(1) = x1\r\n   *  and\r\n   *   p'(0) = t0, p'(1) = t1.\r\n   */\n\n\n  CubicPoly.prototype.init = function (x0, x1, t0, t1) {\n    this.c0 = x0;\n    this.c1 = t0;\n    this.c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    this.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  };\n\n  CubicPoly.prototype.initNonuniformCatmullRom = function (x0, x1, x2, x3, dt0, dt1, dt2) {\n    // compute tangents when parameterized in [t1,t2]\n    var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n    var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n    t1 *= dt1;\n    t2 *= dt1; // initCubicPoly\n\n    this.init(x1, x2, t1, t2);\n  }; // standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\n\n  CubicPoly.prototype.initCatmullRom = function (x0, x1, x2, x3, tension) {\n    this.init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n  };\n\n  CubicPoly.prototype.calc = function (t) {\n    var t2 = t * t;\n    var t3 = t2 * t;\n    return this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n  }; // Subclass Three.js curve\n\n\n  return THREE.Curve.create(function (p\n  /* array of Vector3 */\n  ) {\n    this.points = p || [];\n  }, function (t) {\n    var points = this.points,\n        point,\n        intPoint,\n        weight,\n        l;\n    l = points.length;\n    if (l < 2) console.log('duh, you need at least 2 points');\n    point = (l - 1) * t;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n\n    if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p1, p2, p3;\n\n    if (intPoint === 0) {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    } else {\n      p0 = points[intPoint - 1];\n    }\n\n    p1 = points[intPoint];\n    p2 = points[intPoint + 1];\n\n    if (intPoint + 2 < l) {\n      p3 = points[intPoint + 2];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 2]);\n      p3 = tmp;\n    }\n\n    if (this.type === undefined || this.type === 'centripetal' || this.type === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.type === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.type === 'catmullrom') {\n      var tension = this.tension !== undefined ? this.tension : 0.5;\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, tension);\n    }\n\n    var v = new THREE.Vector3(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return v;\n  });\n}(); // File:src/extras/curves/ClosedSplineCurve3.js\n\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\n\n\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(function (points\n/* array of Vector3 */\n) {\n  this.points = points == undefined ? [] : points;\n}, function (t) {\n  var points = this.points;\n  var point = (points.length - 0) * t; // This needs to be from 0-length +1\n\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n  var point0 = points[(intPoint - 1) % points.length];\n  var point1 = points[intPoint % points.length];\n  var point2 = points[(intPoint + 1) % points.length];\n  var point3 = points[(intPoint + 2) % points.length];\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Curve.Utils.interpolate(point0.x, point1.x, point2.x, point3.x, weight);\n  vector.y = THREE.Curve.Utils.interpolate(point0.y, point1.y, point2.y, point3.y, weight);\n  vector.z = THREE.Curve.Utils.interpolate(point0.z, point1.z, point2.z, point3.z, weight);\n  return vector;\n}); // File:src/extras/animation/AnimationHandler.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\n\nTHREE.AnimationHandler = {\n  LINEAR: 0,\n  CATMULLROM: 1,\n  CATMULLROM_FORWARD: 2,\n  //\n  add: function () {\n    console.warn('THREE.AnimationHandler.add() has been deprecated.');\n  },\n  get: function () {\n    console.warn('THREE.AnimationHandler.get() has been deprecated.');\n  },\n  remove: function () {\n    console.warn('THREE.AnimationHandler.remove() has been deprecated.');\n  },\n  //\n  animations: [],\n  init: function (data) {\n    if (data.initialized === true) return data; // loop through all keys\n\n    for (var h = 0; h < data.hierarchy.length; h++) {\n      for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n        // remove minus times\n        if (data.hierarchy[h].keys[k].time < 0) {\n          data.hierarchy[h].keys[k].time = 0;\n        } // create quaternions\n\n\n        if (data.hierarchy[h].keys[k].rot !== undefined && !(data.hierarchy[h].keys[k].rot instanceof THREE.Quaternion)) {\n          var quat = data.hierarchy[h].keys[k].rot;\n          data.hierarchy[h].keys[k].rot = new THREE.Quaternion().fromArray(quat);\n        }\n      } // prepare morph target keys\n\n\n      if (data.hierarchy[h].keys.length && data.hierarchy[h].keys[0].morphTargets !== undefined) {\n        // get all used\n        var usedMorphTargets = {};\n\n        for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n          for (var m = 0; m < data.hierarchy[h].keys[k].morphTargets.length; m++) {\n            var morphTargetName = data.hierarchy[h].keys[k].morphTargets[m];\n            usedMorphTargets[morphTargetName] = -1;\n          }\n        }\n\n        data.hierarchy[h].usedMorphTargets = usedMorphTargets; // set all used on all frames\n\n        for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n          var influences = {};\n\n          for (var morphTargetName in usedMorphTargets) {\n            for (var m = 0; m < data.hierarchy[h].keys[k].morphTargets.length; m++) {\n              if (data.hierarchy[h].keys[k].morphTargets[m] === morphTargetName) {\n                influences[morphTargetName] = data.hierarchy[h].keys[k].morphTargetsInfluences[m];\n                break;\n              }\n            }\n\n            if (m === data.hierarchy[h].keys[k].morphTargets.length) {\n              influences[morphTargetName] = 0;\n            }\n          }\n\n          data.hierarchy[h].keys[k].morphTargetsInfluences = influences;\n        }\n      } // remove all keys that are on the same time\n\n\n      for (var k = 1; k < data.hierarchy[h].keys.length; k++) {\n        if (data.hierarchy[h].keys[k].time === data.hierarchy[h].keys[k - 1].time) {\n          data.hierarchy[h].keys.splice(k, 1);\n          k--;\n        }\n      } // set index\n\n\n      for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n        data.hierarchy[h].keys[k].index = k;\n      }\n    }\n\n    data.initialized = true;\n    return data;\n  },\n  parse: function (root) {\n    var parseRecurseHierarchy = function (root, hierarchy) {\n      hierarchy.push(root);\n\n      for (var c = 0; c < root.children.length; c++) parseRecurseHierarchy(root.children[c], hierarchy);\n    }; // setup hierarchy\n\n\n    var hierarchy = [];\n\n    if (root instanceof THREE.SkinnedMesh) {\n      for (var b = 0; b < root.skeleton.bones.length; b++) {\n        hierarchy.push(root.skeleton.bones[b]);\n      }\n    } else {\n      parseRecurseHierarchy(root, hierarchy);\n    }\n\n    return hierarchy;\n  },\n  play: function (animation) {\n    if (this.animations.indexOf(animation) === -1) {\n      this.animations.push(animation);\n    }\n  },\n  stop: function (animation) {\n    var index = this.animations.indexOf(animation);\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n    }\n  },\n  update: function (deltaTimeMS) {\n    for (var i = 0; i < this.animations.length; i++) {\n      this.animations[i].resetBlendWeights();\n    }\n\n    for (var i = 0; i < this.animations.length; i++) {\n      this.animations[i].update(deltaTimeMS);\n    }\n  }\n}; // File:src/extras/animation/Animation.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.Animation = function (root, data) {\n  this.root = root;\n  this.data = THREE.AnimationHandler.init(data);\n  this.hierarchy = THREE.AnimationHandler.parse(root);\n  this.currentTime = 0;\n  this.timeScale = 1;\n  this.isPlaying = false;\n  this.loop = true;\n  this.weight = 0;\n  this.interpolationType = THREE.AnimationHandler.LINEAR;\n};\n\nTHREE.Animation.prototype = {\n  constructor: THREE.Animation,\n  keyTypes: [\"pos\", \"rot\", \"scl\"],\n  play: function (startTime, weight) {\n    this.currentTime = startTime !== undefined ? startTime : 0;\n    this.weight = weight !== undefined ? weight : 1;\n    this.isPlaying = true;\n    this.reset();\n    THREE.AnimationHandler.play(this);\n  },\n  stop: function () {\n    this.isPlaying = false;\n    THREE.AnimationHandler.stop(this);\n  },\n  reset: function () {\n    for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n      var object = this.hierarchy[h];\n\n      if (object.animationCache === undefined) {\n        object.animationCache = {\n          animations: {},\n          blending: {\n            positionWeight: 0.0,\n            quaternionWeight: 0.0,\n            scaleWeight: 0.0\n          }\n        };\n      }\n\n      var name = this.data.name;\n      var animations = object.animationCache.animations;\n      var animationCache = animations[name];\n\n      if (animationCache === undefined) {\n        animationCache = {\n          prevKey: {\n            pos: 0,\n            rot: 0,\n            scl: 0\n          },\n          nextKey: {\n            pos: 0,\n            rot: 0,\n            scl: 0\n          },\n          originalMatrix: object.matrix\n        };\n        animations[name] = animationCache;\n      } // Get keys to match our current time\n\n\n      for (var t = 0; t < 3; t++) {\n        var type = this.keyTypes[t];\n        var prevKey = this.data.hierarchy[h].keys[0];\n        var nextKey = this.getNextKeyWith(type, h, 1);\n\n        while (nextKey.time < this.currentTime && nextKey.index > prevKey.index) {\n          prevKey = nextKey;\n          nextKey = this.getNextKeyWith(type, h, nextKey.index + 1);\n        }\n\n        animationCache.prevKey[type] = prevKey;\n        animationCache.nextKey[type] = nextKey;\n      }\n    }\n  },\n  resetBlendWeights: function () {\n    for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n      var object = this.hierarchy[h];\n      var animationCache = object.animationCache;\n\n      if (animationCache !== undefined) {\n        var blending = animationCache.blending;\n        blending.positionWeight = 0.0;\n        blending.quaternionWeight = 0.0;\n        blending.scaleWeight = 0.0;\n      }\n    }\n  },\n  update: function () {\n    var points = [];\n    var target = new THREE.Vector3();\n    var newVector = new THREE.Vector3();\n    var newQuat = new THREE.Quaternion(); // Catmull-Rom spline\n\n    var interpolateCatmullRom = function (points, scale) {\n      var c = [],\n          v3 = [],\n          point,\n          intPoint,\n          weight,\n          w2,\n          w3,\n          pa,\n          pb,\n          pc,\n          pd;\n      point = (points.length - 1) * scale;\n      intPoint = Math.floor(point);\n      weight = point - intPoint;\n      c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n      c[1] = intPoint;\n      c[2] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\n      c[3] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\n      pa = points[c[0]];\n      pb = points[c[1]];\n      pc = points[c[2]];\n      pd = points[c[3]];\n      w2 = weight * weight;\n      w3 = weight * w2;\n      v3[0] = interpolate(pa[0], pb[0], pc[0], pd[0], weight, w2, w3);\n      v3[1] = interpolate(pa[1], pb[1], pc[1], pd[1], weight, w2, w3);\n      v3[2] = interpolate(pa[2], pb[2], pc[2], pd[2], weight, w2, w3);\n      return v3;\n    };\n\n    var interpolate = function (p0, p1, p2, p3, t, t2, t3) {\n      var v0 = (p2 - p0) * 0.5,\n          v1 = (p3 - p1) * 0.5;\n      return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n    };\n\n    return function (delta) {\n      if (this.isPlaying === false) return;\n      this.currentTime += delta * this.timeScale;\n      if (this.weight === 0) return; //\n\n      var duration = this.data.length;\n\n      if (this.currentTime > duration || this.currentTime < 0) {\n        if (this.loop) {\n          this.currentTime %= duration;\n          if (this.currentTime < 0) this.currentTime += duration;\n          this.reset();\n        } else {\n          this.stop();\n        }\n      }\n\n      for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n        var object = this.hierarchy[h];\n        var animationCache = object.animationCache.animations[this.data.name];\n        var blending = object.animationCache.blending; // loop through pos/rot/scl\n\n        for (var t = 0; t < 3; t++) {\n          // get keys\n          var type = this.keyTypes[t];\n          var prevKey = animationCache.prevKey[type];\n          var nextKey = animationCache.nextKey[type];\n\n          if (this.timeScale > 0 && nextKey.time <= this.currentTime || this.timeScale < 0 && prevKey.time >= this.currentTime) {\n            prevKey = this.data.hierarchy[h].keys[0];\n            nextKey = this.getNextKeyWith(type, h, 1);\n\n            while (nextKey.time < this.currentTime && nextKey.index > prevKey.index) {\n              prevKey = nextKey;\n              nextKey = this.getNextKeyWith(type, h, nextKey.index + 1);\n            }\n\n            animationCache.prevKey[type] = prevKey;\n            animationCache.nextKey[type] = nextKey;\n          }\n\n          var scale = (this.currentTime - prevKey.time) / (nextKey.time - prevKey.time);\n          var prevXYZ = prevKey[type];\n          var nextXYZ = nextKey[type];\n          if (scale < 0) scale = 0;\n          if (scale > 1) scale = 1; // interpolate\n\n          if (type === \"pos\") {\n            if (this.interpolationType === THREE.AnimationHandler.LINEAR) {\n              newVector.x = prevXYZ[0] + (nextXYZ[0] - prevXYZ[0]) * scale;\n              newVector.y = prevXYZ[1] + (nextXYZ[1] - prevXYZ[1]) * scale;\n              newVector.z = prevXYZ[2] + (nextXYZ[2] - prevXYZ[2]) * scale; // blend\n\n              var proportionalWeight = this.weight / (this.weight + blending.positionWeight);\n              object.position.lerp(newVector, proportionalWeight);\n              blending.positionWeight += this.weight;\n            } else if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n              points[0] = this.getPrevKeyWith(\"pos\", h, prevKey.index - 1)[\"pos\"];\n              points[1] = prevXYZ;\n              points[2] = nextXYZ;\n              points[3] = this.getNextKeyWith(\"pos\", h, nextKey.index + 1)[\"pos\"];\n              scale = scale * 0.33 + 0.33;\n              var currentPoint = interpolateCatmullRom(points, scale);\n              var proportionalWeight = this.weight / (this.weight + blending.positionWeight);\n              blending.positionWeight += this.weight; // blend\n\n              var vector = object.position;\n              vector.x = vector.x + (currentPoint[0] - vector.x) * proportionalWeight;\n              vector.y = vector.y + (currentPoint[1] - vector.y) * proportionalWeight;\n              vector.z = vector.z + (currentPoint[2] - vector.z) * proportionalWeight;\n\n              if (this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n                var forwardPoint = interpolateCatmullRom(points, scale * 1.01);\n                target.set(forwardPoint[0], forwardPoint[1], forwardPoint[2]);\n                target.sub(vector);\n                target.y = 0;\n                target.normalize();\n                var angle = Math.atan2(target.x, target.z);\n                object.rotation.set(0, angle, 0);\n              }\n            }\n          } else if (type === \"rot\") {\n            THREE.Quaternion.slerp(prevXYZ, nextXYZ, newQuat, scale); // Avoid paying the cost of an additional slerp if we don't have to\n\n            if (blending.quaternionWeight === 0) {\n              object.quaternion.copy(newQuat);\n              blending.quaternionWeight = this.weight;\n            } else {\n              var proportionalWeight = this.weight / (this.weight + blending.quaternionWeight);\n              THREE.Quaternion.slerp(object.quaternion, newQuat, object.quaternion, proportionalWeight);\n              blending.quaternionWeight += this.weight;\n            }\n          } else if (type === \"scl\") {\n            newVector.x = prevXYZ[0] + (nextXYZ[0] - prevXYZ[0]) * scale;\n            newVector.y = prevXYZ[1] + (nextXYZ[1] - prevXYZ[1]) * scale;\n            newVector.z = prevXYZ[2] + (nextXYZ[2] - prevXYZ[2]) * scale;\n            var proportionalWeight = this.weight / (this.weight + blending.scaleWeight);\n            object.scale.lerp(newVector, proportionalWeight);\n            blending.scaleWeight += this.weight;\n          }\n        }\n      }\n\n      return true;\n    };\n  }(),\n  getNextKeyWith: function (type, h, key) {\n    var keys = this.data.hierarchy[h].keys;\n\n    if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n      key = key < keys.length - 1 ? key : keys.length - 1;\n    } else {\n      key = key % keys.length;\n    }\n\n    for (; key < keys.length; key++) {\n      if (keys[key][type] !== undefined) {\n        return keys[key];\n      }\n    }\n\n    return this.data.hierarchy[h].keys[0];\n  },\n  getPrevKeyWith: function (type, h, key) {\n    var keys = this.data.hierarchy[h].keys;\n\n    if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n      key = key > 0 ? key : 0;\n    } else {\n      key = key >= 0 ? key : key + keys.length;\n    }\n\n    for (; key >= 0; key--) {\n      if (keys[key][type] !== undefined) {\n        return keys[key];\n      }\n    }\n\n    return this.data.hierarchy[h].keys[keys.length - 1];\n  }\n}; // File:src/extras/animation/KeyFrameAnimation.js\n\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\n\nTHREE.KeyFrameAnimation = function (data) {\n  this.root = data.node;\n  this.data = THREE.AnimationHandler.init(data);\n  this.hierarchy = THREE.AnimationHandler.parse(this.root);\n  this.currentTime = 0;\n  this.timeScale = 0.001;\n  this.isPlaying = false;\n  this.isPaused = true;\n  this.loop = true; // initialize to first keyframes\n\n  for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n    var keys = this.data.hierarchy[h].keys,\n        sids = this.data.hierarchy[h].sids,\n        obj = this.hierarchy[h];\n\n    if (keys.length && sids) {\n      for (var s = 0; s < sids.length; s++) {\n        var sid = sids[s],\n            next = this.getNextKeyWith(sid, h, 0);\n\n        if (next) {\n          next.apply(sid);\n        }\n      }\n\n      obj.matrixAutoUpdate = false;\n      this.data.hierarchy[h].node.updateMatrix();\n      obj.matrixWorldNeedsUpdate = true;\n    }\n  }\n};\n\nTHREE.KeyFrameAnimation.prototype = {\n  constructor: THREE.KeyFrameAnimation,\n  play: function (startTime) {\n    this.currentTime = startTime !== undefined ? startTime : 0;\n\n    if (this.isPlaying === false) {\n      this.isPlaying = true; // reset key cache\n\n      var h,\n          hl = this.hierarchy.length,\n          object,\n          node;\n\n      for (h = 0; h < hl; h++) {\n        object = this.hierarchy[h];\n        node = this.data.hierarchy[h];\n\n        if (node.animationCache === undefined) {\n          node.animationCache = {};\n          node.animationCache.prevKey = null;\n          node.animationCache.nextKey = null;\n          node.animationCache.originalMatrix = object.matrix;\n        }\n\n        var keys = this.data.hierarchy[h].keys;\n\n        if (keys.length) {\n          node.animationCache.prevKey = keys[0];\n          node.animationCache.nextKey = keys[1];\n          this.startTime = Math.min(keys[0].time, this.startTime);\n          this.endTime = Math.max(keys[keys.length - 1].time, this.endTime);\n        }\n      }\n\n      this.update(0);\n    }\n\n    this.isPaused = false;\n    THREE.AnimationHandler.play(this);\n  },\n  stop: function () {\n    this.isPlaying = false;\n    this.isPaused = false;\n    THREE.AnimationHandler.stop(this); // reset JIT matrix and remove cache\n\n    for (var h = 0; h < this.data.hierarchy.length; h++) {\n      var obj = this.hierarchy[h];\n      var node = this.data.hierarchy[h];\n\n      if (node.animationCache !== undefined) {\n        var original = node.animationCache.originalMatrix;\n        original.copy(obj.matrix);\n        obj.matrix = original;\n        delete node.animationCache;\n      }\n    }\n  },\n  update: function (delta) {\n    if (this.isPlaying === false) return;\n    this.currentTime += delta * this.timeScale; //\n\n    var duration = this.data.length;\n\n    if (this.loop === true && this.currentTime > duration) {\n      this.currentTime %= duration;\n    }\n\n    this.currentTime = Math.min(this.currentTime, duration);\n\n    for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n      var object = this.hierarchy[h];\n      var node = this.data.hierarchy[h];\n      var keys = node.keys,\n          animationCache = node.animationCache;\n\n      if (keys.length) {\n        var prevKey = animationCache.prevKey;\n        var nextKey = animationCache.nextKey;\n\n        if (nextKey.time <= this.currentTime) {\n          while (nextKey.time < this.currentTime && nextKey.index > prevKey.index) {\n            prevKey = nextKey;\n            nextKey = keys[prevKey.index + 1];\n          }\n\n          animationCache.prevKey = prevKey;\n          animationCache.nextKey = nextKey;\n        }\n\n        if (nextKey.time >= this.currentTime) {\n          prevKey.interpolate(nextKey, this.currentTime);\n        } else {\n          prevKey.interpolate(nextKey, nextKey.time);\n        }\n\n        this.data.hierarchy[h].node.updateMatrix();\n        object.matrixWorldNeedsUpdate = true;\n      }\n    }\n  },\n  getNextKeyWith: function (sid, h, key) {\n    var keys = this.data.hierarchy[h].keys;\n    key = key % keys.length;\n\n    for (; key < keys.length; key++) {\n      if (keys[key].hasTarget(sid)) {\n        return keys[key];\n      }\n    }\n\n    return keys[0];\n  },\n  getPrevKeyWith: function (sid, h, key) {\n    var keys = this.data.hierarchy[h].keys;\n    key = key >= 0 ? key : key + keys.length;\n\n    for (; key >= 0; key--) {\n      if (keys[key].hasTarget(sid)) {\n        return keys[key];\n      }\n    }\n\n    return keys[keys.length - 1];\n  }\n}; // File:src/extras/animation/MorphAnimation.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\n\nTHREE.MorphAnimation = function (mesh) {\n  this.mesh = mesh;\n  this.frames = mesh.morphTargetInfluences.length;\n  this.currentTime = 0;\n  this.duration = 1000;\n  this.loop = true;\n  this.lastFrame = 0;\n  this.currentFrame = 0;\n  this.isPlaying = false;\n};\n\nTHREE.MorphAnimation.prototype = {\n  constructor: THREE.MorphAnimation,\n  play: function () {\n    this.isPlaying = true;\n  },\n  pause: function () {\n    this.isPlaying = false;\n  },\n  update: function (delta) {\n    if (this.isPlaying === false) return;\n    this.currentTime += delta;\n\n    if (this.loop === true && this.currentTime > this.duration) {\n      this.currentTime %= this.duration;\n    }\n\n    this.currentTime = Math.min(this.currentTime, this.duration);\n    var frameTime = this.duration / this.frames;\n    var frame = Math.floor(this.currentTime / frameTime);\n    var influences = this.mesh.morphTargetInfluences;\n\n    if (frame !== this.currentFrame) {\n      influences[this.lastFrame] = 0;\n      influences[this.currentFrame] = 1;\n      influences[frame] = 0;\n      this.lastFrame = this.currentFrame;\n      this.currentFrame = frame;\n    }\n\n    var mix = this.currentTime % frameTime / frameTime;\n    influences[frame] = mix;\n    influences[this.lastFrame] = 1 - mix;\n  }\n}; // File:src/extras/geometries/BoxGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\n\nTHREE.BoxGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n  THREE.Geometry.call(this);\n  this.type = 'BoxGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  this.widthSegments = widthSegments || 1;\n  this.heightSegments = heightSegments || 1;\n  this.depthSegments = depthSegments || 1;\n  var scope = this;\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var depth_half = depth / 2;\n  buildPlane('z', 'y', -1, -1, depth, height, width_half, 0); // px\n\n  buildPlane('z', 'y', 1, -1, depth, height, -width_half, 1); // nx\n\n  buildPlane('x', 'z', 1, 1, width, depth, height_half, 2); // py\n\n  buildPlane('x', 'z', 1, -1, width, depth, -height_half, 3); // ny\n\n  buildPlane('x', 'y', 1, -1, width, height, depth_half, 4); // pz\n\n  buildPlane('x', 'y', -1, -1, width, height, -depth_half, 5); // nz\n\n  function buildPlane(u, v, udir, vdir, width, height, depth, materialIndex) {\n    var w,\n        ix,\n        iy,\n        gridX = scope.widthSegments,\n        gridY = scope.heightSegments,\n        width_half = width / 2,\n        height_half = height / 2,\n        offset = scope.vertices.length;\n\n    if (u === 'x' && v === 'y' || u === 'y' && v === 'x') {\n      w = 'z';\n    } else if (u === 'x' && v === 'z' || u === 'z' && v === 'x') {\n      w = 'y';\n      gridY = scope.depthSegments;\n    } else if (u === 'z' && v === 'y' || u === 'y' && v === 'z') {\n      w = 'x';\n      gridX = scope.depthSegments;\n    }\n\n    var gridX1 = gridX + 1,\n        gridY1 = gridY + 1,\n        segment_width = width / gridX,\n        segment_height = height / gridY,\n        normal = new THREE.Vector3();\n    normal[w] = depth > 0 ? 1 : -1;\n\n    for (iy = 0; iy < gridY1; iy++) {\n      for (ix = 0; ix < gridX1; ix++) {\n        var vector = new THREE.Vector3();\n        vector[u] = (ix * segment_width - width_half) * udir;\n        vector[v] = (iy * segment_height - height_half) * vdir;\n        vector[w] = depth;\n        scope.vertices.push(vector);\n      }\n    }\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * (iy + 1);\n        var c = ix + 1 + gridX1 * (iy + 1);\n        var d = ix + 1 + gridX1 * iy;\n        var uva = new THREE.Vector2(ix / gridX, 1 - iy / gridY);\n        var uvb = new THREE.Vector2(ix / gridX, 1 - (iy + 1) / gridY);\n        var uvc = new THREE.Vector2((ix + 1) / gridX, 1 - (iy + 1) / gridY);\n        var uvd = new THREE.Vector2((ix + 1) / gridX, 1 - iy / gridY);\n        var face = new THREE.Face3(a + offset, b + offset, d + offset);\n        face.normal.copy(normal);\n        face.vertexNormals.push(normal.clone(), normal.clone(), normal.clone());\n        face.materialIndex = materialIndex;\n        scope.faces.push(face);\n        scope.faceVertexUvs[0].push([uva, uvb, uvd]);\n        face = new THREE.Face3(b + offset, c + offset, d + offset);\n        face.normal.copy(normal);\n        face.vertexNormals.push(normal.clone(), normal.clone(), normal.clone());\n        face.materialIndex = materialIndex;\n        scope.faces.push(face);\n        scope.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n      }\n    }\n  }\n\n  this.mergeVertices();\n};\n\nTHREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\n\nTHREE.BoxGeometry.prototype.clone = function () {\n  var geometry = new THREE.BoxGeometry(this.parameters.width, this.parameters.height, this.parameters.depth, this.parameters.widthSegments, this.parameters.heightSegments, this.parameters.depthSegments);\n  return geometry;\n};\n\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\n// File:src/extras/geometries/CircleGeometry.js\n\n/**\r\n * @author hughes\r\n */\n\nTHREE.CircleGeometry = function (radius, segments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'CircleGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  segments = segments !== undefined ? Math.max(3, segments) : 8;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  var i,\n      uvs = [],\n      center = new THREE.Vector3(),\n      centerUV = new THREE.Vector2(0.5, 0.5);\n  this.vertices.push(center);\n  uvs.push(centerUV);\n\n  for (i = 0; i <= segments; i++) {\n    var vertex = new THREE.Vector3();\n    var segment = thetaStart + i / segments * thetaLength;\n    vertex.x = radius * Math.cos(segment);\n    vertex.y = radius * Math.sin(segment);\n    this.vertices.push(vertex);\n    uvs.push(new THREE.Vector2((vertex.x / radius + 1) / 2, (vertex.y / radius + 1) / 2));\n  }\n\n  var n = new THREE.Vector3(0, 0, 1);\n\n  for (i = 1; i <= segments; i++) {\n    this.faces.push(new THREE.Face3(i, i + 1, 0, [n.clone(), n.clone(), n.clone()]));\n    this.faceVertexUvs[0].push([uvs[i].clone(), uvs[i + 1].clone(), centerUV.clone()]);\n  }\n\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\n\nTHREE.CircleGeometry.prototype.clone = function () {\n  var geometry = new THREE.CircleGeometry(this.parameters.radius, this.parameters.segments, this.parameters.thetaStart, this.parameters.thetaLength);\n  return geometry;\n}; // File:src/extras/geometries/CircleBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\n\n\nTHREE.CircleBufferGeometry = function (radius, segments, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'CircleBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  segments = segments !== undefined ? Math.max(3, segments) : 8;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  var vertices = segments + 2;\n  var positions = new Float32Array(vertices * 3);\n  var normals = new Float32Array(vertices * 3);\n  var uvs = new Float32Array(vertices * 2); // center data is already zero, but need to set a few extras\n\n  normals[3] = 1.0;\n  uvs[0] = 0.5;\n  uvs[1] = 0.5;\n\n  for (var s = 0, i = 3, ii = 2; s <= segments; s++, i += 3, ii += 2) {\n    var segment = thetaStart + s / segments * thetaLength;\n    positions[i] = radius * Math.cos(segment);\n    positions[i + 1] = radius * Math.sin(segment);\n    normals[i + 2] = 1; // normal z\n\n    uvs[ii] = (positions[i] / radius + 1) / 2;\n    uvs[ii + 1] = (positions[i + 1] / radius + 1) / 2;\n  }\n\n  var indices = [];\n\n  for (var i = 1; i <= segments; i++) {\n    indices.push(i);\n    indices.push(i + 1);\n    indices.push(0);\n  }\n\n  this.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n  this.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\n\nTHREE.CircleBufferGeometry.prototype.clone = function () {\n  var geometry = new THREE.CircleBufferGeometry(this.parameters.radius, this.parameters.segments, this.parameters.thetaStart, this.parameters.thetaLength);\n  geometry.copy(this);\n  return geometry;\n}; // File:src/extras/geometries/CylinderGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.CylinderGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'CylinderGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radiusTop = radiusTop !== undefined ? radiusTop : 20;\n  radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n  height = height !== undefined ? height : 100;\n  radialSegments = radialSegments || 8;\n  heightSegments = heightSegments || 1;\n  openEnded = openEnded !== undefined ? openEnded : false;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\n  var heightHalf = height / 2;\n  var x,\n      y,\n      vertices = [],\n      uvs = [];\n\n  for (y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var uvsRow = [];\n    var v = y / heightSegments;\n    var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n    for (x = 0; x <= radialSegments; x++) {\n      var u = x / radialSegments;\n      var vertex = new THREE.Vector3();\n      vertex.x = radius * Math.sin(u * thetaLength + thetaStart);\n      vertex.y = -v * height + heightHalf;\n      vertex.z = radius * Math.cos(u * thetaLength + thetaStart);\n      this.vertices.push(vertex);\n      verticesRow.push(this.vertices.length - 1);\n      uvsRow.push(new THREE.Vector2(u, 1 - v));\n    }\n\n    vertices.push(verticesRow);\n    uvs.push(uvsRow);\n  }\n\n  var tanTheta = (radiusBottom - radiusTop) / height;\n  var na, nb;\n\n  for (x = 0; x < radialSegments; x++) {\n    if (radiusTop !== 0) {\n      na = this.vertices[vertices[0][x]].clone();\n      nb = this.vertices[vertices[0][x + 1]].clone();\n    } else {\n      na = this.vertices[vertices[1][x]].clone();\n      nb = this.vertices[vertices[1][x + 1]].clone();\n    }\n\n    na.setY(Math.sqrt(na.x * na.x + na.z * na.z) * tanTheta).normalize();\n    nb.setY(Math.sqrt(nb.x * nb.x + nb.z * nb.z) * tanTheta).normalize();\n\n    for (y = 0; y < heightSegments; y++) {\n      var v1 = vertices[y][x];\n      var v2 = vertices[y + 1][x];\n      var v3 = vertices[y + 1][x + 1];\n      var v4 = vertices[y][x + 1];\n      var n1 = na.clone();\n      var n2 = na.clone();\n      var n3 = nb.clone();\n      var n4 = nb.clone();\n      var uv1 = uvs[y][x].clone();\n      var uv2 = uvs[y + 1][x].clone();\n      var uv3 = uvs[y + 1][x + 1].clone();\n      var uv4 = uvs[y][x + 1].clone();\n      this.faces.push(new THREE.Face3(v1, v2, v4, [n1, n2, n4]));\n      this.faceVertexUvs[0].push([uv1, uv2, uv4]);\n      this.faces.push(new THREE.Face3(v2, v3, v4, [n2.clone(), n3, n4.clone()]));\n      this.faceVertexUvs[0].push([uv2.clone(), uv3, uv4.clone()]);\n    }\n  } // top cap\n\n\n  if (openEnded === false && radiusTop > 0) {\n    this.vertices.push(new THREE.Vector3(0, heightHalf, 0));\n\n    for (x = 0; x < radialSegments; x++) {\n      var v1 = vertices[0][x];\n      var v2 = vertices[0][x + 1];\n      var v3 = this.vertices.length - 1;\n      var n1 = new THREE.Vector3(0, 1, 0);\n      var n2 = new THREE.Vector3(0, 1, 0);\n      var n3 = new THREE.Vector3(0, 1, 0);\n      var uv1 = uvs[0][x].clone();\n      var uv2 = uvs[0][x + 1].clone();\n      var uv3 = new THREE.Vector2(uv2.x, 0);\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n1, n2, n3], undefined, 1));\n      this.faceVertexUvs[0].push([uv1, uv2, uv3]);\n    }\n  } // bottom cap\n\n\n  if (openEnded === false && radiusBottom > 0) {\n    this.vertices.push(new THREE.Vector3(0, -heightHalf, 0));\n\n    for (x = 0; x < radialSegments; x++) {\n      var v1 = vertices[heightSegments][x + 1];\n      var v2 = vertices[heightSegments][x];\n      var v3 = this.vertices.length - 1;\n      var n1 = new THREE.Vector3(0, -1, 0);\n      var n2 = new THREE.Vector3(0, -1, 0);\n      var n3 = new THREE.Vector3(0, -1, 0);\n      var uv1 = uvs[heightSegments][x + 1].clone();\n      var uv2 = uvs[heightSegments][x].clone();\n      var uv3 = new THREE.Vector2(uv2.x, 1);\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n1, n2, n3], undefined, 2));\n      this.faceVertexUvs[0].push([uv1, uv2, uv3]);\n    }\n  }\n\n  this.computeFaceNormals();\n};\n\nTHREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\n\nTHREE.CylinderGeometry.prototype.clone = function () {\n  var geometry = new THREE.CylinderGeometry(this.parameters.radiusTop, this.parameters.radiusBottom, this.parameters.height, this.parameters.radialSegments, this.parameters.heightSegments, this.parameters.openEnded, this.parameters.thetaStart, this.parameters.thetaLength);\n  return geometry;\n}; // File:src/extras/geometries/EdgesGeometry.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\n\nTHREE.EdgesGeometry = function (geometry, thresholdAngle) {\n  THREE.BufferGeometry.call(this);\n  thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n  var thresholdDot = Math.cos(THREE.Math.degToRad(thresholdAngle));\n  var edge = [0, 0],\n      hash = {};\n\n  var sortFunction = function (a, b) {\n    return a - b;\n  };\n\n  var keys = ['a', 'b', 'c'];\n  var geometry2;\n\n  if (geometry instanceof THREE.BufferGeometry) {\n    geometry2 = new THREE.Geometry();\n    geometry2.fromBufferGeometry(geometry);\n  } else {\n    geometry2 = geometry.clone();\n  }\n\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n  var vertices = geometry2.vertices;\n  var faces = geometry2.faces;\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0; j < 3; j++) {\n      edge[0] = face[keys[j]];\n      edge[1] = face[keys[(j + 1) % 3]];\n      edge.sort(sortFunction);\n      var key = edge.toString();\n\n      if (hash[key] === undefined) {\n        hash[key] = {\n          vert1: edge[0],\n          vert2: edge[1],\n          face1: i,\n          face2: undefined\n        };\n      } else {\n        hash[key].face2 = i;\n      }\n    }\n  }\n\n  var coords = [];\n\n  for (var key in hash) {\n    var h = hash[key];\n\n    if (h.face2 === undefined || faces[h.face1].normal.dot(faces[h.face2].normal) <= thresholdDot) {\n      var vertex = vertices[h.vert1];\n      coords.push(vertex.x);\n      coords.push(vertex.y);\n      coords.push(vertex.z);\n      vertex = vertices[h.vert2];\n      coords.push(vertex.x);\n      coords.push(vertex.y);\n      coords.push(vertex.z);\n    }\n  }\n\n  this.addAttribute('position', new THREE.BufferAttribute(new Float32Array(coords), 3));\n};\n\nTHREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry; // File:src/extras/geometries/ExtrudeGeometry.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\n\nTHREE.ExtrudeGeometry = function (shapes, options) {\n  if (typeof shapes === \"undefined\") {\n    shapes = [];\n    return;\n  }\n\n  THREE.Geometry.call(this);\n  this.type = 'ExtrudeGeometry';\n  shapes = Array.isArray(shapes) ? shapes : [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals(); // can't really use automatic vertex normals\n  // as then front and back sides get smoothed too\n  // should do separate smoothing just for sides\n  //this.computeVertexNormals();\n  //console.log( \"took\", ( Date.now() - startTime ) );\n};\n\nTHREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\n\nTHREE.ExtrudeGeometry.prototype.addShapeList = function (shapes, options) {\n  var sl = shapes.length;\n\n  for (var s = 0; s < sl; s++) {\n    var shape = shapes[s];\n    this.addShape(shape, options);\n  }\n};\n\nTHREE.ExtrudeGeometry.prototype.addShape = function (shape, options) {\n  var amount = options.amount !== undefined ? options.amount : 100;\n  var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\n  var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\n  var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n  var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var steps = options.steps !== undefined ? options.steps : 1;\n  var extrudePath = options.extrudePath;\n  var extrudePts,\n      extrudeByPath = false; // Use default WorldUVGenerator if no UV generators are specified.\n\n  var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n  var splineTube, binormal, normal, position2;\n\n  if (extrudePath) {\n    extrudePts = extrudePath.getSpacedPoints(steps);\n    extrudeByPath = true;\n    bevelEnabled = false; // bevels not supported for path extrusion\n    // SETUP TNB variables\n    // Reuse TNB from TubeGeomtry for now.\n    // TODO1 - have a .isClosed in spline?\n\n    splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n    binormal = new THREE.Vector3();\n    normal = new THREE.Vector3();\n    position2 = new THREE.Vector3();\n  } // Safeguards if bevels are not enabled\n\n\n  if (!bevelEnabled) {\n    bevelSegments = 0;\n    bevelThickness = 0;\n    bevelSize = 0;\n  } // Variables initialization\n\n\n  var ahole, h, hl; // looping of holes\n\n  var scope = this;\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.Shape.Utils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n\n      if (THREE.Shape.Utils.isClockWise(ahole)) {\n        holes[h] = ahole.reverse();\n      }\n    }\n\n    reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n  }\n\n  var faces = THREE.Shape.Utils.triangulateShape(vertices, holes);\n  /* Vertices */\n\n  var contour = vertices; // vertices has all points but contour has only points of circumference\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    vertices = vertices.concat(ahole);\n  }\n\n  function scalePt2(pt, vec, size) {\n    if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n    return vec.clone().multiplyScalar(size).add(pt);\n  }\n\n  var b,\n      bs,\n      t,\n      z,\n      vert,\n      vlen = vertices.length,\n      face,\n      flen = faces.length; // Find directions for point movement\n\n  function getBevelVec(inPt, inPrev, inNext) {\n    var EPSILON = 0.0000000001; // computes for inPt the corresponding point inPt' on a new contour\n    //   shifted by 1 unit (length of normalized vector) to the left\n    // if we walk along contour clockwise, this new contour is outside the old one\n    //\n    // inPt' is the intersection of the two lines parallel to the two\n    //  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n    var v_trans_x,\n        v_trans_y,\n        shrink_by = 1; // resulting translation vector for inPt\n    // good reading for geometry algorithms (here: line-line intersection)\n    // http://geomalgorithms.com/a05-_intersect-1.html\n\n    var v_prev_x = inPt.x - inPrev.x,\n        v_prev_y = inPt.y - inPrev.y;\n    var v_next_x = inNext.x - inPt.x,\n        v_next_y = inNext.y - inPt.y;\n    var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n    var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n    if (Math.abs(collinear0) > EPSILON) {\n      // not collinear\n      // length of vectors for normalizing\n      var v_prev_len = Math.sqrt(v_prev_lensq);\n      var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n      var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n      var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n      var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n      var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n      var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n      v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n      v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n      //  but prevent crazy spikes\n\n      var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n      if (v_trans_lensq <= 2) {\n        return new THREE.Vector2(v_trans_x, v_trans_y);\n      } else {\n        shrink_by = Math.sqrt(v_trans_lensq / 2);\n      }\n    } else {\n      // handle special case of collinear edges\n      var direction_eq = false; // assumes: opposite\n\n      if (v_prev_x > EPSILON) {\n        if (v_next_x > EPSILON) {\n          direction_eq = true;\n        }\n      } else {\n        if (v_prev_x < -EPSILON) {\n          if (v_next_x < -EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n            direction_eq = true;\n          }\n        }\n      }\n\n      if (direction_eq) {\n        // console.log(\"Warning: lines are a straight sequence\");\n        v_trans_x = -v_prev_y;\n        v_trans_y = v_prev_x;\n        shrink_by = Math.sqrt(v_prev_lensq);\n      } else {\n        // console.log(\"Warning: lines are a straight spike\");\n        v_trans_x = v_prev_x;\n        v_trans_y = v_prev_y;\n        shrink_by = Math.sqrt(v_prev_lensq / 2);\n      }\n    }\n\n    return new THREE.Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n  }\n\n  var contourMovements = [];\n\n  for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n    if (j === il) j = 0;\n    if (k === il) k = 0; //  (j)---(i)---(k)\n    // console.log('i,j,k', i, j , k)\n\n    contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n  }\n\n  var holesMovements = [],\n      oneHoleMovements,\n      verticesMovements = contourMovements.concat();\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    oneHoleMovements = [];\n\n    for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n\n      oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n    }\n\n    holesMovements.push(oneHoleMovements);\n    verticesMovements = verticesMovements.concat(oneHoleMovements);\n  } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n  for (b = 0; b < bevelSegments; b++) {\n    //for ( b = bevelSegments; b > 0; b -- ) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //z = bevelThickness * t;\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // curved\n    //bs = bevelSize * t; // linear\n    // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, -z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      }\n    }\n  }\n\n  bs = bevelSize; // Back facing vertices\n\n  for (i = 0; i < vlen; i++) {\n    vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n    if (!extrudeByPath) {\n      v(vert.x, vert.y, 0);\n    } else {\n      // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n      normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n      binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n      position2.copy(extrudePts[0]).add(normal).add(binormal);\n      v(position2.x, position2.y, position2.z);\n    }\n  } // Add stepped vertices...\n  // Including front facing vertices\n\n\n  var s;\n\n  for (s = 1; s <= steps; s++) {\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, amount / steps * s);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n        normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[s]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    }\n  } // Add bevel segments planes\n  //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n  for (b = bevelSegments - 1; b >= 0; b--) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, amount + z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, amount + z);\n        } else {\n          v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n        }\n      }\n    }\n  }\n  /* Faces */\n  // Top and bottom faces\n\n\n  buildLidFaces(); // Sides faces\n\n  buildSideFaces(); /////  Internal functions\n\n  function buildLidFaces() {\n    if (bevelEnabled) {\n      var layer = 0; // steps + 1\n\n      var offset = vlen * layer; // Bottom faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2] + offset, face[1] + offset, face[0] + offset);\n      }\n\n      layer = steps + bevelSegments * 2;\n      offset = vlen * layer; // Top faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + offset, face[1] + offset, face[2] + offset);\n      }\n    } else {\n      // Bottom faces\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2], face[1], face[0]);\n      } // Top faces\n\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n      }\n    }\n  } // Create faces for the z-sides of the shape\n\n\n  function buildSideFaces() {\n    var layeroffset = 0;\n    sidewalls(contour, layeroffset);\n    layeroffset += contour.length;\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      sidewalls(ahole, layeroffset); //, true\n\n      layeroffset += ahole.length;\n    }\n  }\n\n  function sidewalls(contour, layeroffset) {\n    var j, k;\n    i = contour.length;\n\n    while (--i >= 0) {\n      j = i;\n      k = i - 1;\n      if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n      var s = 0,\n          sl = steps + bevelSegments * 2;\n\n      for (s = 0; s < sl; s++) {\n        var slen1 = vlen * s;\n        var slen2 = vlen * (s + 1);\n        var a = layeroffset + j + slen1,\n            b = layeroffset + k + slen1,\n            c = layeroffset + k + slen2,\n            d = layeroffset + j + slen2;\n        f4(a, b, c, d, contour, s, sl, j, k);\n      }\n    }\n  }\n\n  function v(x, y, z) {\n    scope.vertices.push(new THREE.Vector3(x, y, z));\n  }\n\n  function f3(a, b, c) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    scope.faces.push(new THREE.Face3(a, b, c));\n    var uvs = uvgen.generateTopUV(scope, a, b, c);\n    scope.faceVertexUvs[0].push(uvs);\n  }\n\n  function f4(a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    d += shapesOffset;\n    scope.faces.push(new THREE.Face3(a, b, d));\n    scope.faces.push(new THREE.Face3(b, c, d));\n    var uvs = uvgen.generateSideWallUV(scope, a, b, c, d);\n    scope.faceVertexUvs[0].push([uvs[0], uvs[1], uvs[3]]);\n    scope.faceVertexUvs[0].push([uvs[1], uvs[2], uvs[3]]);\n  }\n};\n\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n  generateTopUV: function (geometry, indexA, indexB, indexC) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    return [new THREE.Vector2(a.x, a.y), new THREE.Vector2(b.x, b.y), new THREE.Vector2(c.x, c.y)];\n  },\n  generateSideWallUV: function (geometry, indexA, indexB, indexC, indexD) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    var d = vertices[indexD];\n\n    if (Math.abs(a.y - b.y) < 0.01) {\n      return [new THREE.Vector2(a.x, 1 - a.z), new THREE.Vector2(b.x, 1 - b.z), new THREE.Vector2(c.x, 1 - c.z), new THREE.Vector2(d.x, 1 - d.z)];\n    } else {\n      return [new THREE.Vector2(a.y, 1 - a.z), new THREE.Vector2(b.y, 1 - b.z), new THREE.Vector2(c.y, 1 - c.z), new THREE.Vector2(d.y, 1 - d.z)];\n    }\n  }\n}; // File:src/extras/geometries/ShapeGeometry.js\n\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\n\nTHREE.ShapeGeometry = function (shapes, options) {\n  THREE.Geometry.call(this);\n  this.type = 'ShapeGeometry';\n  if (Array.isArray(shapes) === false) shapes = [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals();\n};\n\nTHREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\n\nTHREE.ShapeGeometry.prototype.addShapeList = function (shapes, options) {\n  for (var i = 0, l = shapes.length; i < l; i++) {\n    this.addShape(shapes[i], options);\n  }\n\n  return this;\n};\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\n\n\nTHREE.ShapeGeometry.prototype.addShape = function (shape, options) {\n  if (options === undefined) options = {};\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var material = options.material;\n  var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator; //\n\n  var i, l, hole;\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.Shape.Utils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n    for (i = 0, l = holes.length; i < l; i++) {\n      hole = holes[i];\n\n      if (THREE.Shape.Utils.isClockWise(hole)) {\n        holes[i] = hole.reverse();\n      }\n    }\n\n    reverse = false;\n  }\n\n  var faces = THREE.Shape.Utils.triangulateShape(vertices, holes); // Vertices\n\n  for (i = 0, l = holes.length; i < l; i++) {\n    hole = holes[i];\n    vertices = vertices.concat(hole);\n  } //\n\n\n  var vert,\n      vlen = vertices.length;\n  var face,\n      flen = faces.length;\n\n  for (i = 0; i < vlen; i++) {\n    vert = vertices[i];\n    this.vertices.push(new THREE.Vector3(vert.x, vert.y, 0));\n  }\n\n  for (i = 0; i < flen; i++) {\n    face = faces[i];\n    var a = face[0] + shapesOffset;\n    var b = face[1] + shapesOffset;\n    var c = face[2] + shapesOffset;\n    this.faces.push(new THREE.Face3(a, b, c, null, null, material));\n    this.faceVertexUvs[0].push(uvgen.generateTopUV(this, a, b, c));\n  }\n}; // File:src/extras/geometries/LatheGeometry.js\n\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\n// points - to create a closed torus, one must use a set of points \n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2*PI) range of the lathed section\n//    2*pi is a closed lathe, less than 2PI is a portion.\n\n\nTHREE.LatheGeometry = function (points, segments, phiStart, phiLength) {\n  THREE.Geometry.call(this);\n  this.type = 'LatheGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  segments = segments || 12;\n  phiStart = phiStart || 0;\n  phiLength = phiLength || 2 * Math.PI;\n  var inversePointLength = 1.0 / (points.length - 1);\n  var inverseSegments = 1.0 / segments;\n\n  for (var i = 0, il = segments; i <= il; i++) {\n    var phi = phiStart + i * inverseSegments * phiLength;\n    var c = Math.cos(phi),\n        s = Math.sin(phi);\n\n    for (var j = 0, jl = points.length; j < jl; j++) {\n      var pt = points[j];\n      var vertex = new THREE.Vector3();\n      vertex.x = c * pt.x - s * pt.y;\n      vertex.y = s * pt.x + c * pt.y;\n      vertex.z = pt.z;\n      this.vertices.push(vertex);\n    }\n  }\n\n  var np = points.length;\n\n  for (var i = 0, il = segments; i < il; i++) {\n    for (var j = 0, jl = points.length - 1; j < jl; j++) {\n      var base = j + np * i;\n      var a = base;\n      var b = base + np;\n      var c = base + 1 + np;\n      var d = base + 1;\n      var u0 = i * inverseSegments;\n      var v0 = j * inversePointLength;\n      var u1 = u0 + inverseSegments;\n      var v1 = v0 + inversePointLength;\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([new THREE.Vector2(u0, v0), new THREE.Vector2(u1, v0), new THREE.Vector2(u0, v1)]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([new THREE.Vector2(u1, v0), new THREE.Vector2(u1, v1), new THREE.Vector2(u0, v1)]);\n    }\n  }\n\n  this.mergeVertices();\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry; // File:src/extras/geometries/PlaneGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\n\nTHREE.PlaneGeometry = function (width, height, widthSegments, heightSegments) {\n  THREE.Geometry.call(this);\n  this.type = 'PlaneGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  this.fromBufferGeometry(new THREE.PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n};\n\nTHREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\n\nTHREE.PlaneGeometry.prototype.clone = function () {\n  var geometry = new THREE.PlaneGeometry(this.parameters.width, this.parameters.height, this.parameters.widthSegments, this.parameters.heightSegments);\n  return geometry;\n}; // File:src/extras/geometries/PlaneBufferGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\n\n\nTHREE.PlaneBufferGeometry = function (width, height, widthSegments, heightSegments) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'PlaneBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var gridX = Math.floor(widthSegments) || 1;\n  var gridY = Math.floor(heightSegments) || 1;\n  var gridX1 = gridX + 1;\n  var gridY1 = gridY + 1;\n  var segment_width = width / gridX;\n  var segment_height = height / gridY;\n  var vertices = new Float32Array(gridX1 * gridY1 * 3);\n  var normals = new Float32Array(gridX1 * gridY1 * 3);\n  var uvs = new Float32Array(gridX1 * gridY1 * 2);\n  var offset = 0;\n  var offset2 = 0;\n\n  for (var iy = 0; iy < gridY1; iy++) {\n    var y = iy * segment_height - height_half;\n\n    for (var ix = 0; ix < gridX1; ix++) {\n      var x = ix * segment_width - width_half;\n      vertices[offset] = x;\n      vertices[offset + 1] = -y;\n      normals[offset + 2] = 1;\n      uvs[offset2] = ix / gridX;\n      uvs[offset2 + 1] = 1 - iy / gridY;\n      offset += 3;\n      offset2 += 2;\n    }\n  }\n\n  offset = 0;\n  var indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n\n  for (var iy = 0; iy < gridY; iy++) {\n    for (var ix = 0; ix < gridX; ix++) {\n      var a = ix + gridX1 * iy;\n      var b = ix + gridX1 * (iy + 1);\n      var c = ix + 1 + gridX1 * (iy + 1);\n      var d = ix + 1 + gridX1 * iy;\n      indices[offset] = a;\n      indices[offset + 1] = b;\n      indices[offset + 2] = d;\n      indices[offset + 3] = b;\n      indices[offset + 4] = c;\n      indices[offset + 5] = d;\n      offset += 6;\n    }\n  }\n\n  this.setIndex(new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n};\n\nTHREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\n\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\n  var geometry = new THREE.PlaneBufferGeometry(this.parameters.width, this.parameters.height, this.parameters.widthSegments, this.parameters.heightSegments);\n  geometry.copy(this);\n  return geometry;\n}; // File:src/extras/geometries/RingGeometry.js\n\n/**\r\n * @author Kaleb Murphy\r\n */\n\n\nTHREE.RingGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'RingGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  innerRadius = innerRadius || 0;\n  outerRadius = outerRadius || 50;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n  phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 8;\n  var i,\n      o,\n      uvs = [],\n      radius = innerRadius,\n      radiusStep = (outerRadius - innerRadius) / phiSegments;\n\n  for (i = 0; i < phiSegments + 1; i++) {\n    // concentric circles inside ring\n    for (o = 0; o < thetaSegments + 1; o++) {\n      // number of segments per circle\n      var vertex = new THREE.Vector3();\n      var segment = thetaStart + o / thetaSegments * thetaLength;\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      this.vertices.push(vertex);\n      uvs.push(new THREE.Vector2((vertex.x / outerRadius + 1) / 2, (vertex.y / outerRadius + 1) / 2));\n    }\n\n    radius += radiusStep;\n  }\n\n  var n = new THREE.Vector3(0, 0, 1);\n\n  for (i = 0; i < phiSegments; i++) {\n    // concentric circles inside ring\n    var thetaSegment = i * (thetaSegments + 1);\n\n    for (o = 0; o < thetaSegments; o++) {\n      // number of segments per circle\n      var segment = o + thetaSegment;\n      var v1 = segment;\n      var v2 = segment + thetaSegments + 1;\n      var v3 = segment + thetaSegments + 2;\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n.clone(), n.clone(), n.clone()]));\n      this.faceVertexUvs[0].push([uvs[v1].clone(), uvs[v2].clone(), uvs[v3].clone()]);\n      v1 = segment;\n      v2 = segment + thetaSegments + 2;\n      v3 = segment + 1;\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n.clone(), n.clone(), n.clone()]));\n      this.faceVertexUvs[0].push([uvs[v1].clone(), uvs[v2].clone(), uvs[v3].clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\n\nTHREE.RingGeometry.prototype.clone = function () {\n  var geometry = new THREE.RingGeometry(this.parameters.innerRadius, this.parameters.outerRadius, this.parameters.thetaSegments, this.parameters.phiSegments, this.parameters.thetaStart, this.parameters.thetaLength);\n  return geometry;\n}; // File:src/extras/geometries/SphereGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.SphereGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new THREE.SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n};\n\nTHREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\n\nTHREE.SphereGeometry.prototype.clone = function () {\n  var geometry = new THREE.SphereGeometry(this.parameters.radius, this.parameters.widthSegments, this.parameters.heightSegments, this.parameters.phiStart, this.parameters.phiLength, this.parameters.thetaStart, this.parameters.thetaLength);\n  return geometry;\n}; // File:src/extras/geometries/SphereBufferGeometry.js\n\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\n\n\nTHREE.SphereBufferGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'SphereBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var thetaEnd = thetaStart + thetaLength;\n  var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n  var positions = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\n  var uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2);\n  var index = 0,\n      vertices = [],\n      normal = new THREE.Vector3();\n\n  for (var y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var v = y / heightSegments;\n\n    for (var x = 0; x <= widthSegments; x++) {\n      var u = x / widthSegments;\n      var px = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      var py = radius * Math.cos(thetaStart + v * thetaLength);\n      var pz = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      normal.set(px, py, pz).normalize();\n      positions.setXYZ(index, px, py, pz);\n      normals.setXYZ(index, normal.x, normal.y, normal.z);\n      uvs.setXY(index, u, 1 - v);\n      verticesRow.push(index);\n      index++;\n    }\n\n    vertices.push(verticesRow);\n  }\n\n  var indices = [];\n\n  for (var y = 0; y < heightSegments; y++) {\n    for (var x = 0; x < widthSegments; x++) {\n      var v1 = vertices[y][x + 1];\n      var v2 = vertices[y][x];\n      var v3 = vertices[y + 1][x];\n      var v4 = vertices[y + 1][x + 1];\n      if (y !== 0 || thetaStart > 0) indices.push(v1, v2, v4);\n      if (y !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(v2, v3, v4);\n    }\n  }\n\n  this.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n  this.addAttribute('position', positions);\n  this.addAttribute('normal', normals);\n  this.addAttribute('uv', uvs);\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\n\nTHREE.SphereBufferGeometry.prototype.clone = function () {\n  var geometry = new THREE.SphereBufferGeometry(this.parameters.radius, this.parameters.widthSegments, this.parameters.heightSegments, this.parameters.phiStart, this.parameters.phiLength, this.parameters.thetaStart, this.parameters.thetaLength);\n  geometry.copy(this);\n  return geometry;\n}; // File:src/extras/geometries/TextGeometry.js\n\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\n\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\n\n\nTHREE.TextGeometry = function (text, parameters) {\n  parameters = parameters || {};\n  var textShapes = THREE.FontUtils.generateShapes(text, parameters); // translate parameters to ExtrudeGeometry API\n\n  parameters.amount = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n  if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n  if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n  if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n  THREE.ExtrudeGeometry.call(this, textShapes, parameters);\n  this.type = 'TextGeometry';\n};\n\nTHREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype);\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry; // File:src/extras/geometries/TorusGeometry.js\n\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\n\nTHREE.TorusGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = radialSegments || 8;\n  tubularSegments = tubularSegments || 6;\n  arc = arc || Math.PI * 2;\n  var center = new THREE.Vector3(),\n      uvs = [],\n      normals = [];\n\n  for (var j = 0; j <= radialSegments; j++) {\n    for (var i = 0; i <= tubularSegments; i++) {\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2;\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u);\n      var vertex = new THREE.Vector3();\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      this.vertices.push(vertex);\n      uvs.push(new THREE.Vector2(i / tubularSegments, j / radialSegments));\n      normals.push(vertex.clone().sub(center).normalize());\n    }\n  }\n\n  for (var j = 1; j <= radialSegments; j++) {\n    for (var i = 1; i <= tubularSegments; i++) {\n      var a = (tubularSegments + 1) * j + i - 1;\n      var b = (tubularSegments + 1) * (j - 1) + i - 1;\n      var c = (tubularSegments + 1) * (j - 1) + i;\n      var d = (tubularSegments + 1) * j + i;\n      var face = new THREE.Face3(a, b, d, [normals[a].clone(), normals[b].clone(), normals[d].clone()]);\n      this.faces.push(face);\n      this.faceVertexUvs[0].push([uvs[a].clone(), uvs[b].clone(), uvs[d].clone()]);\n      face = new THREE.Face3(b, c, d, [normals[b].clone(), normals[c].clone(), normals[d].clone()]);\n      this.faces.push(face);\n      this.faceVertexUvs[0].push([uvs[b].clone(), uvs[c].clone(), uvs[d].clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n};\n\nTHREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\n\nTHREE.TorusGeometry.prototype.clone = function () {\n  var geometry = new THREE.TorusGeometry(this.parameters.radius, this.parameters.tube, this.parameters.radialSegments, this.parameters.tubularSegments, this.parameters.arc);\n  return geometry;\n}; // File:src/extras/geometries/TorusKnotGeometry.js\n\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\n\n\nTHREE.TorusKnotGeometry = function (radius, tube, radialSegments, tubularSegments, p, q, heightScale) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusKnotGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    p: p,\n    q: q,\n    heightScale: heightScale\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = radialSegments || 64;\n  tubularSegments = tubularSegments || 8;\n  p = p || 2;\n  q = q || 3;\n  heightScale = heightScale || 1;\n  var grid = new Array(radialSegments);\n  var tang = new THREE.Vector3();\n  var n = new THREE.Vector3();\n  var bitan = new THREE.Vector3();\n\n  for (var i = 0; i < radialSegments; ++i) {\n    grid[i] = new Array(tubularSegments);\n    var u = i / radialSegments * 2 * p * Math.PI;\n    var p1 = getPos(u, q, p, radius, heightScale);\n    var p2 = getPos(u + 0.01, q, p, radius, heightScale);\n    tang.subVectors(p2, p1);\n    n.addVectors(p2, p1);\n    bitan.crossVectors(tang, n);\n    n.crossVectors(bitan, tang);\n    bitan.normalize();\n    n.normalize();\n\n    for (var j = 0; j < tubularSegments; ++j) {\n      var v = j / tubularSegments * 2 * Math.PI;\n      var cx = -tube * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n      var cy = tube * Math.sin(v);\n      var pos = new THREE.Vector3();\n      pos.x = p1.x + cx * n.x + cy * bitan.x;\n      pos.y = p1.y + cx * n.y + cy * bitan.y;\n      pos.z = p1.z + cx * n.z + cy * bitan.z;\n      grid[i][j] = this.vertices.push(pos) - 1;\n    }\n  }\n\n  for (var i = 0; i < radialSegments; ++i) {\n    for (var j = 0; j < tubularSegments; ++j) {\n      var ip = (i + 1) % radialSegments;\n      var jp = (j + 1) % tubularSegments;\n      var a = grid[i][j];\n      var b = grid[ip][j];\n      var c = grid[ip][jp];\n      var d = grid[i][jp];\n      var uva = new THREE.Vector2(i / radialSegments, j / tubularSegments);\n      var uvb = new THREE.Vector2((i + 1) / radialSegments, j / tubularSegments);\n      var uvc = new THREE.Vector2((i + 1) / radialSegments, (j + 1) / tubularSegments);\n      var uvd = new THREE.Vector2(i / radialSegments, (j + 1) / tubularSegments);\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([uva, uvb, uvd]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n\n  function getPos(u, in_q, in_p, radius, heightScale) {\n    var cu = Math.cos(u);\n    var su = Math.sin(u);\n    var quOverP = in_q / in_p * u;\n    var cs = Math.cos(quOverP);\n    var tx = radius * (2 + cs) * 0.5 * cu;\n    var ty = radius * (2 + cs) * su * 0.5;\n    var tz = heightScale * radius * Math.sin(quOverP) * 0.5;\n    return new THREE.Vector3(tx, ty, tz);\n  }\n};\n\nTHREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\n\nTHREE.TorusKnotGeometry.prototype.clone = function () {\n  var geometry = new THREE.TorusKnotGeometry(this.parameters.radius, this.parameters.tube, this.parameters.radialSegments, this.parameters.tubularSegments, this.parameters.p, this.parameters.q, this.parameters.heightScale);\n  return geometry;\n}; // File:src/extras/geometries/TubeGeometry.js\n\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\n\n\nTHREE.TubeGeometry = function (path, segments, radius, radialSegments, closed, taper) {\n  THREE.Geometry.call(this);\n  this.type = 'TubeGeometry';\n  this.parameters = {\n    path: path,\n    segments: segments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed\n  };\n  segments = segments || 64;\n  radius = radius || 1;\n  radialSegments = radialSegments || 8;\n  closed = closed || false;\n  taper = taper || THREE.TubeGeometry.NoTaper;\n  var grid = [];\n  var scope = this,\n      tangent,\n      normal,\n      binormal,\n      numpoints = segments + 1,\n      u,\n      v,\n      r,\n      cx,\n      cy,\n      pos,\n      pos2 = new THREE.Vector3(),\n      i,\n      j,\n      ip,\n      jp,\n      a,\n      b,\n      c,\n      d,\n      uva,\n      uvb,\n      uvc,\n      uvd;\n  var frames = new THREE.TubeGeometry.FrenetFrames(path, segments, closed),\n      tangents = frames.tangents,\n      normals = frames.normals,\n      binormals = frames.binormals; // proxy internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals;\n\n  function vert(x, y, z) {\n    return scope.vertices.push(new THREE.Vector3(x, y, z)) - 1;\n  } // construct the grid\n\n\n  for (i = 0; i < numpoints; i++) {\n    grid[i] = [];\n    u = i / (numpoints - 1);\n    pos = path.getPointAt(u);\n    tangent = tangents[i];\n    normal = normals[i];\n    binormal = binormals[i];\n    r = radius * taper(u);\n\n    for (j = 0; j < radialSegments; j++) {\n      v = j / radialSegments * 2 * Math.PI;\n      cx = -r * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n      cy = r * Math.sin(v);\n      pos2.copy(pos);\n      pos2.x += cx * normal.x + cy * binormal.x;\n      pos2.y += cx * normal.y + cy * binormal.y;\n      pos2.z += cx * normal.z + cy * binormal.z;\n      grid[i][j] = vert(pos2.x, pos2.y, pos2.z);\n    }\n  } // construct the mesh\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < radialSegments; j++) {\n      ip = closed ? (i + 1) % segments : i + 1;\n      jp = (j + 1) % radialSegments;\n      a = grid[i][j]; // *** NOT NECESSARILY PLANAR ! ***\n\n      b = grid[ip][j];\n      c = grid[ip][jp];\n      d = grid[i][jp];\n      uva = new THREE.Vector2(i / segments, j / radialSegments);\n      uvb = new THREE.Vector2((i + 1) / segments, j / radialSegments);\n      uvc = new THREE.Vector2((i + 1) / segments, (j + 1) / radialSegments);\n      uvd = new THREE.Vector2(i / segments, (j + 1) / radialSegments);\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([uva, uvb, uvd]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\n\nTHREE.TubeGeometry.NoTaper = function (u) {\n  return 1;\n};\n\nTHREE.TubeGeometry.SinusoidalTaper = function (u) {\n  return Math.sin(Math.PI * u);\n}; // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n\n\nTHREE.TubeGeometry.FrenetFrames = function (path, segments, closed) {\n  var normal = new THREE.Vector3(),\n      tangents = [],\n      normals = [],\n      binormals = [],\n      vec = new THREE.Vector3(),\n      mat = new THREE.Matrix4(),\n      numpoints = segments + 1,\n      theta,\n      epsilon = 0.0001,\n      smallest,\n      tx,\n      ty,\n      tz,\n      i,\n      u; // expose internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals; // compute the tangent vectors for each segment on the path\n\n  for (i = 0; i < numpoints; i++) {\n    u = i / (numpoints - 1);\n    tangents[i] = path.getTangentAt(u);\n    tangents[i].normalize();\n  }\n\n  initialNormal3();\n  /*\r\n  function initialNormal1(lastBinormal) {\r\n  \t// fixed start binormal. Has dangers of 0 vectors\r\n  \tnormals[ 0 ] = new THREE.Vector3();\r\n  \tbinormals[ 0 ] = new THREE.Vector3();\r\n  \tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n  \tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n  }\r\n  \n  function initialNormal2() {\r\n  \n  \t// This uses the Frenet-Serret formula for deriving binormal\r\n  \tvar t2 = path.getTangentAt( epsilon );\r\n  \n  \tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n  \tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n  \n  \tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n  \n  }\r\n  */\n\n  function initialNormal3() {\n    // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the smallest tangent xyz component\n    normals[0] = new THREE.Vector3();\n    binormals[0] = new THREE.Vector3();\n    smallest = Number.MAX_VALUE;\n    tx = Math.abs(tangents[0].x);\n    ty = Math.abs(tangents[0].y);\n    tz = Math.abs(tangents[0].z);\n\n    if (tx <= smallest) {\n      smallest = tx;\n      normal.set(1, 0, 0);\n    }\n\n    if (ty <= smallest) {\n      smallest = ty;\n      normal.set(0, 1, 0);\n    }\n\n    if (tz <= smallest) {\n      normal.set(0, 0, 1);\n    }\n\n    vec.crossVectors(tangents[0], normal).normalize();\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]);\n  } // compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\n  for (i = 1; i < numpoints; i++) {\n    normals[i] = normals[i - 1].clone();\n    binormals[i] = binormals[i - 1].clone();\n    vec.crossVectors(tangents[i - 1], tangents[i]);\n\n    if (vec.length() > epsilon) {\n      vec.normalize();\n      theta = Math.acos(THREE.Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n      normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n    }\n\n    binormals[i].crossVectors(tangents[i], normals[i]);\n  } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n  if (closed) {\n    theta = Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints - 1]), -1, 1));\n    theta /= numpoints - 1;\n\n    if (tangents[0].dot(vec.crossVectors(normals[0], normals[numpoints - 1])) > 0) {\n      theta = -theta;\n    }\n\n    for (i = 1; i < numpoints; i++) {\n      // twist a little...\n      normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    }\n  }\n}; // File:src/extras/geometries/PolyhedronGeometry.js\n\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.PolyhedronGeometry = function (vertices, indices, radius, detail) {\n  THREE.Geometry.call(this);\n  this.type = 'PolyhedronGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  radius = radius || 1;\n  detail = detail || 0;\n  var that = this;\n\n  for (var i = 0, l = vertices.length; i < l; i += 3) {\n    prepare(new THREE.Vector3(vertices[i], vertices[i + 1], vertices[i + 2]));\n  }\n\n  var p = this.vertices;\n  var faces = [];\n\n  for (var i = 0, j = 0, l = indices.length; i < l; i += 3, j++) {\n    var v1 = p[indices[i]];\n    var v2 = p[indices[i + 1]];\n    var v3 = p[indices[i + 2]];\n    faces[j] = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()], undefined, j);\n  }\n\n  var centroid = new THREE.Vector3();\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    subdivide(faces[i], detail);\n  } // Handle case when face straddles the seam\n\n\n  for (var i = 0, l = this.faceVertexUvs[0].length; i < l; i++) {\n    var uvs = this.faceVertexUvs[0][i];\n    var x0 = uvs[0].x;\n    var x1 = uvs[1].x;\n    var x2 = uvs[2].x;\n    var max = Math.max(x0, Math.max(x1, x2));\n    var min = Math.min(x0, Math.min(x1, x2));\n\n    if (max > 0.9 && min < 0.1) {\n      // 0.9 is somewhat arbitrary\n      if (x0 < 0.2) uvs[0].x += 1;\n      if (x1 < 0.2) uvs[1].x += 1;\n      if (x2 < 0.2) uvs[2].x += 1;\n    }\n  } // Apply radius\n\n\n  for (var i = 0, l = this.vertices.length; i < l; i++) {\n    this.vertices[i].multiplyScalar(radius);\n  } // Merge vertices\n\n\n  this.mergeVertices();\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius); // Project vector onto sphere's surface\n\n  function prepare(vector) {\n    var vertex = vector.normalize().clone();\n    vertex.index = that.vertices.push(vertex) - 1; // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n    var u = azimuth(vector) / 2 / Math.PI + 0.5;\n    var v = inclination(vector) / Math.PI + 0.5;\n    vertex.uv = new THREE.Vector2(u, 1 - v);\n    return vertex;\n  } // Approximate a curved face with recursively sub-divided triangles.\n\n\n  function make(v1, v2, v3, materialIndex) {\n    var face = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()], undefined, materialIndex);\n    that.faces.push(face);\n    centroid.copy(v1).add(v2).add(v3).divideScalar(3);\n    var azi = azimuth(centroid);\n    that.faceVertexUvs[0].push([correctUV(v1.uv, v1, azi), correctUV(v2.uv, v2, azi), correctUV(v3.uv, v3, azi)]);\n  } // Analytically subdivide a face to the required detail level.\n\n\n  function subdivide(face, detail) {\n    var cols = Math.pow(2, detail);\n    var a = prepare(that.vertices[face.a]);\n    var b = prepare(that.vertices[face.b]);\n    var c = prepare(that.vertices[face.c]);\n    var v = [];\n    var materialIndex = face.materialIndex; // Construct all of the vertices for this subdivision.\n\n    for (var i = 0; i <= cols; i++) {\n      v[i] = [];\n      var aj = prepare(a.clone().lerp(c, i / cols));\n      var bj = prepare(b.clone().lerp(c, i / cols));\n      var rows = cols - i;\n\n      for (var j = 0; j <= rows; j++) {\n        if (j === 0 && i === cols) {\n          v[i][j] = aj;\n        } else {\n          v[i][j] = prepare(aj.clone().lerp(bj, j / rows));\n        }\n      }\n    } // Construct all of the faces.\n\n\n    for (var i = 0; i < cols; i++) {\n      for (var j = 0; j < 2 * (cols - i) - 1; j++) {\n        var k = Math.floor(j / 2);\n\n        if (j % 2 === 0) {\n          make(v[i][k + 1], v[i + 1][k], v[i][k], materialIndex);\n        } else {\n          make(v[i][k + 1], v[i + 1][k + 1], v[i + 1][k], materialIndex);\n        }\n      }\n    }\n  } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n  function azimuth(vector) {\n    return Math.atan2(vector.z, -vector.x);\n  } // Angle above the XZ plane.\n\n\n  function inclination(vector) {\n    return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n  } // Texture fixing helper. Spheres have some odd behaviours.\n\n\n  function correctUV(uv, vector, azimuth) {\n    if (azimuth < 0 && uv.x === 1) uv = new THREE.Vector2(uv.x - 1, uv.y);\n    if (vector.x === 0 && vector.z === 0) uv = new THREE.Vector2(azimuth / 2 / Math.PI + 0.5, uv.y);\n    return uv.clone();\n  }\n};\n\nTHREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\n\nTHREE.PolyhedronGeometry.prototype.clone = function () {\n  var geometry = new THREE.PolyhedronGeometry(this.parameters.vertices, this.parameters.indices, this.parameters.radius, this.parameters.detail);\n  return geometry.copy(this);\n};\n\nTHREE.PolyhedronGeometry.prototype.copy = function (source) {\n  THREE.Geometry.prototype.copy.call(this, source);\n  return this;\n}; // File:src/extras/geometries/DodecahedronGeometry.js\n\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\n\n\nTHREE.DodecahedronGeometry = function (radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var r = 1 / t;\n  var vertices = [// (±1, ±1, ±1)\n  -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n  0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n  -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n  -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n  var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'DodecahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\n\nTHREE.DodecahedronGeometry.prototype.clone = function () {\n  var geometry = new THREE.DodecahedronGeometry(this.parameters.radius, this.parameters.detail);\n  geometry.copy(this);\n  return geometry;\n}; // File:src/extras/geometries/IcosahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\n\nTHREE.IcosahedronGeometry = function (radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n  var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'IcosahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\n\nTHREE.IcosahedronGeometry.prototype.clone = function () {\n  var geometry = new THREE.IcosahedronGeometry(this.parameters.radius, this.parameters.detail);\n  geometry.copy(this);\n  return geometry;\n}; // File:src/extras/geometries/OctahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\n\nTHREE.OctahedronGeometry = function (radius, detail) {\n  var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n  var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'OctahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\n\nTHREE.OctahedronGeometry.prototype.clone = function () {\n  var geometry = new THREE.OctahedronGeometry(this.parameters.radius, this.parameters.detail);\n  geometry.copy(this);\n  return geometry;\n}; // File:src/extras/geometries/TetrahedronGeometry.js\n\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\n\n\nTHREE.TetrahedronGeometry = function (radius, detail) {\n  var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n  var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'TetrahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\n\nTHREE.TetrahedronGeometry.prototype.clone = function () {\n  var geometry = new THREE.TetrahedronGeometry(this.parameters.radius, this.parameters.detail);\n  geometry.copy(this);\n  return geometry;\n}; // File:src/extras/geometries/ParametricGeometry.js\n\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\n\n\nTHREE.ParametricGeometry = function (func, slices, stacks) {\n  THREE.Geometry.call(this);\n  this.type = 'ParametricGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  };\n  var verts = this.vertices;\n  var faces = this.faces;\n  var uvs = this.faceVertexUvs[0];\n  var i, j, p;\n  var u, v;\n  var sliceCount = slices + 1;\n\n  for (i = 0; i <= stacks; i++) {\n    v = i / stacks;\n\n    for (j = 0; j <= slices; j++) {\n      u = j / slices;\n      p = func(u, v);\n      verts.push(p);\n    }\n  }\n\n  var a, b, c, d;\n  var uva, uvb, uvc, uvd;\n\n  for (i = 0; i < stacks; i++) {\n    for (j = 0; j < slices; j++) {\n      a = i * sliceCount + j;\n      b = i * sliceCount + j + 1;\n      c = (i + 1) * sliceCount + j + 1;\n      d = (i + 1) * sliceCount + j;\n      uva = new THREE.Vector2(j / slices, i / stacks);\n      uvb = new THREE.Vector2((j + 1) / slices, i / stacks);\n      uvc = new THREE.Vector2((j + 1) / slices, (i + 1) / stacks);\n      uvd = new THREE.Vector2(j / slices, (i + 1) / stacks);\n      faces.push(new THREE.Face3(a, b, d));\n      uvs.push([uva, uvb, uvd]);\n      faces.push(new THREE.Face3(b, c, d));\n      uvs.push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  } // console.log(this);\n  // magic bullet\n  // var diff = this.mergeVertices();\n  // console.log('removed ', diff, ' vertices by merging');\n\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry; // File:src/extras/geometries/WireframeGeometry.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.WireframeGeometry = function (geometry) {\n  THREE.BufferGeometry.call(this);\n  var edge = [0, 0],\n      hash = {};\n\n  var sortFunction = function (a, b) {\n    return a - b;\n  };\n\n  var keys = ['a', 'b', 'c'];\n\n  if (geometry instanceof THREE.Geometry) {\n    var vertices = geometry.vertices;\n    var faces = geometry.faces;\n    var numEdges = 0; // allocate maximal size\n\n    var edges = new Uint32Array(6 * faces.length);\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge[0] = face[keys[j]];\n        edge[1] = face[keys[(j + 1) % 3]];\n        edge.sort(sortFunction);\n        var key = edge.toString();\n\n        if (hash[key] === undefined) {\n          edges[2 * numEdges] = edge[0];\n          edges[2 * numEdges + 1] = edge[1];\n          hash[key] = true;\n          numEdges++;\n        }\n      }\n    }\n\n    var coords = new Float32Array(numEdges * 2 * 3);\n\n    for (var i = 0, l = numEdges; i < l; i++) {\n      for (var j = 0; j < 2; j++) {\n        var vertex = vertices[edges[2 * i + j]];\n        var index = 6 * i + 3 * j;\n        coords[index + 0] = vertex.x;\n        coords[index + 1] = vertex.y;\n        coords[index + 2] = vertex.z;\n      }\n    }\n\n    this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n  } else if (geometry instanceof THREE.BufferGeometry) {\n    if (geometry.index !== null) {\n      // Indexed BufferGeometry\n      var indices = geometry.index.array;\n      var vertices = geometry.attributes.position;\n      var drawcalls = geometry.drawcalls;\n      var numEdges = 0;\n\n      if (drawcalls.length === 0) {\n        geometry.addDrawCall(0, indices.length);\n      } // allocate maximal size\n\n\n      var edges = new Uint32Array(2 * indices.length);\n\n      for (var o = 0, ol = drawcalls.length; o < ol; ++o) {\n        var drawcall = drawcalls[o];\n        var start = drawcall.start;\n        var count = drawcall.count;\n\n        for (var i = start, il = start + count; i < il; i += 3) {\n          for (var j = 0; j < 3; j++) {\n            edge[0] = indices[i + j];\n            edge[1] = indices[i + (j + 1) % 3];\n            edge.sort(sortFunction);\n            var key = edge.toString();\n\n            if (hash[key] === undefined) {\n              edges[2 * numEdges] = edge[0];\n              edges[2 * numEdges + 1] = edge[1];\n              hash[key] = true;\n              numEdges++;\n            }\n          }\n        }\n      }\n\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numEdges; i < l; i++) {\n        for (var j = 0; j < 2; j++) {\n          var index = 6 * i + 3 * j;\n          var index2 = edges[2 * i + j];\n          coords[index + 0] = vertices.getX(index2);\n          coords[index + 1] = vertices.getY(index2);\n          coords[index + 2] = vertices.getZ(index2);\n        }\n      }\n\n      this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    } else {\n      // non-indexed BufferGeometry\n      var vertices = geometry.attributes.position.array;\n      var numEdges = vertices.length / 3;\n      var numTris = numEdges / 3;\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numTris; i < l; i++) {\n        for (var j = 0; j < 3; j++) {\n          var index = 18 * i + 6 * j;\n          var index1 = 9 * i + 3 * j;\n          coords[index + 0] = vertices[index1];\n          coords[index + 1] = vertices[index1 + 1];\n          coords[index + 2] = vertices[index1 + 2];\n          var index2 = 9 * i + 3 * ((j + 1) % 3);\n          coords[index + 3] = vertices[index2];\n          coords[index + 4] = vertices[index2 + 1];\n          coords[index + 5] = vertices[index2 + 2];\n        }\n      }\n\n      this.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    }\n  }\n};\n\nTHREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry; // File:src/extras/helpers/AxisHelper.js\n\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\nTHREE.AxisHelper = function (size) {\n  size = size || 1;\n  var vertices = new Float32Array([0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size]);\n  var colors = new Float32Array([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  THREE.LineSegments.call(this, geometry, material);\n};\n\nTHREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper; // File:src/extras/helpers/ArrowHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\n\nTHREE.ArrowHelper = function () {\n  var lineGeometry = new THREE.Geometry();\n  lineGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));\n  var coneGeometry = new THREE.CylinderGeometry(0, 0.5, 1, 5, 1);\n  coneGeometry.translate(0, -0.5, 0);\n  return function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    THREE.Object3D.call(this);\n    if (color === undefined) color = 0xffff00;\n    if (length === undefined) length = 1;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.position.copy(origin);\n\n    if (headLength < length) {\n      this.line = new THREE.Line(lineGeometry, new THREE.LineBasicMaterial({\n        color: color\n      }));\n      this.line.matrixAutoUpdate = false;\n      this.add(this.line);\n    }\n\n    this.cone = new THREE.Mesh(coneGeometry, new THREE.MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  };\n}();\n\nTHREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\n\nTHREE.ArrowHelper.prototype.setDirection = function () {\n  var axis = new THREE.Vector3();\n  var radians;\n  return function setDirection(dir) {\n    // dir is assumed to be normalized\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      axis.set(dir.z, 0, -dir.x).normalize();\n      radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(axis, radians);\n    }\n  };\n}();\n\nTHREE.ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n\n  if (headLength < length) {\n    this.line.scale.set(1, length - headLength, 1);\n    this.line.updateMatrix();\n  }\n\n  this.cone.scale.set(headWidth, headLength, headWidth);\n  this.cone.position.y = length;\n  this.cone.updateMatrix();\n};\n\nTHREE.ArrowHelper.prototype.setColor = function (color) {\n  if (this.line !== undefined) this.line.material.color.set(color);\n  this.cone.material.color.set(color);\n}; // File:src/extras/helpers/BoxHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.BoxHelper = function (object) {\n  var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n  var positions = new Float32Array(8 * 3);\n  var geometry = new THREE.BufferGeometry();\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: 0xffff00\n  }));\n\n  if (object !== undefined) {\n    this.update(object);\n  }\n};\n\nTHREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\n\nTHREE.BoxHelper.prototype.update = function () {\n  var box = new THREE.Box3();\n  return function (object) {\n    box.setFromObject(object);\n    if (box.empty()) return;\n    var min = box.min;\n    var max = box.max;\n    /*\r\n      5____4\r\n    1/___0/|\r\n    | 6__|_7\r\n    2/___3/\r\n    \t\t0: max.x, max.y, max.z\r\n    1: min.x, max.y, max.z\r\n    2: min.x, min.y, max.z\r\n    3: max.x, min.y, max.z\r\n    4: max.x, max.y, min.z\r\n    5: min.x, max.y, min.z\r\n    6: min.x, min.y, min.z\r\n    7: max.x, min.y, min.z\r\n    */\n\n    var position = this.geometry.attributes.position;\n    var array = position.array;\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n    position.needsUpdate = true;\n    this.geometry.computeBoundingSphere();\n  };\n}(); // File:src/extras/helpers/BoundingBoxHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n// a helper to show the world-axis-aligned bounding box for an object\n\n\nTHREE.BoundingBoxHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0x888888;\n  this.object = object;\n  this.box = new THREE.Box3();\n  THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({\n    color: color,\n    wireframe: true\n  }));\n};\n\nTHREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\n\nTHREE.BoundingBoxHelper.prototype.update = function () {\n  this.box.setFromObject(this.object);\n  this.box.size(this.scale);\n  this.box.center(this.position);\n}; // File:src/extras/helpers/CameraHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\n\n\nTHREE.CameraHelper = function (camera) {\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial({\n    color: 0xffffff,\n    vertexColors: THREE.FaceColors\n  });\n  var pointMap = {}; // colors\n\n  var hexFrustum = 0xffaa00;\n  var hexCone = 0xff0000;\n  var hexUp = 0x00aaff;\n  var hexTarget = 0xffffff;\n  var hexCross = 0x333333; // near\n\n  addLine(\"n1\", \"n2\", hexFrustum);\n  addLine(\"n2\", \"n4\", hexFrustum);\n  addLine(\"n4\", \"n3\", hexFrustum);\n  addLine(\"n3\", \"n1\", hexFrustum); // far\n\n  addLine(\"f1\", \"f2\", hexFrustum);\n  addLine(\"f2\", \"f4\", hexFrustum);\n  addLine(\"f4\", \"f3\", hexFrustum);\n  addLine(\"f3\", \"f1\", hexFrustum); // sides\n\n  addLine(\"n1\", \"f1\", hexFrustum);\n  addLine(\"n2\", \"f2\", hexFrustum);\n  addLine(\"n3\", \"f3\", hexFrustum);\n  addLine(\"n4\", \"f4\", hexFrustum); // cone\n\n  addLine(\"p\", \"n1\", hexCone);\n  addLine(\"p\", \"n2\", hexCone);\n  addLine(\"p\", \"n3\", hexCone);\n  addLine(\"p\", \"n4\", hexCone); // up\n\n  addLine(\"u1\", \"u2\", hexUp);\n  addLine(\"u2\", \"u3\", hexUp);\n  addLine(\"u3\", \"u1\", hexUp); // target\n\n  addLine(\"c\", \"t\", hexTarget);\n  addLine(\"p\", \"c\", hexCross); // cross\n\n  addLine(\"cn1\", \"cn2\", hexCross);\n  addLine(\"cn3\", \"cn4\", hexCross);\n  addLine(\"cf1\", \"cf2\", hexCross);\n  addLine(\"cf3\", \"cf4\", hexCross);\n\n  function addLine(a, b, hex) {\n    addPoint(a, hex);\n    addPoint(b, hex);\n  }\n\n  function addPoint(id, hex) {\n    geometry.vertices.push(new THREE.Vector3());\n    geometry.colors.push(new THREE.Color(hex));\n\n    if (pointMap[id] === undefined) {\n      pointMap[id] = [];\n    }\n\n    pointMap[id].push(geometry.vertices.length - 1);\n  }\n\n  THREE.LineSegments.call(this, geometry, material);\n  this.camera = camera;\n  this.matrix = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.pointMap = pointMap;\n  this.update();\n};\n\nTHREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\n\nTHREE.CameraHelper.prototype.update = function () {\n  var geometry, pointMap;\n  var vector = new THREE.Vector3();\n  var camera = new THREE.Camera();\n\n  var setPoint = function (point, x, y, z) {\n    vector.set(x, y, z).unproject(camera);\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      for (var i = 0, il = points.length; i < il; i++) {\n        geometry.vertices[points[i]].copy(vector);\n      }\n    }\n  };\n\n  return function () {\n    geometry = this.geometry;\n    pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix\n    // world matrix must be identity\n\n    camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n    setPoint(\"c\", 0, 0, -1);\n    setPoint(\"t\", 0, 0, 1); // near\n\n    setPoint(\"n1\", -w, -h, -1);\n    setPoint(\"n2\", w, -h, -1);\n    setPoint(\"n3\", -w, h, -1);\n    setPoint(\"n4\", w, h, -1); // far\n\n    setPoint(\"f1\", -w, -h, 1);\n    setPoint(\"f2\", w, -h, 1);\n    setPoint(\"f3\", -w, h, 1);\n    setPoint(\"f4\", w, h, 1); // up\n\n    setPoint(\"u1\", w * 0.7, h * 1.1, -1);\n    setPoint(\"u2\", -w * 0.7, h * 1.1, -1);\n    setPoint(\"u3\", 0, h * 2, -1); // cross\n\n    setPoint(\"cf1\", -w, 0, 1);\n    setPoint(\"cf2\", w, 0, 1);\n    setPoint(\"cf3\", 0, -h, 1);\n    setPoint(\"cf4\", 0, h, 1);\n    setPoint(\"cn1\", -w, 0, -1);\n    setPoint(\"cn2\", w, 0, -1);\n    setPoint(\"cn3\", 0, -h, -1);\n    setPoint(\"cn4\", 0, h, -1);\n    geometry.verticesNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/DirectionalLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\n\n\nTHREE.DirectionalLightHelper = function (light, size) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  size = size || 1;\n  var geometry = new THREE.Geometry();\n  geometry.vertices.push(new THREE.Vector3(-size, size, 0), new THREE.Vector3(size, size, 0), new THREE.Vector3(size, -size, 0), new THREE.Vector3(-size, -size, 0), new THREE.Vector3(-size, size, 0));\n  var material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  this.lightPlane = new THREE.Line(geometry, material);\n  this.add(this.lightPlane);\n  geometry = new THREE.Geometry();\n  geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3());\n  material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  this.targetLine = new THREE.Line(geometry, material);\n  this.add(this.targetLine);\n  this.update();\n};\n\nTHREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\n\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\n  this.lightPlane.geometry.dispose();\n  this.lightPlane.material.dispose();\n  this.targetLine.geometry.dispose();\n  this.targetLine.material.dispose();\n};\n\nTHREE.DirectionalLightHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var v3 = new THREE.Vector3();\n  return function () {\n    v1.setFromMatrixPosition(this.light.matrixWorld);\n    v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    v3.subVectors(v2, v1);\n    this.lightPlane.lookAt(v3);\n    this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.targetLine.geometry.vertices[1].copy(v3);\n    this.targetLine.geometry.verticesNeedUpdate = true;\n    this.targetLine.material.color.copy(this.lightPlane.material.color);\n  };\n}(); // File:src/extras/helpers/EdgesHelper.js\n\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\n\n\nTHREE.EdgesHelper = function (object, hex, thresholdAngle) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  THREE.LineSegments.call(this, new THREE.EdgesGeometry(object.geometry, thresholdAngle), new THREE.LineBasicMaterial({\n    color: color\n  }));\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper; // File:src/extras/helpers/FaceNormalsHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\nTHREE.FaceNormalsHelper = function (object, size, hex, linewidth) {\n  // FaceNormalsHelper only supports THREE.Geometry\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry instanceof THREE.Geometry) {\n    nNormals = objGeometry.faces.length;\n  } else {\n    console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n  } //\n\n\n  var geometry = new THREE.BufferGeometry();\n  var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\n\nTHREE.FaceNormalsHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var normalMatrix = new THREE.Matrix3();\n  return function update() {\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n    var vertices = objGeometry.vertices;\n    var faces = objGeometry.faces;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var normal = face.normal;\n      v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n      v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n      position.setXYZ(idx, v1.x, v1.y, v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, v2.x, v2.y, v2.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/GridHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.GridHelper = function (size, step) {\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  this.color1 = new THREE.Color(0x444444);\n  this.color2 = new THREE.Color(0x888888);\n\n  for (var i = -size; i <= size; i += step) {\n    geometry.vertices.push(new THREE.Vector3(-size, 0, i), new THREE.Vector3(size, 0, i), new THREE.Vector3(i, 0, -size), new THREE.Vector3(i, 0, size));\n    var color = i === 0 ? this.color1 : this.color2;\n    geometry.colors.push(color, color, color, color);\n  }\n\n  THREE.LineSegments.call(this, geometry, material);\n};\n\nTHREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\n\nTHREE.GridHelper.prototype.setColors = function (colorCenterLine, colorGrid) {\n  this.color1.set(colorCenterLine);\n  this.color2.set(colorGrid);\n  this.geometry.colorsNeedUpdate = true;\n}; // File:src/extras/helpers/HemisphereLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.HemisphereLightHelper = function (light, sphereSize) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.colors = [new THREE.Color(), new THREE.Color()];\n  var geometry = new THREE.SphereGeometry(sphereSize, 4, 2);\n  geometry.rotateX(-Math.PI / 2);\n\n  for (var i = 0, il = 8; i < il; i++) {\n    geometry.faces[i].color = this.colors[i < 4 ? 0 : 1];\n  }\n\n  var material = new THREE.MeshBasicMaterial({\n    vertexColors: THREE.FaceColors,\n    wireframe: true\n  });\n  this.lightSphere = new THREE.Mesh(geometry, material);\n  this.add(this.lightSphere);\n  this.update();\n};\n\nTHREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\n\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\n  this.lightSphere.geometry.dispose();\n  this.lightSphere.material.dispose();\n};\n\nTHREE.HemisphereLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  return function () {\n    this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);\n    this.lightSphere.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n    this.lightSphere.geometry.colorsNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/PointLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.PointLightHelper = function (light, sphereSize) {\n  this.light = light;\n  this.light.updateMatrixWorld();\n  var geometry = new THREE.SphereGeometry(sphereSize, 4, 2);\n  var material = new THREE.MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  THREE.Mesh.call(this, geometry, material);\n  this.matrix = this.light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  /*\r\n  var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n  var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n  \n  this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n  this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n  \n  var d = light.distance;\r\n  \n  if ( d === 0.0 ) {\r\n  \n  \tthis.lightDistance.visible = false;\r\n  \n  } else {\r\n  \n  \tthis.lightDistance.scale.set( d, d, d );\r\n  \n  }\r\n  \n  this.add( this.lightDistance );\r\n  */\n};\n\nTHREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\n\nTHREE.PointLightHelper.prototype.dispose = function () {\n  this.geometry.dispose();\n  this.material.dispose();\n};\n\nTHREE.PointLightHelper.prototype.update = function () {\n  this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  /*\r\n  var d = this.light.distance;\r\n  \n  if ( d === 0.0 ) {\r\n  \n  \tthis.lightDistance.visible = false;\r\n  \n  } else {\r\n  \n  \tthis.lightDistance.visible = true;\r\n  \tthis.lightDistance.scale.set( d, d, d );\r\n  \n  }\r\n  */\n}; // File:src/extras/helpers/SkeletonHelper.js\n\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\n\n\nTHREE.SkeletonHelper = function (object) {\n  this.bones = this.getBoneList(object);\n  var geometry = new THREE.Geometry();\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.colors.push(new THREE.Color(0, 0, 1));\n      geometry.colors.push(new THREE.Color(0, 1, 0));\n    }\n  }\n\n  geometry.dynamic = true;\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors,\n    depthTest: false,\n    depthWrite: false,\n    transparent: true\n  });\n  THREE.LineSegments.call(this, geometry, material);\n  this.root = object;\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\n\nTHREE.SkeletonHelper.prototype.getBoneList = function (object) {\n  var boneList = [];\n\n  if (object instanceof THREE.Bone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, this.getBoneList(object.children[i]));\n  }\n\n  return boneList;\n};\n\nTHREE.SkeletonHelper.prototype.update = function () {\n  var geometry = this.geometry;\n  var matrixWorldInv = new THREE.Matrix4().getInverse(this.root.matrixWorld);\n  var boneMatrix = new THREE.Matrix4();\n  var j = 0;\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n      geometry.vertices[j].setFromMatrixPosition(boneMatrix);\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n      geometry.vertices[j + 1].setFromMatrixPosition(boneMatrix);\n      j += 2;\n    }\n  }\n\n  geometry.verticesNeedUpdate = true;\n  geometry.computeBoundingSphere();\n}; // File:src/extras/helpers/SpotLightHelper.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.SpotLightHelper = function (light) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  var geometry = new THREE.CylinderGeometry(0, 1, 1, 8, 1, true);\n  geometry.translate(0, -0.5, 0);\n  geometry.rotateX(-Math.PI / 2);\n  var material = new THREE.MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  this.cone = new THREE.Mesh(geometry, material);\n  this.add(this.cone);\n  this.update();\n};\n\nTHREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\n\nTHREE.SpotLightHelper.prototype.dispose = function () {\n  this.cone.geometry.dispose();\n  this.cone.material.dispose();\n};\n\nTHREE.SpotLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  var vector2 = new THREE.Vector3();\n  return function () {\n    var coneLength = this.light.distance ? this.light.distance : 10000;\n    var coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    vector.setFromMatrixPosition(this.light.matrixWorld);\n    vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(vector2.sub(vector));\n    this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  };\n}(); // File:src/extras/helpers/VertexNormalsHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\n\n\nTHREE.VertexNormalsHelper = function (object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xff0000;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry instanceof THREE.Geometry) {\n    nNormals = objGeometry.faces.length * 3;\n  } else if (objGeometry instanceof THREE.BufferGeometry) {\n    nNormals = objGeometry.attributes.normal.count;\n  } //\n\n\n  var geometry = new THREE.BufferGeometry();\n  var positions = new THREE.Float32Attribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  THREE.LineSegments.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\n\nTHREE.VertexNormalsHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var normalMatrix = new THREE.Matrix3();\n  return function update() {\n    var keys = ['a', 'b', 'c'];\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry instanceof THREE.Geometry) {\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          var vertex = vertices[face[keys[j]]];\n          var normal = face.vertexNormals[j];\n          v1.copy(vertex).applyMatrix4(matrixWorld);\n          v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n    } else if (objGeometry instanceof THREE.BufferGeometry) {\n      var objPos = objGeometry.attributes.position;\n      var objNorm = objGeometry.attributes.normal;\n      var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (var j = 0, jl = objPos.count; j < jl; j++) {\n        v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n        v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n        v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n    }\n\n    position.needsUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/WireframeHelper.js\n\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n\nTHREE.WireframeHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  THREE.LineSegments.call(this, new THREE.WireframeGeometry(object.geometry), new THREE.LineBasicMaterial({\n    color: color\n  }));\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper; // File:src/extras/objects/ImmediateRenderObject.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.ImmediateRenderObject = function () {\n  THREE.Object3D.call(this);\n\n  this.render = function (renderCallback) {};\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject; // File:src/extras/objects/MorphBlendMesh.js\n\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.MorphBlendMesh = function (geometry, material) {\n  THREE.Mesh.call(this, geometry, material);\n  this.animationsMap = {};\n  this.animationsList = []; // prepare default animation\n  // (all frames played together in 1 second)\n\n  var numFrames = this.geometry.morphTargets.length;\n  var name = \"__default\";\n  var startFrame = 0;\n  var endFrame = numFrames - 1;\n  var fps = numFrames / 1;\n  this.createAnimation(name, startFrame, endFrame, fps);\n  this.setAnimationWeight(name, 1);\n};\n\nTHREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\n\nTHREE.MorphBlendMesh.prototype.createAnimation = function (name, start, end, fps) {\n  var animation = {\n    start: start,\n    end: end,\n    length: end - start + 1,\n    fps: fps,\n    duration: (end - start) / fps,\n    lastFrame: 0,\n    currentFrame: 0,\n    active: false,\n    time: 0,\n    direction: 1,\n    weight: 1,\n    directionBackwards: false,\n    mirroredLoop: false\n  };\n  this.animationsMap[name] = animation;\n  this.animationsList.push(animation);\n};\n\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function (fps) {\n  var pattern = /([a-z]+)_?(\\d+)/;\n  var firstAnimation,\n      frameRanges = {};\n  var geometry = this.geometry;\n\n  for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n    var morph = geometry.morphTargets[i];\n    var chunks = morph.name.match(pattern);\n\n    if (chunks && chunks.length > 1) {\n      var name = chunks[1];\n      if (!frameRanges[name]) frameRanges[name] = {\n        start: Infinity,\n        end: -Infinity\n      };\n      var range = frameRanges[name];\n      if (i < range.start) range.start = i;\n      if (i > range.end) range.end = i;\n      if (!firstAnimation) firstAnimation = name;\n    }\n  }\n\n  for (var name in frameRanges) {\n    var range = frameRanges[name];\n    this.createAnimation(name, range.start, range.end, fps);\n  }\n\n  this.firstAnimation = firstAnimation;\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = 1;\n    animation.directionBackwards = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = -1;\n    animation.directionBackwards = true;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function (name, fps) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.fps = fps;\n    animation.duration = (animation.end - animation.start) / animation.fps;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function (name, duration) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.duration = duration;\n    animation.fps = (animation.end - animation.start) / animation.duration;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function (name, weight) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.weight = weight;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function (name, time) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = time;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function (name) {\n  var time = 0;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    time = animation.time;\n  }\n\n  return time;\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function (name) {\n  var duration = -1;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    duration = animation.duration;\n  }\n\n  return duration;\n};\n\nTHREE.MorphBlendMesh.prototype.playAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = 0;\n    animation.active = true;\n  } else {\n    console.warn(\"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\");\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.stopAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.active = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.update = function (delta) {\n  for (var i = 0, il = this.animationsList.length; i < il; i++) {\n    var animation = this.animationsList[i];\n    if (!animation.active) continue;\n    var frameTime = animation.duration / animation.length;\n    animation.time += animation.direction * delta;\n\n    if (animation.mirroredLoop) {\n      if (animation.time > animation.duration || animation.time < 0) {\n        animation.direction *= -1;\n\n        if (animation.time > animation.duration) {\n          animation.time = animation.duration;\n          animation.directionBackwards = true;\n        }\n\n        if (animation.time < 0) {\n          animation.time = 0;\n          animation.directionBackwards = false;\n        }\n      }\n    } else {\n      animation.time = animation.time % animation.duration;\n      if (animation.time < 0) animation.time += animation.duration;\n    }\n\n    var keyframe = animation.start + THREE.Math.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\n    var weight = animation.weight;\n\n    if (keyframe !== animation.currentFrame) {\n      this.morphTargetInfluences[animation.lastFrame] = 0;\n      this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\n      this.morphTargetInfluences[keyframe] = 0;\n      animation.lastFrame = animation.currentFrame;\n      animation.currentFrame = keyframe;\n    }\n\n    var mix = animation.time % frameTime / frameTime;\n    if (animation.directionBackwards) mix = 1 - mix;\n\n    if (animation.currentFrame !== animation.lastFrame) {\n      this.morphTargetInfluences[animation.currentFrame] = mix * weight;\n      this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\n    } else {\n      this.morphTargetInfluences[animation.currentFrame] = weight;\n    }\n  }\n}; // Export the THREE object for **Node.js**, with\n// backwards-compatibility for the old `require()` API. If we're in\n// the browser, add `_` as a global object via a string identifier,\n// for Closure Compiler \"advanced\" mode.\n\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n    exports = module.exports = THREE;\n  }\n\n  exports.THREE = THREE;\n} else {\n  this['THREE'] = THREE;\n}","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/node_modules/stl-viewer/node_modules/three/three.js"],"names":["self","THREE","REVISION","define","amd","exports","module","requestAnimationFrame","undefined","cancelAnimationFrame","lastTime","vendors","x","length","setTimeout","callback","currTime","Date","now","timeToCall","Math","max","id","clearTimeout","sign","Function","prototype","name","Object","defineProperty","get","toString","match","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","console","error","projectVector","vector","camera","warn","project","unprojectVector","unproject","pickingRay","CanvasRenderer","domElement","document","createElement","clear","render","setClearColor","setSize","Color","color","arguments","setRGB","set","constructor","r","g","b","value","copy","setHex","setStyle","hex","floor","setHSL","hue2rgb","p","q","t","h","s","l","euclideanModulo","clamp","style","parseAlpha","strAlpha","alpha","parseFloat","m","exec","components","min","parseInt","size","charAt","ColorKeywords","clone","copyGammaToLinear","gammaFactor","pow","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","optionalTarget","hsl","hue","saturation","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","equals","c","fromArray","array","toArray","offset","Quaternion","y","z","w","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","Error","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","v","lengthSq","multiplyQuaternions","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","applyQuaternion","slerp","qb","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","onChange","qa","qm","Vector2","setX","setY","setComponent","index","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","distanceToSquared","dx","dy","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","matrix","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","me","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","PI","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","atan2","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","start","end","line","center","result","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","i","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","Geometry","vertices","BufferGeometry","attributes","positions","getBoundingSphere","Sphere","radius","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","f","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","target","up","n","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","position","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","tan","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","split","uuid","Array","rnd","random","join","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","v3","intPoint","weight","w2","w3","pa","pb","pc","pd","initFromArray","getPoint","k","interpolate","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","push","t2","t3","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","stop","getElapsedTime","getDelta","newTime","EventDispatcher","apply","addEventListener","hasEventListener","removeEventListener","dispatchEvent","type","listener","_listeners","listeners","indexOf","listenerArray","splice","event","call","Raycaster","params","Mesh","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","descSort","intersectObject","raycaster","intersects","recursive","visible","raycast","children","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","sort","intersectObjects","objects","isArray","Object3D","Object3DIdCount","parent","DefaultUp","rotation","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getChildByName","getObjectByName","getObjectById","getObjectByProperty","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","meta","isRootObject","data","geometries","materials","textures","images","metadata","version","generator","JSON","stringify","output","extractFromCache","cache","values","key","source","parse","Face3","materialIndex","vertexNormals","vertexColors","Face4","BufferAttribute","dynamic","updateRange","count","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","create","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faces","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","normals","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","parameters","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","addAttribute","getAttribute","removeAttribute","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","bb","isNaN","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","renderer","scene","generateMipmaps","activeCubeFace","setRenderTarget","zoom","updateProjectionMatrix","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","width","height","Light","AmbientLight","DirectionalLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","exponent","shadowCameraFov","Cache","files","file","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","url","parts","pop","initMaterials","texturePath","createMaterial","imageLoader","ImageLoader","nearest_pow2","log","LN2","create_texture","where","sourceFile","repeat","wrap","anisotropy","fullPath","texture","loader","Handlers","load","Texture","setCrossOrigin","image","canvas","context","getContext","drawImage","wrapS","wrapT","wrapMap","rgb2hex","rgb","mtype","mpars","shading","toLowerCase","blending","transparent","opacity","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","material","DbgName","handlers","regex","test","XHRLoader","manager","DefaultLoadingManager","onLoad","onProgress","onError","cached","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setResponseType","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","text","json","setTexturePath","parseModel","parseSkin","parseMorphing","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","influencesPerVertex","bones","animation","animations","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","map","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","detail","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","Scene","mode","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loaded","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","overdraw","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshLambertMaterial","MeshPhongMaterial","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","lights","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","bind","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","time","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","common","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","shadowmap","ShaderLib","WebGLRenderer","_canvas","_context","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_clearColor","_clearAlpha","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","transparentImmediateObjects","transparentImmediateObjectsLastIndex","sprites","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","gammaInput","gammaOutput","maxMorphTargets","maxMorphNormals","autoScaleCubemaps","_this","_currentProgram","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_usedTextureUnits","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_currentWidth","_currentHeight","_frustum","_projScreenMatrix","_vector3","_direction","_lightsNeedUpdate","_lights","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","_infoMemory","_infoRender","calls","info","memory","programs","_gl","onContextLost","extensions","WebGLExtensions","capabilities","WebGLCapabilities","state","WebGLState","paramThreeToGL","properties","WebGLProperties","WebGLObjects","programCache","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","glClearColor","clearColor","setDefaultGLState","init","viewport","resetGLState","reset","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","getMaxAnisotropy","extension","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","preventDefault","onTextureDispose","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","delete","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","releaseProgram","renderBufferImmediate","initAttributes","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","getAttributes","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","FLOAT","normalArray","nx","ny","nz","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","renderBufferDirect","setMaterial","setProgram","updateBuffers","geometryProgram","activeInfluences","numericalSort","getUniforms","uniform1fv","getWireframeAttribute","setupVertexAttributes","ELEMENT_ARRAY_BUFFER","getAttributeBuffer","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","startIndex","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","painterSortStable","reversePainterSortStable","forceClear","projectObject","renderObjects","renderObjectsImmediate","setBlending","updateRenderTargetMipmap","setDepthTest","setDepthWrite","setColorWrite","pushImmediateRenderItem","pushRenderItem","renderItem","ImmediateRenderObject","groupMaterial","renderList","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","numSupportedMorphNormals","uniformsList","uniformLocations","location","setMaterialFaces","setDepthFunc","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","mNear","mFar","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","diffuse","uvScaleMap","offsetRepeat","flipEnvMap","totalSize","psColor","fogColor","fogNear","fogFar","fogDensity","ambientLightColor","directionalLightColor","directionalLightDirection","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDistance","spotLightDirection","spotLightAngleCos","spotLightExponent","spotLightDecay","hemisphereLightSkyColor","hemisphereLightGroundColor","hemisphereLightDirection","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","complete","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","RGBA","UNSIGNED_BYTE","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","options","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","property","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","programIdCount","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","substr","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","string","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customDefines","createProgram","prefixVertex","prefixFragment","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","shaderIDs","parameterNames","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","_state","_min","_max","_matrixPosition","_renderList","depthShader","depthUniforms","_depthMaterial","_depthMaterialMorph","_depthMaterialSkin","_depthMaterialMorphSkin","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","getDepthMaterial","clearAlpha","useMorphing","useSkinning","depthMaterial","customDepthMaterial","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","String","fontPaths","Path","ret","extractGlyphPoints","paths","pts","outline","action","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","glyph","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","ha","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","onload","decodeAudioData","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","window","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","current","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","bounds","oldX","oldY","xNorm","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","args","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","item","spts","concat","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","indepHoles","intersectsHoleEdge","ihIdx","chkHole","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","failedCuts","tmpShape1","tmpShape2","tmpHole1","tmpHole2","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","keys","rot","quat","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","next","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","width_half","height_half","depth_half","buildPlane","udir","vdir","gridX","gridY","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","CubeGeometry","centerUV","segment","ii","heightHalf","verticesRow","uvsRow","tanTheta","na","nb","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","steps","extrudePath","extrudePts","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","splineTube","binormal","position2","TubeGeometry","FrenetFrames","ahole","shapesOffset","shapePoints","reverse","scalePt2","pt","bs","vert","flen","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","binormals","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","slen1","slen2","f4","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","phi","np","base","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","grid","tang","bitan","getPos","ip","jp","in_q","in_p","cu","su","quOverP","cs","tz","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","mat","smallest","initialNormal3","MAX_VALUE","PolyhedronGeometry","that","prepare","centroid","subdivide","azimuth","inclination","make","azi","correctUV","cols","aj","bj","rows","ParametricGeometry","func","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","addLine","addPoint","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","sourcesContent":["var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}