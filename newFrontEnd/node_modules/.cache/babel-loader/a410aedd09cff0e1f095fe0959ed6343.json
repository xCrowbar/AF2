{"ast":null,"code":"module.exports = function (THREE) {\n  var MOUSE = THREE.MOUSE;\n  if (!MOUSE) MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2\n  };\n  /**\n   * @author qiao / https://github.com/qiao\n   * @author mrdoob / http://mrdoob.com\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author erich666 / http://erichaines.com\n   */\n\n  /*global THREE, console */\n\n  function OrbitConstraint(object) {\n    this.object = object; // \"target\" sets the location of focus, where the object orbits around\n    // and where it pans with respect to.\n\n    this.target = new THREE.Vector3(); // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\n    this.minDistance = 0;\n    this.maxDistance = Infinity; // Limits to how far you can zoom in and out ( OrthographicCamera only )\n\n    this.minZoom = 0;\n    this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    this.minPolarAngle = 0; // radians\n\n    this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n    this.minAzimuthAngle = -Infinity; // radians\n\n    this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    this.enableDamping = false;\n    this.dampingFactor = 0.25; ////////////\n    // internals\n\n    var scope = this;\n    var EPS = 0.000001; // Current position in spherical coordinate system.\n\n    var theta;\n    var phi; // Pending changes\n\n    var phiDelta = 0;\n    var thetaDelta = 0;\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false; // API\n\n    this.getPolarAngle = function () {\n      return phi;\n    };\n\n    this.getAzimuthalAngle = function () {\n      return theta;\n    };\n\n    this.rotateLeft = function (angle) {\n      thetaDelta -= angle;\n    };\n\n    this.rotateUp = function (angle) {\n      phiDelta -= angle;\n    }; // pass in distance in world space to move left\n\n\n    this.panLeft = function () {\n      var v = new THREE.Vector3();\n      return function panLeft(distance) {\n        var te = this.object.matrix.elements; // get X column of matrix\n\n        v.set(te[0], te[1], te[2]);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }(); // pass in distance in world space to move up\n\n\n    this.panUp = function () {\n      var v = new THREE.Vector3();\n      return function panUp(distance) {\n        var te = this.object.matrix.elements; // get Y column of matrix\n\n        v.set(te[4], te[5], te[6]);\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // pass in x,y of change desired in pixel space,\n    // right and down are positive\n\n\n    this.pan = function (deltaX, deltaY, screenWidth, screenHeight) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        var offset = position.clone().sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we actually don't use screenWidth, since perspective camera is fixed to screen height\n\n        scope.panLeft(2 * deltaX * targetDistance / screenHeight);\n        scope.panUp(2 * deltaY * targetDistance / screenHeight);\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        // orthographic\n        scope.panLeft(deltaX * (scope.object.right - scope.object.left) / screenWidth);\n        scope.panUp(deltaY * (scope.object.top - scope.object.bottom) / screenHeight);\n      } else {\n        // camera neither orthographic or perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n      }\n    };\n\n    this.dollyIn = function (dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      }\n    };\n\n    this.dollyOut = function (dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      }\n    };\n\n    this.update = function () {\n      var offset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n      var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n      var quatInverse = quat.clone().inverse();\n      var lastPosition = new THREE.Vector3();\n      var lastQuaternion = new THREE.Quaternion();\n      return function () {\n        var position = this.object.position;\n        offset.copy(position).sub(this.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        theta = Math.atan2(offset.x, offset.z); // angle from y-axis\n\n        phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n        theta += thetaDelta;\n        phi += phiDelta; // restrict theta to be between desired limits\n\n        theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta)); // restrict phi to be between desired limits\n\n        phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi)); // restrict phi to be betwee EPS and PI-EPS\n\n        phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n        var radius = offset.length() * scale; // restrict radius to be between desired limits\n\n        radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius)); // move target to panned location\n\n        this.target.add(panOffset);\n        offset.x = radius * Math.sin(phi) * Math.sin(theta);\n        offset.y = radius * Math.cos(phi);\n        offset.z = radius * Math.sin(phi) * Math.cos(theta); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(this.target).add(offset);\n        this.object.lookAt(this.target);\n\n        if (this.enableDamping === true) {\n          thetaDelta *= 1 - this.dampingFactor;\n          phiDelta *= 1 - this.dampingFactor;\n        } else {\n          thetaDelta = 0;\n          phiDelta = 0;\n        }\n\n        scale = 1;\n        panOffset.set(0, 0, 0); // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(this.object.position) > EPS || 8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS) {\n          lastPosition.copy(this.object.position);\n          lastQuaternion.copy(this.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n  }\n\n  ; // This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n  // the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n  // supported.\n  //\n  //    Orbit - left mouse / touch: one finger move\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n  function OrbitControls(object, domElement) {\n    var constraint = new OrbitConstraint(object);\n    this.domElement = domElement !== undefined ? domElement : document; // API\n\n    Object.defineProperty(this, 'constraint', {\n      get: function () {\n        return constraint;\n      }\n    });\n\n    this.getPolarAngle = function () {\n      return constraint.getPolarAngle();\n    };\n\n    this.getAzimuthalAngle = function () {\n      return constraint.getAzimuthalAngle();\n    }; // Set to false to disable this control\n\n\n    this.enabled = true; // center is old, deprecated; use \"target\" instead\n\n    this.center = this.target; // This option actually enables dollying in and out; left as \"zoom\" for\n    // backwards compatibility.\n    // Set to false to disable zooming\n\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n    // Set to false to disable use of the keys\n\n    this.enableKeys = true; // The four arrow keys\n\n    this.keys = {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    }; // Mouse buttons\n\n    this.mouseButtons = {\n      ORBIT: THREE.MOUSE.LEFT,\n      ZOOM: THREE.MOUSE.MIDDLE,\n      PAN: THREE.MOUSE.RIGHT\n    }; ////////////\n    // internals\n\n    var scope = this;\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_DOLLY: 4,\n      TOUCH_PAN: 5\n    };\n    var state = STATE.NONE; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom; // events\n\n    var changeEvent = {\n      type: 'change'\n    };\n    var startEvent = {\n      type: 'start'\n    };\n    var endEvent = {\n      type: 'end'\n    }; // pass in x,y of change desired in pixel space,\n    // right and down are positive\n\n    function pan(deltaX, deltaY) {\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n      constraint.pan(deltaX, deltaY, element.clientWidth, element.clientHeight);\n    }\n\n    this.update = function () {\n      if (this.autoRotate && state === STATE.NONE) {\n        constraint.rotateLeft(getAutoRotationAngle());\n      }\n\n      if (constraint.update() === true) {\n        this.dispatchEvent(changeEvent);\n      }\n    };\n\n    this.reset = function () {\n      state = STATE.NONE;\n      this.target.copy(this.target0);\n      this.object.position.copy(this.position0);\n      this.object.zoom = this.zoom0;\n      this.object.updateProjectionMatrix();\n      this.dispatchEvent(changeEvent);\n      this.update();\n    };\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function onMouseDown(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      if (event.button === scope.mouseButtons.ORBIT) {\n        if (scope.enableRotate === false) return;\n        state = STATE.ROTATE;\n        rotateStart.set(event.clientX, event.clientY);\n      } else if (event.button === scope.mouseButtons.ZOOM) {\n        if (scope.enableZoom === false) return;\n        state = STATE.DOLLY;\n        dollyStart.set(event.clientX, event.clientY);\n      } else if (event.button === scope.mouseButtons.PAN) {\n        if (scope.enablePan === false) return;\n        state = STATE.PAN;\n        panStart.set(event.clientX, event.clientY);\n      }\n\n      if (state !== STATE.NONE) {\n        document.addEventListener('mousemove', onMouseMove, false);\n        document.addEventListener('mouseup', onMouseUp, false);\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if (state === STATE.ROTATE) {\n        if (scope.enableRotate === false) return;\n        rotateEnd.set(event.clientX, event.clientY);\n        rotateDelta.subVectors(rotateEnd, rotateStart); // rotating across whole screen goes 360 degrees around\n\n        constraint.rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n        constraint.rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n        rotateStart.copy(rotateEnd);\n      } else if (state === STATE.DOLLY) {\n        if (scope.enableZoom === false) return;\n        dollyEnd.set(event.clientX, event.clientY);\n        dollyDelta.subVectors(dollyEnd, dollyStart);\n\n        if (dollyDelta.y > 0) {\n          constraint.dollyIn(getZoomScale());\n        } else if (dollyDelta.y < 0) {\n          constraint.dollyOut(getZoomScale());\n        }\n\n        dollyStart.copy(dollyEnd);\n      } else if (state === STATE.PAN) {\n        if (scope.enablePan === false) return;\n        panEnd.set(event.clientX, event.clientY);\n        panDelta.subVectors(panEnd, panStart);\n        pan(panDelta.x, panDelta.y);\n        panStart.copy(panEnd);\n      }\n\n      if (state !== STATE.NONE) scope.update();\n    }\n\n    function\n      /* event */\n    onMouseUp() {\n      if (scope.enabled === false) return;\n      document.removeEventListener('mousemove', onMouseMove, false);\n      document.removeEventListener('mouseup', onMouseUp, false);\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      event.stopPropagation();\n      var delta = 0;\n\n      if (event.wheelDelta !== undefined) {\n        // WebKit / Opera / Explorer 9\n        delta = event.wheelDelta;\n      } else if (event.detail !== undefined) {\n        // Firefox\n        delta = -event.detail;\n      }\n\n      if (delta > 0) {\n        constraint.dollyOut(getZoomScale());\n      } else if (delta < 0) {\n        constraint.dollyIn(getZoomScale());\n      }\n\n      scope.update();\n      scope.dispatchEvent(startEvent);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n      }\n    }\n\n    function touchstart(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.touches.length) {\n        case 1:\n          // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n          state = STATE.TOUCH_ROTATE;\n          rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n          break;\n\n        case 2:\n          // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n          state = STATE.TOUCH_DOLLY;\n          var dx = event.touches[0].pageX - event.touches[1].pageX;\n          var dy = event.touches[0].pageY - event.touches[1].pageY;\n          var distance = Math.sqrt(dx * dx + dy * dy);\n          dollyStart.set(0, distance);\n          break;\n\n        case 3:\n          // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n          state = STATE.TOUCH_PAN;\n          panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) scope.dispatchEvent(startEvent);\n    }\n\n    function touchmove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n      event.stopPropagation();\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      switch (event.touches.length) {\n        case 1:\n          // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n          if (state !== STATE.TOUCH_ROTATE) return;\n          rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n          rotateDelta.subVectors(rotateEnd, rotateStart); // rotating across whole screen goes 360 degrees around\n\n          constraint.rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n          constraint.rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n          rotateStart.copy(rotateEnd);\n          scope.update();\n          break;\n\n        case 2:\n          // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n          if (state !== STATE.TOUCH_DOLLY) return;\n          var dx = event.touches[0].pageX - event.touches[1].pageX;\n          var dy = event.touches[0].pageY - event.touches[1].pageY;\n          var distance = Math.sqrt(dx * dx + dy * dy);\n          dollyEnd.set(0, distance);\n          dollyDelta.subVectors(dollyEnd, dollyStart);\n\n          if (dollyDelta.y > 0) {\n            constraint.dollyOut(getZoomScale());\n          } else if (dollyDelta.y < 0) {\n            constraint.dollyIn(getZoomScale());\n          }\n\n          dollyStart.copy(dollyEnd);\n          scope.update();\n          break;\n\n        case 3:\n          // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n          if (state !== STATE.TOUCH_PAN) return;\n          panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n          panDelta.subVectors(panEnd, panStart);\n          pan(panDelta.x, panDelta.y);\n          panStart.copy(panEnd);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function\n      /* event */\n    touchend() {\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function contextmenu(event) {\n      event.preventDefault();\n    }\n\n    this.dispose = function () {\n      this.domElement.removeEventListener('contextmenu', contextmenu, false);\n      this.domElement.removeEventListener('mousedown', onMouseDown, false);\n      this.domElement.removeEventListener('mousewheel', onMouseWheel, false);\n      this.domElement.removeEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n      this.domElement.removeEventListener('touchstart', touchstart, false);\n      this.domElement.removeEventListener('touchend', touchend, false);\n      this.domElement.removeEventListener('touchmove', touchmove, false);\n      document.removeEventListener('mousemove', onMouseMove, false);\n      document.removeEventListener('mouseup', onMouseUp, false);\n      window.removeEventListener('keydown', onKeyDown, false);\n    };\n\n    this.domElement.addEventListener('contextmenu', contextmenu, false);\n    this.domElement.addEventListener('mousedown', onMouseDown, false);\n    this.domElement.addEventListener('mousewheel', onMouseWheel, false);\n    this.domElement.addEventListener('MozMousePixelScroll', onMouseWheel, false); // firefox\n\n    this.domElement.addEventListener('touchstart', touchstart, false);\n    this.domElement.addEventListener('touchend', touchend, false);\n    this.domElement.addEventListener('touchmove', touchmove, false);\n    window.addEventListener('keydown', onKeyDown, false); // force an update at start\n\n    this.update();\n  }\n\n  ;\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n  OrbitControls.prototype.constructor = OrbitControls;\n  Object.defineProperties(OrbitControls.prototype, {\n    object: {\n      get: function () {\n        return this.constraint.object;\n      }\n    },\n    target: {\n      get: function () {\n        return this.constraint.target;\n      },\n      set: function (value) {\n        console.warn('THREE.OrbitControls: target is now immutable. Use target.set() instead.');\n        this.constraint.target.copy(value);\n      }\n    },\n    minDistance: {\n      get: function () {\n        return this.constraint.minDistance;\n      },\n      set: function (value) {\n        this.constraint.minDistance = value;\n      }\n    },\n    maxDistance: {\n      get: function () {\n        return this.constraint.maxDistance;\n      },\n      set: function (value) {\n        this.constraint.maxDistance = value;\n      }\n    },\n    minZoom: {\n      get: function () {\n        return this.constraint.minZoom;\n      },\n      set: function (value) {\n        this.constraint.minZoom = value;\n      }\n    },\n    maxZoom: {\n      get: function () {\n        return this.constraint.maxZoom;\n      },\n      set: function (value) {\n        this.constraint.maxZoom = value;\n      }\n    },\n    minPolarAngle: {\n      get: function () {\n        return this.constraint.minPolarAngle;\n      },\n      set: function (value) {\n        this.constraint.minPolarAngle = value;\n      }\n    },\n    maxPolarAngle: {\n      get: function () {\n        return this.constraint.maxPolarAngle;\n      },\n      set: function (value) {\n        this.constraint.maxPolarAngle = value;\n      }\n    },\n    minAzimuthAngle: {\n      get: function () {\n        return this.constraint.minAzimuthAngle;\n      },\n      set: function (value) {\n        this.constraint.minAzimuthAngle = value;\n      }\n    },\n    maxAzimuthAngle: {\n      get: function () {\n        return this.constraint.maxAzimuthAngle;\n      },\n      set: function (value) {\n        this.constraint.maxAzimuthAngle = value;\n      }\n    },\n    enableDamping: {\n      get: function () {\n        return this.constraint.enableDamping;\n      },\n      set: function (value) {\n        this.constraint.enableDamping = value;\n      }\n    },\n    dampingFactor: {\n      get: function () {\n        return this.constraint.dampingFactor;\n      },\n      set: function (value) {\n        this.constraint.dampingFactor = value;\n      }\n    },\n    // backward compatibility\n    noZoom: {\n      get: function () {\n        console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n        return !this.enableZoom;\n      },\n      set: function (value) {\n        console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n        this.enableZoom = !value;\n      }\n    },\n    noRotate: {\n      get: function () {\n        console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n        return !this.enableRotate;\n      },\n      set: function (value) {\n        console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n        this.enableRotate = !value;\n      }\n    },\n    noPan: {\n      get: function () {\n        console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n        return !this.enablePan;\n      },\n      set: function (value) {\n        console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n        this.enablePan = !value;\n      }\n    },\n    noKeys: {\n      get: function () {\n        console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n        return !this.enableKeys;\n      },\n      set: function (value) {\n        console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n        this.enableKeys = !value;\n      }\n    },\n    staticMoving: {\n      get: function () {\n        console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n        return !this.constraint.enableDamping;\n      },\n      set: function (value) {\n        console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n        this.constraint.enableDamping = !value;\n      }\n    },\n    dynamicDampingFactor: {\n      get: function () {\n        console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n        return this.constraint.dampingFactor;\n      },\n      set: function (value) {\n        console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n        this.constraint.dampingFactor = value;\n      }\n    }\n  });\n  return OrbitControls;\n};","map":{"version":3,"names":["module","exports","THREE","MOUSE","LEFT","MIDDLE","RIGHT","OrbitConstraint","object","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","scope","EPS","theta","phi","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","v","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","position","offset","clone","sub","targetDistance","length","tan","fov","OrthographicCamera","right","left","top","bottom","console","warn","dollyIn","dollyScale","zoom","max","min","updateProjectionMatrix","dollyOut","update","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","copy","applyQuaternion","atan2","x","z","sqrt","y","radius","sin","cos","lookAt","distanceToSquared","dot","quaternion","OrbitControls","domElement","constraint","undefined","document","Object","defineProperty","get","enabled","center","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","UP","BOTTOM","mouseButtons","ORBIT","ZOOM","PAN","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","STATE","NONE","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","state","target0","position0","zoom0","changeEvent","type","startEvent","endEvent","element","body","clientWidth","clientHeight","getAutoRotationAngle","dispatchEvent","reset","getZoomScale","pow","onMouseDown","event","preventDefault","button","clientX","clientY","addEventListener","onMouseMove","onMouseUp","subVectors","removeEventListener","onMouseWheel","stopPropagation","delta","wheelDelta","detail","onKeyDown","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","contextmenu","dispose","window","prototype","create","EventDispatcher","constructor","defineProperties","value","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor"],"sources":["/home/crow/Scrivania/AF2/newFrontEnd/node_modules/three-orbit-controls/index.js"],"sourcesContent":["module.exports = function(THREE) {\n\tvar MOUSE = THREE.MOUSE\n\tif (!MOUSE)\n\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\t/*global THREE, console */\n\n\tfunction OrbitConstraint ( object ) {\n\n\t\tthis.object = object;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// Current position in spherical coordinate system.\n\t\tvar theta;\n\t\tvar phi;\n\n\t\t// Pending changes\n\t\tvar phiDelta = 0;\n\t\tvar thetaDelta = 0;\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\t// API\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn theta;\n\n\t\t};\n\n\t\tthis.rotateLeft = function ( angle ) {\n\n\t\t\tthetaDelta -= angle;\n\n\t\t};\n\n\t\tthis.rotateUp = function ( angle ) {\n\n\t\t\tphiDelta -= angle;\n\n\t\t};\n\n\t\t// pass in distance in world space to move left\n\t\tthis.panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get X column of matrix\n\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in distance in world space to move up\n\t\tthis.panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get Y column of matrix\n\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyIn = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyOut = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = this.object.position;\n\n\t\t\t\toffset.copy( position ).sub( this.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\n\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t\t\t// angle from y-axis\n\n\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\t\t\ttheta += thetaDelta;\n\t\t\t\tphi += phiDelta;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\t\t\tvar radius = offset.length() * scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tthis.target.add( panOffset );\n\n\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( this.target ).add( offset );\n\n\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\tif ( this.enableDamping === true ) {\n\n\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\tphiDelta = 0;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t};\n\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t// supported.\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls ( object, domElement ) {\n\n\t\tvar constraint = new OrbitConstraint( object );\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// API\n\n\t\tObject.defineProperty( this, 'constraint', {\n\n\t\t\tget: function() {\n\n\t\t\t\treturn constraint;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn constraint.getPolarAngle();\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn constraint.getAzimuthalAngle();\n\n\t\t};\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// events\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tfunction pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n\t\t}\n\n\t\tthis.update = function () {\n\n\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( constraint.update() === true ) {\n\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tstate = STATE.NONE;\n\n\t\t\tthis.target.copy( this.target0 );\n\t\t\tthis.object.position.copy( this.position0 );\n\t\t\tthis.object.zoom = this.zoom0;\n\n\t\t\tthis.object.updateProjectionMatrix();\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t\t}\n\n\t\tfunction onMouseUp( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchstart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t\tfunction touchmove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchend( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tthis.dispose = function() {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t}\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tobject: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.object;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttarget: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.target;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\tthis.constraint.target.copy( value );\n\n\t\t\t}\n\n\t\t},\n\n\t\tminDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tenableDamping : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.enableDamping = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.constraint.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}