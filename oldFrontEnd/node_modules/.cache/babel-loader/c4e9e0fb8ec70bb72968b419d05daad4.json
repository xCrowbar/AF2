{"ast":null,"code":"/**\n * This file contains our type guards.\n *\n * Type guards are a feature of TypeScript which narrow the type signature of\n * intesection types (types that can be one thing or another).\n *\n * @see\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types\n */\nimport { MagicPayloadMethod, RPCErrorCode } from '@magic-sdk/types';\n/**\n * Assert `value` is `undefined`.\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Assert `value` is `null`.\n */\n\n\nfunction isNull(value) {\n  return value === null;\n}\n/**\n * Assert `value` is `null` or `undefined`.\n */\n\n\nfunction isNil(value) {\n  return isNull(value) || isUndefined(value);\n}\n/**\n * Assert `value` is a `JsonRpcRequestPayload` object.\n */\n\n\nexport function isJsonRpcRequestPayload(value) {\n  if (isNil(value)) return false;\n  return !isUndefined(value.jsonrpc) && !isUndefined(value.id) && !isUndefined(value.method) && !isUndefined(value.params);\n}\n/**\n * Assert `value` is a `JsonRpcResponsePayload` object.\n */\n\nexport function isJsonRpcResponsePayload(value) {\n  if (isNil(value)) return false;\n  return !isUndefined(value.jsonrpc) && !isUndefined(value.id) && (!isUndefined(value.result) || !isUndefined(value.error));\n}\n/**\n * Assert `value` is a Magic SDK payload method identifier.\n */\n\nexport function isMagicPayloadMethod(value) {\n  if (isNil(value)) return false;\n  return typeof value === 'string' && Object.values(MagicPayloadMethod).includes(value);\n}\n/**\n * Assert `value` is an expected JSON RPC error code.\n */\n\nexport function isJsonRpcErrorCode(value) {\n  if (isNil(value)) return false;\n  return typeof value === 'number' && Object.values(RPCErrorCode).includes(value);\n}\n/**\n * Assert `value` is an empty, plain object.\n */\n\nexport function isEmpty(value) {\n  if (!value) return true;\n\n  for (var key in value) {\n    /* istanbul ignore else */\n    if (Object.hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;AAUA,SAAwDA,kBAAxD,EAA4EC,YAA5E,QAAgG,kBAAhG;AAEA;;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA+B;AAC7B,SAAO,OAAOA,KAAP,KAAiB,WAAxB;AACD;AAED;;;;;AAGA,SAASC,MAAT,CAAgBD,KAAhB,EAA0B;AACxB,SAAOA,KAAK,KAAK,IAAjB;AACD;AAED;;;;;AAGA,SAASE,KAAT,CAAeF,KAAf,EAAyB;AACvB,SAAOC,MAAM,CAACD,KAAD,CAAN,IAAiBD,WAAW,CAACC,KAAD,CAAnC;AACD;AAED;;;;;AAGA,OAAM,SAAUG,uBAAV,CAAkCH,KAAlC,EAA+D;AACnE,MAAIE,KAAK,CAACF,KAAD,CAAT,EAAkB,OAAO,KAAP;AAClB,SACE,CAACD,WAAW,CAACC,KAAK,CAACI,OAAP,CAAZ,IAA+B,CAACL,WAAW,CAACC,KAAK,CAACK,EAAP,CAA3C,IAAyD,CAACN,WAAW,CAACC,KAAK,CAACM,MAAP,CAArE,IAAuF,CAACP,WAAW,CAACC,KAAK,CAACO,MAAP,CADrG;AAGD;AAED;;;;AAGA,OAAM,SAAUC,wBAAV,CAAmCR,KAAnC,EAA6C;AACjD,MAAIE,KAAK,CAACF,KAAD,CAAT,EAAkB,OAAO,KAAP;AAClB,SACE,CAACD,WAAW,CAACC,KAAK,CAACI,OAAP,CAAZ,IAA+B,CAACL,WAAW,CAACC,KAAK,CAACK,EAAP,CAA3C,KAA0D,CAACN,WAAW,CAACC,KAAK,CAACS,MAAP,CAAZ,IAA8B,CAACV,WAAW,CAACC,KAAK,CAACU,KAAP,CAApG,CADF;AAGD;AAED;;;;AAGA,OAAM,SAAUC,oBAAV,CAA+BX,KAA/B,EAA0C;AAC9C,MAAIE,KAAK,CAACF,KAAD,CAAT,EAAkB,OAAO,KAAP;AAClB,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BY,MAAM,CAACC,MAAP,CAAchB,kBAAd,EAAkCiB,QAAlC,CAA2Cd,KAA3C,CAApC;AACD;AAED;;;;AAGA,OAAM,SAAUe,kBAAV,CAA6Bf,KAA7B,EAAwC;AAC5C,MAAIE,KAAK,CAACF,KAAD,CAAT,EAAkB,OAAO,KAAP;AAClB,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BY,MAAM,CAACC,MAAP,CAAcf,YAAd,EAA4BgB,QAA5B,CAAqCd,KAArC,CAApC;AACD;AAED;;;;AAGA,OAAM,SAAUgB,OAAV,CAAkBhB,KAAlB,EAA6B;AACjC,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;;AAEZ,OAAK,IAAMiB,GAAX,IAAkBjB,KAAlB,EAAyB;AACvB;AACA,QAAIY,MAAM,CAACM,cAAP,CAAsBC,IAAtB,CAA2BnB,KAA3B,EAAkCiB,GAAlC,CAAJ,EAA4C;AAC1C,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","names":["MagicPayloadMethod","RPCErrorCode","isUndefined","value","isNull","isNil","isJsonRpcRequestPayload","jsonrpc","id","method","params","isJsonRpcResponsePayload","result","error","isMagicPayloadMethod","Object","values","includes","isJsonRpcErrorCode","isEmpty","key","hasOwnProperty","call"],"sourceRoot":"","sources":["../../../src/util/type-guards.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}