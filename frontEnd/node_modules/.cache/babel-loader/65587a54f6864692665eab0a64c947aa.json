{"ast":null,"code":"import EventEmitter from \"eventemitter3\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { IJsonRpcConnection } from \"@walletconnect/jsonrpc-types\";\nimport { formatJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport class SignerConnection extends IJsonRpcConnection {\n  constructor(opts) {\n    super();\n    this.events = new EventEmitter();\n    this.accounts = [];\n    this.chainId = 1;\n    this.pending = false;\n    this.bridge = \"https://bridge.walletconnect.org\";\n    this.qrcode = true;\n    this.qrcodeModalOptions = undefined;\n    this.opts = opts;\n    this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n    this.wc = this.register(opts);\n  }\n\n  get connected() {\n    return typeof this.wc !== \"undefined\" && this.wc.connected;\n  }\n\n  get connecting() {\n    return this.pending;\n  }\n\n  get connector() {\n    this.wc = this.register(this.opts);\n    return this.wc;\n  }\n\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n\n  async open(chainId) {\n    if (this.connected) {\n      this.onOpen();\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      this.on(\"error\", err => {\n        reject(err);\n      });\n      this.on(\"open\", () => {\n        resolve();\n      });\n      this.create(chainId);\n    });\n  }\n\n  async close() {\n    if (typeof this.wc === \"undefined\") return;\n\n    if (this.wc.connected) {\n      this.wc.killSession();\n    }\n\n    this.onClose();\n  }\n\n  async send(payload) {\n    this.wc = this.register(this.opts);\n    if (!this.connected) await this.open();\n    this.sendPayload(payload).then(res => this.events.emit(\"payload\", res)).catch(e => this.events.emit(\"payload\", formatJsonRpcError(payload.id, e.message)));\n  }\n\n  register(opts) {\n    if (this.wc) return this.wc;\n    this.opts = opts || this.opts;\n    this.bridge = (opts === null || opts === void 0 ? void 0 : opts.connector) ? opts.connector.bridge : (opts === null || opts === void 0 ? void 0 : opts.bridge) || \"https://bridge.walletconnect.org\";\n    this.qrcode = typeof (opts === null || opts === void 0 ? void 0 : opts.qrcode) === \"undefined\" || opts.qrcode !== false;\n    this.chainId = typeof (opts === null || opts === void 0 ? void 0 : opts.chainId) !== \"undefined\" ? opts.chainId : this.chainId;\n    this.qrcodeModalOptions = opts === null || opts === void 0 ? void 0 : opts.qrcodeModalOptions;\n    const connectorOpts = {\n      bridge: this.bridge,\n      qrcodeModal: this.qrcode ? QRCodeModal : undefined,\n      qrcodeModalOptions: this.qrcodeModalOptions,\n      storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n      signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    };\n    this.wc = typeof (opts === null || opts === void 0 ? void 0 : opts.connector) !== \"undefined\" ? opts.connector : new WalletConnect(connectorOpts);\n\n    if (typeof this.wc === \"undefined\") {\n      throw new Error(\"Failed to register WalletConnect connector\");\n    }\n\n    if (this.wc.accounts.length) {\n      this.accounts = this.wc.accounts;\n    }\n\n    if (this.wc.chainId) {\n      this.chainId = this.wc.chainId;\n    }\n\n    this.registerConnectorEvents();\n    return this.wc;\n  }\n\n  onOpen(wc) {\n    this.pending = false;\n\n    if (wc) {\n      this.wc = wc;\n    }\n\n    this.events.emit(\"open\");\n  }\n\n  onClose() {\n    this.pending = false;\n\n    if (this.wc) {\n      this.wc = undefined;\n    }\n\n    this.events.emit(\"close\");\n  }\n\n  onError(payload) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Failed or Rejected Request\";\n    let code = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -32000;\n    const errorPayload = {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      error: {\n        code,\n        message\n      }\n    };\n    this.events.emit(\"payload\", errorPayload);\n    return errorPayload;\n  }\n\n  create(chainId) {\n    this.wc = this.register(this.opts);\n    this.chainId = chainId || this.chainId;\n    if (this.connected || this.pending) return;\n    this.pending = true;\n    this.registerConnectorEvents();\n    this.wc.createSession({\n      chainId: this.chainId\n    }).then(() => this.events.emit(\"created\")).catch(e => this.events.emit(\"error\", e));\n  }\n\n  registerConnectorEvents() {\n    this.wc = this.register(this.opts);\n    this.wc.on(\"connect\", err => {\n      var _a, _b;\n\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n\n      this.accounts = ((_a = this.wc) === null || _a === void 0 ? void 0 : _a.accounts) || [];\n      this.chainId = ((_b = this.wc) === null || _b === void 0 ? void 0 : _b.chainId) || this.chainId;\n      this.onOpen();\n    });\n    this.wc.on(\"disconnect\", err => {\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n\n      this.onClose();\n    });\n    this.wc.on(\"modal_closed\", () => {\n      this.events.emit(\"error\", new Error(\"User closed modal\"));\n    });\n    this.wc.on(\"session_update\", (error, payload) => {\n      const {\n        accounts,\n        chainId\n      } = payload.params[0];\n\n      if (!this.accounts || accounts && this.accounts !== accounts) {\n        this.accounts = accounts;\n        this.events.emit(\"accountsChanged\", accounts);\n      }\n\n      if (!this.chainId || chainId && this.chainId !== chainId) {\n        this.chainId = chainId;\n        this.events.emit(\"chainChanged\", chainId);\n      }\n    });\n  }\n\n  async sendPayload(payload) {\n    this.wc = this.register(this.opts);\n\n    try {\n      const response = await this.wc.unsafeSend(payload);\n      return this.sanitizeResponse(response);\n    } catch (error) {\n      return this.onError(payload, error.message);\n    }\n  }\n\n  sanitizeResponse(response) {\n    return typeof response.error !== \"undefined\" && typeof response.error.code === \"undefined\" ? formatJsonRpcError(response.id, response.error.message) : response;\n  }\n\n}\nexport default SignerConnection;","map":{"version":3,"mappings":"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","names":["EventEmitter","WalletConnect","QRCodeModal","IJsonRpcConnection","formatJsonRpcError","SignerConnection","constructor","opts","undefined","chainId","wc","register","connected","connecting","pending","connector","on","event","listener","events","once","off","removeListener","open","onOpen","Promise","resolve","reject","err","create","close","killSession","onClose","send","payload","sendPayload","then","res","emit","catch","e","id","message","bridge","qrcode","qrcodeModalOptions","connectorOpts","qrcodeModal","storageId","signingMethods","clientMeta","Error","accounts","length","registerConnectorEvents","onError","code","errorPayload","jsonrpc","error","createSession","_a","_b","params","response","unsafeSend","sanitizeResponse"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}