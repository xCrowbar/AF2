{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\nexport function repeat(count) {\n  if (count === void 0) {\n    count = -1;\n  }\n\n  return function (source) {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nvar RepeatOperator = /*@__PURE__*/function () {\n  function RepeatOperator(count, source) {\n    this.count = count;\n    this.source = source;\n  }\n\n  RepeatOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  };\n\n  return RepeatOperator;\n}();\n\nvar RepeatSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RepeatSubscriber, _super);\n\n  function RepeatSubscriber(destination, count, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.count = count;\n    _this.source = source;\n    return _this;\n  }\n\n  RepeatSubscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      var _a = this,\n          source = _a.source,\n          count = _a.count;\n\n      if (count === 0) {\n        return _super.prototype.complete.call(this);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  };\n\n  return RepeatSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AAEA,SAASC,UAAT,QAAsB,eAAtB;AA2DA,SAAMC,KAAN,QAAsB,qBAAtB;OAA0B;AACxB,WAAO,UAAC,CAAR,EAAQ;AACNC,SAAI,IAAK,CAAT;;;SAEC;aAAU,KAAK,GAAG;AACjB,aAAOD,OAAP;AACD,WAAM;AACL,aAAOE,MAAM,CAACC,IAAP,CAAY,IAAIC,cAAJ,CAAmB,EAAnB,EAAmBF,MAAnB,CAAZ,CAAP;AACD,KAFM,MAGP;AACH;AAED;AACE;;;kBACoB,GAAM,aAAe;AACzC,WAACE,cAAD,CAACH,KAAD,EAACC,MAAD,EAAC;AACD;AACE,kBAAcA,MAAd;AACD;;AACHE,2BAACC,IAAD,GAAC;AAAA;AAOD,GAPA;;AAOkC;CAZS;;oBAgBvC,gBAAM,kBAAY;SAFA,6BAAaC;;WACbC,iBAAqBC;;;AAExCC;AACDA;AACE,WAAKA,KAAL;;;kBAEM,CAAKC,UAAQC;cACfC,WAAO;UACRC;UAAAX;UAAAD;;eAAU,KAAK,GAAG;AACjB,eAAKK,MAAQ,UAAR,CAAkBK,QAAlB,CAAkBN,IAAlB,CAAkB,IAAlB,CAAL;AACD,aACD,IAAOJ,QAAU,EAAjB,EAAqB;AACtB;AACF;;AACHC,uBAAC,6BAAD;AAjBkC;;;;CAIxB","names":["tslib_1","Subscriber","empty","count","source","lift","RepeatOperator","call","_super","RepeatSubscriber","destination","_this","prototype","complete","isStopped","_a"],"sources":["../../../src/internal/operators/repeat.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}