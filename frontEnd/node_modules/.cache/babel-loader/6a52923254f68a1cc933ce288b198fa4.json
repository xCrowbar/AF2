{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport User from \"../../SmartContracts/Users/Users\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport Web3 from 'web3';\nexport async function AccountCheck(props) {\n  _s();\n\n  const user = new User();\n  const web3 = new Web3(window.ethereum);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const accounts = await web3.eth.getAccounts().then(res => {\n    if (!res) return null;\n  });\n  navigate('/'); // let res=await user.isUser()\n}\n\n_s(AccountCheck, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = AccountCheck;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountCheck\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/signin/userLoginCheck.js"],"names":["User","useNavigate","useLocation","Web3","AccountCheck","props","user","web3","window","ethereum","navigate","location","accounts","eth","getAccounts","then","res"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,kCAAjB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,OAAO,eAAeC,YAAf,CAA4BC,KAA5B,EAAkC;AAAA;;AACrC,QAAMC,IAAI,GAAG,IAAIN,IAAJ,EAAb;AACA,QAAMO,IAAI,GAAG,IAAIJ,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAb;AACA,QAAMC,QAAQ,GAACT,WAAW,EAA1B;AACA,QAAMU,QAAQ,GAACT,WAAW,EAA1B;AACA,QAAMU,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,WAAT,GAAuBC,IAAvB,CAA6BC,GAAD,IAAO;AAClD,QAAG,CAACA,GAAJ,EACI,OAAO,IAAP;AAAY,GAFD,CAAvB;AAGAN,EAAAA,QAAQ,CAAC,GAAD,CAAR,CARqC,CASlC;AAGN;;GAZqBN,Y;UAGHH,W,EACAC,W;;;KAJGE,Y;AAYrB","sourcesContent":["import User from \"../../SmartContracts/Users/Users\";\nimport { useNavigate,useLocation } from \"react-router-dom\";\nimport Web3 from 'web3';\n\n\nexport async function AccountCheck(props){\n    const user = new User();\n    const web3 = new Web3(window.ethereum);\n    const navigate=useNavigate()\n    const location=useLocation();\n    const accounts = await web3.eth.getAccounts().then((res)=>{\n            if(!res)\n                return null});\n    navigate('/')\n       // let res=await user.isUser()\n\n\n};"]},"metadata":{},"sourceType":"module"}