{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseTransaction = void 0;\n\nvar common_1 = __importStar(require(\"@ethereumjs/common\"));\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\n\n\nvar BaseTransaction =\n/** @class */\nfunction () {\n  function BaseTransaction(txData) {\n    this.cache = {\n      hash: undefined,\n      dataFee: undefined\n    };\n    /**\n     * List of tx type defining EIPs,\n     * e.g. 1559 (fee market) and 2930 (access lists)\n     * for FeeMarketEIP1559Transaction objects\n     */\n\n    this.activeCapabilities = [];\n    /**\n     * The default chain the tx falls back to if no Common\n     * is provided and if the chain can't be derived from\n     * a passed in chainId (only EIP-2718 typed txs) or\n     * EIP-155 signature (legacy txs).\n     *\n     * @hidden\n     */\n\n    this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n    /**\n     * The default HF if the tx type is active on that HF\n     * or the first greater HF where the tx is active.\n     *\n     * @hidden\n     */\n\n    this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n    var nonce = txData.nonce,\n        gasLimit = txData.gasLimit,\n        to = txData.to,\n        value = txData.value,\n        data = txData.data,\n        v = txData.v,\n        r = txData.r,\n        s = txData.s,\n        type = txData.type;\n    this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n    var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n    var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n    var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n    var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n    this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n    this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n    this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n    this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n    this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n    this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n    this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n    this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n\n    this._validateCannotExceedMaxInteger({\n      value: this.value,\n      r: this.r,\n      s: this.s\n    }); // geth limits gasLimit to 2^64-1\n\n\n    this._validateCannotExceedMaxInteger({\n      gasLimit: this.gasLimit\n    }, 64); // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n\n\n    this._validateCannotExceedMaxInteger({\n      nonce: this.nonce\n    }, 64, true);\n  }\n\n  Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n    /**\n     * Alias for {@link BaseTransaction.type}\n     *\n     * @deprecated Use `type` instead\n     */\n    get: function () {\n      return this.type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTransaction.prototype, \"type\", {\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */\n    get: function () {\n      return this._type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n\n  BaseTransaction.prototype.supports = function (capability) {\n    return this.activeCapabilities.includes(capability);\n  };\n\n  BaseTransaction.prototype.validate = function (stringError) {\n    if (stringError === void 0) {\n      stringError = false;\n    }\n\n    var errors = [];\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n\n    return stringError ? errors : errors.length === 0;\n  };\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n\n\n  BaseTransaction.prototype.getBaseFee = function () {\n    var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n    }\n\n    return fee;\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n\n\n  BaseTransaction.prototype.getDataFee = function () {\n    var txDataZero = this.common.param('gasPrices', 'txDataZero');\n    var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n    var cost = 0;\n\n    for (var i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? cost += txDataZero : cost += txDataNonZero;\n    }\n\n    cost = new ethereumjs_util_1.BN(cost);\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      var dataLength = Math.ceil(this.data.length / 32);\n      var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n      cost.iadd(initCodeCost);\n    }\n\n    return cost;\n  };\n  /**\n   * If the tx's `to` is to the creation address\n   */\n\n\n  BaseTransaction.prototype.toCreationAddress = function () {\n    return this.to === undefined || this.to.buf.length === 0;\n  };\n\n  BaseTransaction.prototype.isSigned = function () {\n    var _a = this,\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\n   * Determines if the signature is valid\n   */\n\n\n  BaseTransaction.prototype.verifySignature = function () {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      var publicKey = this.getSenderPublicKey();\n      return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Returns the sender's address\n   */\n\n\n  BaseTransaction.prototype.getSenderAddress = function () {\n    return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n  };\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n\n\n  BaseTransaction.prototype.sign = function (privateKey) {\n    if (privateKey.length !== 32) {\n      var msg = this._errorMsg('Private key must be 32 bytes in length.');\n\n      throw new Error(msg);\n    } // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n\n\n    var hackApplied = false;\n\n    if (this.type === 0 && this.common.gteHardfork('spuriousDragon') && !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n      this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n      hackApplied = true;\n    }\n\n    var msgHash = this.getMessageToSign(true);\n\n    var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey),\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    var tx = this._processSignature(v, r, s); // Hack part 2\n\n\n    if (hackApplied) {\n      var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1);\n      }\n    }\n\n    return tx;\n  };\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n\n\n  BaseTransaction.prototype._getCommon = function (common, chainId) {\n    var _a; // Chain ID provided\n\n\n    if (chainId) {\n      var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n\n          throw new Error(msg);\n        } // Common provided, chain ID does match\n        // -> Return provided Common\n\n\n        return common.copy();\n      } else {\n        if (common_1.default.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new common_1.default({\n            chain: chainIdBN,\n            hardfork: this.DEFAULT_HARDFORK\n          });\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n            name: 'custom-chain',\n            networkId: chainIdBN,\n            chainId: chainIdBN\n          }, this.DEFAULT_HARDFORK);\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({\n        chain: this.DEFAULT_CHAIN,\n        hardfork: this.DEFAULT_HARDFORK\n      });\n    }\n  };\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n\n\n  BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n    var e_1, _a;\n\n    if (bits === void 0) {\n      bits = 256;\n    }\n\n    if (cannotEqual === void 0) {\n      cannotEqual = false;\n    }\n\n    try {\n      for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            key = _d[0],\n            value = _d[1];\n\n        switch (bits) {\n          case 64:\n            if (cannotEqual) {\n              if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n\n                throw new Error(msg);\n              }\n            } else {\n              if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n\n                throw new Error(msg);\n              }\n            }\n\n            break;\n\n          case 256:\n            if (cannotEqual) {\n              if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n\n                throw new Error(msg);\n              }\n            } else {\n              if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n\n                throw new Error(msg);\n              }\n            }\n\n            break;\n\n          default:\n            {\n              var msg = this._errorMsg('unimplemented bits value');\n\n              throw new Error(msg);\n            }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n\n\n  BaseTransaction.prototype._getSharedErrorPostfix = function () {\n    var hash = '';\n\n    try {\n      hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n    } catch (e) {\n      hash = 'error';\n    }\n\n    var isSigned = '';\n\n    try {\n      isSigned = this.isSigned().toString();\n    } catch (e) {\n      hash = 'error';\n    }\n\n    var hf = '';\n\n    try {\n      hf = this.common.hardfork();\n    } catch (e) {\n      hf = 'error';\n    }\n\n    var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n    postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n    return postfix;\n  };\n\n  return BaseTransaction;\n}();\n\nexports.BaseTransaction = BaseTransaction;","map":{"version":3,"mappings":"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","names":["txData","hash","undefined","dataFee","common_1","Mainnet","Istanbul","gasLimit","to","value","data","v","r","s","type","_type","ethereumjs_util_1","toNumber","toB","vB","rB","sB","nonce","length","_validateCannotExceedMaxInteger","Object","BaseTransaction","capability","activeCapabilities","includes","stringError","errors","getBaseFee","gt","push","concat","isSigned","verifySignature","fee","getDataFee","addn","common","param","gteHardfork","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","isActivatedEIP","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","publicKey","getSenderPublicKey","e","privateKey","msg","_errorMsg","Error","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","tx","_processSignature","index","indexOf","splice","chainId","chainIdBN","eq","copy","isSupportedChainId","chain","hardfork","DEFAULT_HARDFORK","forCustomChain","DEFAULT_CHAIN","name","networkId","_a","values","bits","cannotEqual","entries","_c","key","gte","toString","hf","postfix","exports"],"sourceRoot":"","sources":["../src/baseTransaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}