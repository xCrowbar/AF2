{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //import Web3 from \"web3\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext();\nexport const UsercheckProvider = () => {\n  _s();\n\n  const [account, setAccount] = useState('');\n\n  async function checkAccount() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      return accounts;\n    }\n  }\n\n  useEffect(() => {\n    setAccount(\"nwcncdcbjkbjkcs\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      account,\n      setAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsercheckProvider, \"uvVbIIk91/2HpqdLbrA7lBpBOUg=\");\n\n_c = UsercheckProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsercheckProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","UserContext","createContext","UsercheckProvider","account","setAccount","checkAccount","window","ethereum","accounts","request","method","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CACA;;;AAEA,OAAO,MAAMC,WAAW,gBAACH,KAAK,CAACI,aAAN,EAAlB;AAEP,OAAO,MAAMC,iBAAiB,GAAC,MAAI;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AAED,iBAAeM,YAAf,GAA6B;AACxB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC7CC,QAAAA,MAAM,EAAE;AADqC,OAAxB,CAAvB;AAGA,aAAOF,QAAP;AAEP;AACJ;;AACGV,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,UAAU,CAAC,iBAAD,CAAV;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACD,MAAAA,OAAD;AAASC,MAAAA;AAAT,KAA7B;AAAA,cACKO;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBM;;GAAMT,iB;;KAAAA,iB","sourcesContent":["import React, { useEffect,useState } from \"react\";\n//import Web3 from \"web3\";\n\nexport const UserContext=React.createContext();\n\nexport const UsercheckProvider=()=>{\n    const [account, setAccount] = useState('');\n\n   async function checkAccount(){\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({\n              method: \"eth_accounts\",\n            });\n            return accounts;\n            \n    }\n}\n    useEffect(()=>{\n        setAccount(\"nwcncdcbjkbjkcs\");  \n    },[])\n\n    return (\n        <UserContext.Provider value={{account,setAccount}}>\n            {children}\n        </UserContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}