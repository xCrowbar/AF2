{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"../..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //const [account, setAccount] = useState();\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate\n  } = useWeb3React();\n  const [user, setUser] = useState();\n\n  async function checkAccount() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      return accounts[0];\n    }\n  }\n\n  async function connect() {\n    try {\n      await activate(injected);\n      setUser(account);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  useEffect(() => {\n    connect(); //setAccount(checkAccount());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserContextProvider, \"I8lYCxj43lZlii3gNxDJhAcsdEM=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","createContext","useWeb3React","injected","UserContext","UserContextProvider","children","active","account","library","connector","activate","deactivate","user","setUser","checkAccount","window","ethereum","accounts","request","method","connect","ex","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,aAAnC,QAAwD,OAAxD;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,gBAACH,aAAa,CAAC,EAAD,CAA/B;AAEP,OAAO,MAAMI,mBAAmB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC5C;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA;AAAjD,MAAgEV,YAAY,EAAlF;AACC,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAed,QAAQ,EAA7B;;AACD,iBAAee,YAAf,GAA6B;AACxB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMC,QAAQ,GAAE,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,CAAtB;AACA,aAAOF,QAAQ,CAAC,CAAD,CAAf;AAGH;AACJ;;AACD,iBAAeG,OAAf,GAAyB;AACrB,QAAI;AACF,YAAMV,QAAQ,CAACR,QAAD,CAAd;AACAW,MAAAA,OAAO,CAACN,OAAD,CAAP;AACD,KAHD,CAGE,OAAOc,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD;AACF;;AAEHvB,EAAAA,SAAS,CAAC,MAAI;AACVsB,IAAAA,OAAO,GADG,CAGV;AAEF,GALO,EAKN,EALM,CAAT;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAA7B;AAAA,cACKf;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCM;;GAAMD,mB;UAE4DH,Y;;;KAF5DG,mB","sourcesContent":["import React, { useEffect,useState,createContext } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"../..\";\n\nexport const UserContext=createContext({});\n\nexport const UserContextProvider=({children})=>{\n   //const [account, setAccount] = useState();\n   const { active, account, library, connector, activate, deactivate } = useWeb3React()\n    const [user,setUser]=useState();\n   async function checkAccount(){\n        if (window.ethereum) {\n            const accounts= await window.ethereum.request({ method: 'eth_accounts' });\n            return accounts[0];\n\n           \n        }\n    }\n    async function connect() {\n        try {\n          await activate(injected)\n          setUser(account)\n        } catch (ex) {\n          console.log(ex)\n        }\n      }\n\n    useEffect(()=>{\n        connect();\n        \n        //setAccount(checkAccount());\n\n     },[])\n\n    return (\n        <UserContext.Provider value={{}}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}