{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n  return function (source) {\n    return source.lift(new SampleOperator(notifier));\n  };\n}\n\nvar SampleOperator = /*@__PURE__*/function () {\n  function SampleOperator(notifier) {\n    this.notifier = notifier;\n  }\n\n  SampleOperator.prototype.call = function (subscriber, source) {\n    var sampleSubscriber = new SampleSubscriber(subscriber);\n    var subscription = source.subscribe(sampleSubscriber);\n    subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n    return subscription;\n  };\n\n  return SampleOperator;\n}();\n\nvar SampleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SampleSubscriber, _super);\n\n  function SampleSubscriber() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.hasValue = false;\n    return _this;\n  }\n\n  SampleSubscriber.prototype._next = function (value) {\n    this.value = value;\n    this.hasValue = true;\n  };\n\n  SampleSubscriber.prototype.notifyNext = function () {\n    this.emitValue();\n  };\n\n  SampleSubscriber.prototype.notifyComplete = function () {\n    this.emitValue();\n  };\n\n  SampleSubscriber.prototype.emitValue = function () {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  };\n\n  return SampleSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":";AAKA,OAAO,KAAEA,OAAT,MAAS,OAAT;AA0CA,SAAMC,qBAAN,EAAmDC,cAAnD,EAAmDC,qBAAnD,QAAmD,mBAAnD;OACE,SAAOC,MAAP,CAAQC,QAAR,EAAkC;AACnC;AAAA;AAAA;AAED;;IACEC,8BAA6C;WAAzBA,yBAAyB;AAC5C;AAED;;gBACQ,WAAgBC,OAAO,sBAAiBC,MAAjB,EAA6B;AAC1D,QAAMC,gBAAe,OAAOC,gBAAP,CAAiBC,UAAjB,CAArB;AACA,oBAAgB,GAACH,iBAAmBC,gBAAnB,CAAjB;AACAG,gBAAO,IAAP,CAAOV,cAAa,4DAApB;AACD;AACH;;AAVA,SAUCI,cAVD;AAiBA,CAhB+C;;IAgBVI,0CAA2BG,MAA3B,EAA2B;AAAhEb;;WAAAU;AAEU,sBAAoB,KAAM,IAA1B,IAA0BG,6BAA1B,IAA0B,IAA1B;;;AAqBT;AAnBW;;kBACE,CAAGC,UAAMC;AACnB,SAAKC,KAAL,GAAaA,KAAb;AACD;AAED;;kBACO,WAAYC;AAClB;AAED;;kBACO,WAAYC;AAClB;AAED;;kBACW,WAAUC;QACjB,KAAKC,UAAQ;AACb,WAAKA,QAAL,GAAgB,KAAhB;AACD;AACF;AACH;;AAvBqC;CAAA","names":["tslib_1","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","sample","notifier","SampleOperator","call","source","sampleSubscriber","SampleSubscriber","subscriber","subscription","_super","prototype","_next","value","notifyNext","notifyComplete","emitValue","hasValue"],"sources":["../../../src/internal/operators/sample.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}