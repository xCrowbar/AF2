{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/metamaskLogin/metamaskLogin.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HomeNav } from \"../Navbar/homeNav\";\nimport metamaskIcon from '../../images/metamask.png';\nimport './metamaskLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MetamaskLogin() {\n  _s();\n\n  const [account, setAccount] = useState();\n  const navigate = useNavigate();\n\n  const enterPlatform = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(res => navigate(\"/\"));\n    } else {\n      alert(\"INSTALL METAMASK\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entra con Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginButton\",\n        onClick: enterPlatform,\n        children: \"Entra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n}\n\n_s(MetamaskLogin, \"9gorf/7wVM/TqBaFtRHGaWZ7hw0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MetamaskLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetamaskLogin\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/metamaskLogin/metamaskLogin.js"],"names":["useState","useNavigate","HomeNav","metamaskIcon","MetamaskLogin","account","setAccount","navigate","enterPlatform","window","ethereum","request","method","then","res","alert"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,qBAAP;;AAGA,eAAe,SAASC,aAAT,GAAwB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBN,QAAQ,EAAnC;AACA,QAAMO,QAAQ,GAACN,WAAW,EAA1B;;AACA,QAAMO,aAAa,GAAC,MAAI;AAEpB,QAAGC,MAAM,CAACC,QAAV,EAAmB;AACjBD,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,EACGC,IADH,CACSC,GAAD,IAAOP,QAAQ,CAAC,GAAD,CADvB;AAEC,KAHH,MAII;AAACQ,MAAAA,KAAK,CAAC,kBAAD,CAAL;AAA0B;AAEnC,GARA;;AASA,sBACQ;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEP,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAWH;;GAvBuBJ,a;UAELH,W;;;KAFKG,a","sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HomeNav } from \"../Navbar/homeNav\";\nimport metamaskIcon from '../../images/metamask.png'\nimport './metamaskLogin.css'\n\n\nexport default function MetamaskLogin(){\n    const [account,setAccount]=useState();\n    const navigate=useNavigate();\n    const enterPlatform=()=>{\n\n        if(window.ethereum){\n          window.ethereum.request({ method: \"eth_requestAccounts\"} )\n            .then((res)=>navigate(\"/\"))\n          }\n        else{alert(\"INSTALL METAMASK\")}\n\n   }\n    return (\n            <div>\n              <HomeNav/>\n              <div className=\"loginForm\">\n                \n                <h2>Entra con Metamask</h2>\n                <button className=\"loginButton\" onClick={enterPlatform}>Entra</button>\n\n              </div>\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}