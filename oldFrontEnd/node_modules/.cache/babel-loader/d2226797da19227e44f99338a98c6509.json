{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from \"react\";\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\"; //import Web3 from \"web3\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n\n  async function checkAccount() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      return accounts;\n    }\n  }\n\n  const [account, setAccount] = useState(checkAccount().then(async res => {\n    if (res.length > 0) return await res[0];else return undefined;\n  }));\n  useEffect(() => {\n    console.log(account);\n    /*console.log(\"vado\")\n    let res=checkAccount();\n    res.then((res)=>{\n        console.log(res)\n        if(res.length>0){\n            setAccount(res[0]);\n            console.log(account);\n        }\n        else return\n    })\n    //else return\n    */\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      account,\n      setAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserContextProvider, \"dPvmXx+sU1B2fQhwEftes6sK9EU=\");\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","createContext","unstable_renderSubtreeIntoContainer","UserContext","UserContextProvider","children","checkAccount","window","ethereum","accounts","request","method","account","setAccount","then","res","length","undefined","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,aAAnC,QAAwD,OAAxD;AACA,SAASC,mCAAT,QAAoD,WAApD,C,CACA;;;AAEA,OAAO,MAAMC,WAAW,gBAACF,aAAa,CAAC,EAAD,CAA/B;AAEP,OAAO,MAAMG,mBAAmB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;;AAE3C,iBAAeC,YAAf,GAA6B;AACzB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC7CC,QAAAA,MAAM,EAAE;AADqC,OAAxB,CAAvB;AAGA,aAAOF,QAAP;AAGP;AACJ;;AACG,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACM,YAAY,GAAGQ,IAAf,CAAoB,MAAOC,GAAP,IAAa;AACpE,QAAGA,GAAG,CAACC,MAAJ,GAAW,CAAd,EACI,OAAO,MAAMD,GAAG,CAAC,CAAD,CAAhB,CADJ,KAEK,OAAOE,SAAP;AACR,GAJsC,CAAD,CAAtC;AAOAlB,EAAAA,SAAS,CAAC,MAAI;AACVmB,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,GAdO,EAcN,CAACA,OAAD,CAdM,CAAT;AAgBA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACA,MAAAA,OAAD;AAASC,MAAAA;AAAT,KAA7B;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import React, { useEffect,useState,createContext } from \"react\";\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\n//import Web3 from \"web3\";\n\nexport const UserContext=createContext({});\n\nexport const UserContextProvider=({children})=>{\n\n    async function checkAccount(){\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({\n              method: \"eth_accounts\",\n            })\n            return accounts;\n            \n            \n    }\n}\n    const [account, setAccount] = useState(checkAccount().then(async (res)=>{\n        if(res.length>0)\n            return await res[0];\n        else return undefined;\n    }));\n\n\n    useEffect(()=>{\n        console.log(account)\n        /*console.log(\"vado\")\n        let res=checkAccount();\n        res.then((res)=>{\n            console.log(res)\n            if(res.length>0){\n                setAccount(res[0]);\n                console.log(account);\n            }\n            else return\n        })\n        //else return\n*/\n     },[account])\n\n    return (\n        <UserContext.Provider value={{account,setAccount}}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}