{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport User from \"../../SmartContracts/Users/Users\"; //import Web3 from \"web3\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext({});\nexport const UsercheckProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [username, setUsername] = useState('nkvn');\n  const [account, setAccount] = useState('');\n\n  async function checkAccount() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      return accounts;\n    }\n  }\n\n  useEffect(() => {\n    let accounts = checkAccount();\n    if (accounts.length !== 0) setAccount(accounts[0]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      username,\n      account\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsercheckProvider, \"72ORYLATgXcm7GrFg0GDXWDBx3c=\");\n\n_c = UsercheckProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsercheckProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","User","UserContext","createContext","UsercheckProvider","children","username","setUsername","account","setAccount","checkAccount","window","ethereum","accounts","request","method","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,kCAAjB,C,CACA;;;AAGA,OAAO,MAAMC,WAAW,gBAACJ,KAAK,CAACK,aAAN,CAAoB,EAApB,CAAlB;AAGP,OAAO,MAAMC,iBAAiB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACzC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBP,QAAQ,CAAC,MAAD,CAArC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAED,iBAAeU,YAAf,GAA6B;AACxB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC7CC,QAAAA,MAAM,EAAE;AADqC,OAAxB,CAAvB;AAGA,aAAOF,QAAP;AAEP;AACJ;;AAIGd,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIc,QAAQ,GAACH,YAAY,EAAzB;AACA,QAAGG,QAAQ,CAACG,MAAT,KAAkB,CAArB,EACIP,UAAU,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAV;AAEP,GALQ,EAKP,EALO,CAAT;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHP,MAAAA,QADG;AAEHE,MAAAA;AAFG,KADX;AAAA,cAQKH;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAnCM;;GAAMD,iB;;KAAAA,iB","sourcesContent":["import React, { useEffect,useState } from \"react\";\nimport User from \"../../SmartContracts/Users/Users\";\n//import Web3 from \"web3\";\n\n\nexport const UserContext=React.createContext({});\n\n\nexport const UsercheckProvider=({children})=>{\n    const [username,setUsername]=useState('nkvn');\n    const [account, setAccount] = useState('');\n\n   async function checkAccount(){\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({\n              method: \"eth_accounts\",\n            });\n            return accounts;\n            \n    }\n}\n\n\n\n    useEffect(()=>{\n        let accounts=checkAccount();\n        if(accounts.length!==0)\n            setAccount(accounts[0]);\n        \n    },[])\n\n    return (\n        <UserContext.Provider\n            value={{\n                username,\n                account,\n\n\n            }}>\n\n            {children}\n        </UserContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}