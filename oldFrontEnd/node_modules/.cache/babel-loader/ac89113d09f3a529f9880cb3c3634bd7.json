{"ast":null,"code":"/* eslint-disable consistent-return, prefer-spread */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { MagicOutgoingWindowMessage } from '@magic-sdk/types';\nimport { BaseModule } from '../base-module';\nimport { createInvalidArgumentError, MagicRPCError, createSynchronousWeb3MethodWarning } from '../../core/sdk-exceptions';\nimport { createJsonRpcRequestPayload, standardizeJsonRpcRequestPayload, JsonRpcResponse } from '../../core/json-rpc';\nimport { createTypedEmitter } from '../../util/events';\n\nvar _a = createTypedEmitter(),\n    createBoundEmitterMethod = _a.createBoundEmitterMethod,\n    createChainingEmitterMethod = _a.createChainingEmitterMethod;\n/** */\n\n\nvar RPCProviderModule =\n/** @class */\nfunction (_super) {\n  __extends(RPCProviderModule, _super);\n\n  function RPCProviderModule() {\n    // Implements EIP 1193:\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isMagic = true;\n    _this.on = createChainingEmitterMethod('on', _this);\n    _this.once = createChainingEmitterMethod('once', _this);\n    _this.addListener = createChainingEmitterMethod('addListener', _this);\n    _this.off = createChainingEmitterMethod('off', _this);\n    _this.removeListener = createChainingEmitterMethod('removeListener', _this);\n    _this.removeAllListeners = createChainingEmitterMethod('removeAllListeners', _this);\n    _this.emit = createBoundEmitterMethod('emit');\n    _this.eventNames = createBoundEmitterMethod('eventNames');\n    _this.listeners = createBoundEmitterMethod('listeners');\n    _this.listenerCount = createBoundEmitterMethod('listenerCount');\n    return _this;\n  }\n  /* eslint-enable prettier/prettier */\n\n\n  RPCProviderModule.prototype.sendAsync = function (payload, onRequestComplete) {\n    if (!onRequestComplete) {\n      throw createInvalidArgumentError({\n        procedure: 'Magic.rpcProvider.sendAsync',\n        argument: 1,\n        expected: 'function',\n        received: onRequestComplete === null ? 'null' : typeof onRequestComplete\n      });\n    }\n\n    if (Array.isArray(payload)) {\n      this.transport.post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, payload.map(function (p) {\n        return standardizeJsonRpcRequestPayload(p);\n      })).then(function (batchResponse) {\n        onRequestComplete(null, batchResponse.map(function (response) {\n          return __assign(__assign({}, response.payload), {\n            error: response.hasError ? new MagicRPCError(response.payload.error) : null\n          });\n        }));\n      });\n    } else {\n      var finalPayload = standardizeJsonRpcRequestPayload(payload);\n      this.transport.post(this.overlay, MagicOutgoingWindowMessage.MAGIC_HANDLE_REQUEST, finalPayload).then(function (response) {\n        onRequestComplete(response.hasError ? new MagicRPCError(response.payload.error) : null, response.payload);\n      });\n    }\n  };\n  /* eslint-enable prettier/prettier */\n\n\n  RPCProviderModule.prototype.send = function (payloadOrMethod, onRequestCompleteOrParams) {\n    // Case #1\n    // Web3 >= 1.0.0-beta.38 calls `send` with method and parameters.\n    if (typeof payloadOrMethod === 'string') {\n      var payload = createJsonRpcRequestPayload(payloadOrMethod, Array.isArray(onRequestCompleteOrParams) ? onRequestCompleteOrParams : []);\n      return this.request(payload);\n    } // Case #2\n    // Web3 <= 1.0.0-beta.37 uses `send` with a callback for async queries.\n\n\n    if (Array.isArray(payloadOrMethod) || !!onRequestCompleteOrParams) {\n      /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n      this.sendAsync(payloadOrMethod, onRequestCompleteOrParams);\n      return;\n    } // Case #3\n    // Legacy synchronous methods (unsupported).\n\n\n    var warning = createSynchronousWeb3MethodWarning();\n    warning.log();\n    return new JsonRpcResponse(payloadOrMethod).applyError({\n      code: -32603,\n      message: warning.rawMessage\n    }).payload;\n  };\n\n  RPCProviderModule.prototype.enable = function () {\n    var requestPayload = createJsonRpcRequestPayload('eth_accounts');\n    return this.request(requestPayload);\n  };\n\n  return RPCProviderModule;\n}(BaseModule);\n\nexport { RPCProviderModule };","map":{"version":3,"mappings":"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","names":["MagicOutgoingWindowMessage","BaseModule","createInvalidArgumentError","MagicRPCError","createSynchronousWeb3MethodWarning","createJsonRpcRequestPayload","standardizeJsonRpcRequestPayload","JsonRpcResponse","createTypedEmitter","createBoundEmitterMethod","createChainingEmitterMethod","__extends","_this","RPCProviderModule","payload","onRequestComplete","procedure","argument","expected","received","Array","isArray","transport","post","overlay","MAGIC_HANDLE_REQUEST","map","p","then","batchResponse","response","error","hasError","finalPayload","payloadOrMethod","onRequestCompleteOrParams","request","sendAsync","warning","log","applyError","code","message","rawMessage","requestPayload"],"sourceRoot":"","sources":["../../../../src/modules/rpc-provider/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}