{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport User from \"../../SmartContracts/Users/Users\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext();\nexport const UsercheckProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [username, setUsername] = useState('nkvn');\n  const [account, setAccount] = useState('vdnnjk');\n  let [web3, setWeb3] = useState(null);\n  const user = new User();\n\n  async function checkAccount() {\n    let web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    const accounts = await web3.eth.getAccounts();\n    return accounts;\n  }\n\n  u;\n  /*seEffect(async()=>{\n     let accounts=checkAccount();\n     if(accounts.length===0)\n         return setAccount(0)\n     else if(user.isUser()){\n         let userData=user.getUser();\n         setUsername('pino');\n     }\n     else \n         return setUsername('')\n  },[])\n  */\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      username,\n      account,\n      setAccount,\n      setUsername\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsercheckProvider, \"/NfP1iI1XLVFf29haFqW3HOfY9s=\");\n\n_c = UsercheckProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsercheckProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","User","Web3","UserContext","createContext","UsercheckProvider","children","username","setUsername","account","setAccount","web3","setWeb3","user","checkAccount","window","ethereum","accounts","eth","getAccounts","u"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAGA,OAAO,MAAMC,WAAW,gBAACL,KAAK,CAACM,aAAN,EAAlB;AAGP,OAAO,MAAMC,iBAAiB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACzC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,MAAD,CAArC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,QAAD,CAAtC;AACA,MAAI,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMa,IAAI,GAAE,IAAIZ,IAAJ,EAAZ;;AAEA,iBAAea,YAAf,GAA6B;AACzB,QAAIH,IAAI,GAAG,IAAIT,IAAJ,CAASa,MAAM,CAACC,QAAhB,CAAX;AACAJ,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,UAAMM,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,WAAOF,QAAP;AACH;;AAEDG,EAAAA,CAAC;AAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHb,MAAAA,QADG;AAEHE,MAAAA,OAFG;AAGHC,MAAAA,UAHG;AAIHF,MAAAA;AAJG,KADX;AAAA,cASKF;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAvCM;;GAAMD,iB;;KAAAA,iB","sourcesContent":["import React, { useEffect,useState } from \"react\";\nimport User from \"../../SmartContracts/Users/Users\";\nimport Web3 from \"web3\";\n\n\nexport const UserContext=React.createContext();\n\n\nexport const UsercheckProvider=({children})=>{\n    const [username,setUsername]=useState('nkvn');\n    const [account, setAccount] = useState('vdnnjk')\n    let [web3, setWeb3] = useState(null)\n    const user= new User();\n\n    async function checkAccount(){\n        let web3 = new Web3(window.ethereum)\n        setWeb3(web3)\n        const accounts = await web3.eth.getAccounts()\n        return accounts;\n    }\n\n    u/*seEffect(async()=>{\n        let accounts=checkAccount();\n        if(accounts.length===0)\n            return setAccount(0)\n        else if(user.isUser()){\n            let userData=user.getUser();\n            setUsername('pino');\n        }\n        else \n            return setUsername('')\n    },[])\n*/\n\n    return (\n        <UserContext.Provider\n            value={{\n                username,\n                account,\n                setAccount,\n                setUsername\n\n            }}>\n\n            {children}\n        </UserContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}