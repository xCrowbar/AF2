{"ast":null,"code":"import Web3 from \"web3\";\nexport default class Web3Istance {\n  constructor() {\n    this.web3 = \"\";\n\n    this.setProvider = () => {\n      if (typeof this.web3 !== undefined) return new Web3(this.web3.currentProvider);else return new Web3(window.ethereum);\n    };\n\n    this.web3 = this.setProvider();\n    this.utils = this.web3.utils;\n  }\n\n  async checkIfWalletIsConnected() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n\n      if (accounts.length > 0) {\n        const account = accounts[0];\n        return account;\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/Web3.js"],"names":["Web3","Web3Istance","constructor","web3","setProvider","undefined","currentProvider","window","ethereum","utils","checkIfWalletIsConnected","accounts","request","method","length","account"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,MAAMC,WAAN,CAAiB;AAC5BC,EAAAA,WAAW,GAAE;AACT,SAAKC,IAAL,GAAU,EAAV;;AACA,SAAKC,WAAL,GAAiB,MAAI;AACjB,UAAG,OAAO,KAAKD,IAAZ,KAAmBE,SAAtB,EACI,OAAO,IAAIL,IAAJ,CAAS,KAAKG,IAAL,CAAUG,eAAnB,CAAP,CADJ,KAGI,OAAO,IAAIN,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAP;AACP,KALD;;AAMA,SAAKL,IAAL,GAAU,KAAKC,WAAL,EAAV;AACA,SAAKK,KAAL,GAAW,KAAKN,IAAL,CAAUM,KAArB;AACH;;AAC6B,QAAxBC,wBAAwB,GAAE;AAC5B,QAAIH,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMG,QAAQ,GAAG,MAAMJ,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB;AAC7CC,QAAAA,MAAM,EAAE;AADqC,OAAxB,CAAvB;;AAIA,UAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvB,cAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,eAAOI,OAAP;AACD;AACF;AAEN;;AAxB2B","sourcesContent":["import Web3 from \"web3\";\n\nexport default class Web3Istance{\n    constructor(){\n        this.web3=\"\";\n        this.setProvider=()=>{\n            if(typeof this.web3!==undefined)\n                return new Web3(this.web3.currentProvider)\n            else \n                return new Web3(window.ethereum);\n        }\n        this.web3=this.setProvider();\n        this.utils=this.web3.utils;\n    }\n    async checkIfWalletIsConnected(){\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({\n              method: \"eth_accounts\",\n            });\n        \n            if (accounts.length > 0) {\n              const account = accounts[0];\n              return(account);\n            }\n          }\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}