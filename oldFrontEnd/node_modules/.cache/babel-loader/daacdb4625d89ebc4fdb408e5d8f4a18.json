{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport { IJsonRpcProvider, isJsonRpcResponse, formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport class JsonRpcProvider extends IJsonRpcProvider {\n  constructor(connection) {\n    super(connection);\n    this.events = new EventEmitter();\n    this.hasRegisteredEventListeners = false;\n    this.connection = this.setConnection(connection);\n\n    if (this.connection.connected) {\n      this.registerEventListeners();\n    }\n  }\n\n  async connect() {\n    let connection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.connection;\n    await this.open(connection);\n  }\n\n  async disconnect() {\n    await this.close();\n  }\n\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n\n  async request(request, context) {\n    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || []), context);\n  }\n\n  async requestStrict(request, context) {\n    return new Promise(async (resolve, reject) => {\n      if (!this.connection.connected) {\n        try {\n          await this.open();\n        } catch (e) {\n          reject(e);\n        }\n      }\n\n      this.events.on(`${request.id}`, response => {\n        if (isJsonRpcError(response)) {\n          reject(response.error.message);\n        } else {\n          resolve(response.result);\n        }\n      });\n\n      try {\n        await this.connection.send(request, context);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  setConnection() {\n    let connection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.connection;\n    return connection;\n  }\n\n  onPayload(payload) {\n    this.events.emit(\"payload\", payload);\n\n    if (isJsonRpcResponse(payload)) {\n      this.events.emit(`${payload.id}`, payload);\n    } else {\n      this.events.emit(\"message\", {\n        type: payload.method,\n        data: payload.params\n      });\n    }\n  }\n\n  async open() {\n    let connection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.connection;\n    if (this.connection === connection && this.connection.connected) return;\n    if (this.connection.connected) this.close();\n\n    if (typeof connection === \"string\") {\n      await this.connection.open(connection);\n      connection = this.connection;\n    }\n\n    this.connection = this.setConnection(connection);\n    await this.connection.open();\n    this.registerEventListeners();\n    this.events.emit(\"connect\");\n  }\n\n  async close() {\n    await this.connection.close();\n  }\n\n  registerEventListeners() {\n    if (this.hasRegisteredEventListeners) return;\n    this.connection.on(\"payload\", payload => this.onPayload(payload));\n    this.connection.on(\"close\", () => this.events.emit(\"disconnect\"));\n    this.connection.on(\"error\", error => this.events.emit(\"error\", error));\n    this.hasRegisteredEventListeners = true;\n  }\n\n}\nexport default JsonRpcProvider;","map":{"version":3,"mappings":"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","names":["EventEmitter","IJsonRpcProvider","isJsonRpcResponse","formatJsonRpcRequest","isJsonRpcError","JsonRpcProvider","constructor","connection","setConnection","connected","registerEventListeners","connect","open","disconnect","close","on","event","listener","events","once","off","removeListener","request","context","requestStrict","method","params","Promise","resolve","reject","e","id","response","error","message","result","send","onPayload","payload","emit","type","data","hasRegisteredEventListeners"],"sourceRoot":"","sources":["../../src/provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}