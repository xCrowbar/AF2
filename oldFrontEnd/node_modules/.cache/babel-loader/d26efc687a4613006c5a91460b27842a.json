{"ast":null,"code":"import EventEmitter from \"eventemitter3\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { getRpcUrl, signingMethods } from \"@walletconnect/utils\";\nimport { SignerConnection } from \"@walletconnect/signer-connection\";\n\nclass WalletConnectProvider {\n  constructor(opts) {\n    this.events = new EventEmitter();\n    this.rpc = {\n      infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId,\n      custom: opts === null || opts === void 0 ? void 0 : opts.rpc\n    };\n    this.signer = new JsonRpcProvider(new SignerConnection(opts));\n    const chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n    this.http = this.setHttpProvider(chainId);\n    this.registerEventListeners();\n  }\n\n  get connected() {\n    return this.signer.connection.connected;\n  }\n\n  get connector() {\n    return this.signer.connection.connector;\n  }\n\n  get accounts() {\n    return this.signer.connection.accounts;\n  }\n\n  get chainId() {\n    return this.signer.connection.chainId;\n  }\n\n  get rpcUrl() {\n    var _a;\n\n    return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n  }\n\n  async request(args) {\n    switch (args.method) {\n      case \"eth_requestAccounts\":\n        await this.connect();\n        return this.signer.connection.accounts;\n\n      case \"eth_accounts\":\n        return this.signer.connection.accounts;\n\n      case \"eth_chainId\":\n        return this.signer.connection.chainId;\n\n      default:\n        break;\n    }\n\n    if (signingMethods.includes(args.method)) {\n      return this.signer.request(args);\n    }\n\n    if (typeof this.http === \"undefined\") {\n      throw new Error(`Cannot request JSON-RPC method (${args.method}) without provided rpc url`);\n    }\n\n    return this.http.request(args);\n  }\n\n  sendAsync(args, callback) {\n    this.request(args).then(response => callback(null, response)).catch(error => callback(error, undefined));\n  }\n\n  async enable() {\n    const accounts = await this.request({\n      method: \"eth_requestAccounts\"\n    });\n    return accounts;\n  }\n\n  async connect() {\n    if (!this.signer.connection.connected) {\n      await this.signer.connect();\n    }\n  }\n\n  async disconnect() {\n    if (this.signer.connection.connected) {\n      await this.signer.disconnect();\n    }\n  }\n\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n\n  get isWalletConnect() {\n    return true;\n  }\n\n  registerEventListeners() {\n    this.signer.connection.on(\"accountsChanged\", accounts => {\n      this.events.emit(\"accountsChanged\", accounts);\n    });\n    this.signer.connection.on(\"chainChanged\", chainId => {\n      this.http = this.setHttpProvider(chainId);\n      this.events.emit(\"chainChanged\", chainId);\n    });\n    this.signer.on(\"disconnect\", () => {\n      this.events.emit(\"disconnect\");\n    });\n  }\n\n  setHttpProvider(chainId) {\n    const rpcUrl = getRpcUrl(chainId, this.rpc);\n    if (typeof rpcUrl === \"undefined\") return undefined;\n    const http = new JsonRpcProvider(new HttpConnection(rpcUrl));\n    return http;\n  }\n\n}\n\nexport default WalletConnectProvider;","map":{"version":3,"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,cAAT,QAA+B,wCAA/B;AAEA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,sBAA1C;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAGA,MAAMC,qBAAN,CAA2B;AAOzBC,cAAYC,IAAZ,EAA6C;AANtC,kBAAc,IAAIR,YAAJ,EAAd;AAOL,SAAKS,GAAL,GAAW;AAAEC,cAAQ,EAAEF,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEE,QAAlB;AAA4BC,YAAM,EAAEH,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEC;AAA1C,KAAX;AACA,SAAKG,MAAL,GAAc,IAAIX,eAAJ,CAAoB,IAAII,gBAAJ,CAAqBG,IAArB,CAApB,CAAd;AACA,UAAMK,OAAO,GAAI,KAAKD,MAAL,CAAYE,UAAZ,CAA4CD,OAA5C,KAAuDL,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEK,OAA7D,KAAwE,CAAzF;AACA,SAAKE,IAAL,GAAY,KAAKC,eAAL,CAAqBH,OAArB,CAAZ;AACA,SAAKI,sBAAL;AACD;;AAEY,MAATC,SAAS;AACX,WAAQ,KAAKN,MAAL,CAAYE,UAAZ,CAA4CI,SAApD;AACD;;AAEY,MAATC,SAAS;AACX,WAAQ,KAAKP,MAAL,CAAYE,UAAZ,CAA4CK,SAApD;AACD;;AAEW,MAARC,QAAQ;AACV,WAAQ,KAAKR,MAAL,CAAYE,UAAZ,CAA4CM,QAApD;AACD;;AAEU,MAAPP,OAAO;AACT,WAAQ,KAAKD,MAAL,CAAYE,UAAZ,CAA4CD,OAApD;AACD;;AAES,MAANQ,MAAM;;;AACR,WAAO,CAAC,WAAKN,IAAL,MAAS,IAAT,IAASO,aAAT,GAAS,MAAT,GAASA,GAAER,UAAZ,EAA0CS,GAA1C,IAAiD,EAAxD;AACD;;AAEmB,QAAPC,OAAO,CAAcC,IAAd,EAAoC;AACtD,YAAQA,IAAI,CAACC,MAAb;AACE,WAAK,qBAAL;AACE,cAAM,KAAKC,OAAL,EAAN;AACA,eAAQ,KAAKf,MAAL,CAAYE,UAAZ,CAA+BM,QAAvC;;AACF,WAAK,cAAL;AACE,eAAQ,KAAKR,MAAL,CAAYE,UAAZ,CAA+BM,QAAvC;;AACF,WAAK,aAAL;AACE,eAAQ,KAAKR,MAAL,CAAYE,UAAZ,CAA+BD,OAAvC;;AACF;AACE;AATJ;;AAWA,QAAIT,cAAc,CAACwB,QAAf,CAAwBH,IAAI,CAACC,MAA7B,CAAJ,EAA0C;AACxC,aAAO,KAAKd,MAAL,CAAYY,OAAZ,CAAoBC,IAApB,CAAP;AACD;;AACD,QAAI,OAAO,KAAKV,IAAZ,KAAqB,WAAzB,EAAsC;AACpC,YAAM,IAAIc,KAAJ,CAAU,mCAAmCJ,IAAI,CAACC,MAAM,4BAAxD,CAAN;AACD;;AACD,WAAO,KAAKX,IAAL,CAAUS,OAAV,CAAkBC,IAAlB,CAAP;AACD;;AAEMK,WAAS,CACdL,IADc,EAEdM,QAFc,EAEwC;AAEtD,SAAKP,OAAL,CAAaC,IAAb,EACGO,IADH,CACQC,QAAQ,IAAIF,QAAQ,CAAC,IAAD,EAAOE,QAAP,CAD5B,EAEGC,KAFH,CAESC,KAAK,IAAIJ,QAAQ,CAACI,KAAD,EAAQC,SAAR,CAF1B;AAGD;;AAEkB,QAANC,MAAM;AACjB,UAAMjB,QAAQ,GAAG,MAAM,KAAKI,OAAL,CAAa;AAAEE,YAAM,EAAE;AAAV,KAAb,CAAvB;AACA,WAAON,QAAP;AACD;;AAEmB,QAAPO,OAAO;AAClB,QAAI,CAAC,KAAKf,MAAL,CAAYE,UAAZ,CAAuBI,SAA5B,EAAuC;AACrC,YAAM,KAAKN,MAAL,CAAYe,OAAZ,EAAN;AACD;AACF;;AAEsB,QAAVW,UAAU;AACrB,QAAI,KAAK1B,MAAL,CAAYE,UAAZ,CAAuBI,SAA3B,EAAsC;AACpC,YAAM,KAAKN,MAAL,CAAY0B,UAAZ,EAAN;AACD;AACF;;AAEMC,IAAE,CAACC,KAAD,EAAaC,QAAb,EAA0B;AACjC,SAAKC,MAAL,CAAYH,EAAZ,CAAeC,KAAf,EAAsBC,QAAtB;AACD;;AACME,MAAI,CAACH,KAAD,EAAgBC,QAAhB,EAA6B;AACtC,SAAKC,MAAL,CAAYC,IAAZ,CAAiBH,KAAjB,EAAwBC,QAAxB;AACD;;AACMG,gBAAc,CAACJ,KAAD,EAAgBC,QAAhB,EAA6B;AAChD,SAAKC,MAAL,CAAYE,cAAZ,CAA2BJ,KAA3B,EAAkCC,QAAlC;AACD;;AACMI,KAAG,CAACL,KAAD,EAAgBC,QAAhB,EAA6B;AACrC,SAAKC,MAAL,CAAYG,GAAZ,CAAgBL,KAAhB,EAAuBC,QAAvB;AACD;;AAEkB,MAAfK,eAAe;AACjB,WAAO,IAAP;AACD;;AAIO7B,wBAAsB;AAC5B,SAAKL,MAAL,CAAYE,UAAZ,CAAuByB,EAAvB,CAA0B,iBAA1B,EAA6CnB,QAAQ,IAAG;AACtD,WAAKsB,MAAL,CAAYK,IAAZ,CAAiB,iBAAjB,EAAoC3B,QAApC;AACD,KAFD;AAGA,SAAKR,MAAL,CAAYE,UAAZ,CAAuByB,EAAvB,CAA0B,cAA1B,EAA0C1B,OAAO,IAAG;AAClD,WAAKE,IAAL,GAAY,KAAKC,eAAL,CAAqBH,OAArB,CAAZ;AACA,WAAK6B,MAAL,CAAYK,IAAZ,CAAiB,cAAjB,EAAiClC,OAAjC;AACD,KAHD;AAIA,SAAKD,MAAL,CAAY2B,EAAZ,CAAe,YAAf,EAA6B,MAAK;AAChC,WAAKG,MAAL,CAAYK,IAAZ,CAAiB,YAAjB;AACD,KAFD;AAGD;;AAEO/B,iBAAe,CAACH,OAAD,EAAgB;AACrC,UAAMQ,MAAM,GAAGlB,SAAS,CAACU,OAAD,EAAU,KAAKJ,GAAf,CAAxB;AACA,QAAI,OAAOY,MAAP,KAAkB,WAAtB,EAAmC,OAAOe,SAAP;AACnC,UAAMrB,IAAI,GAAG,IAAId,eAAJ,CAAoB,IAAIC,cAAJ,CAAmBmB,MAAnB,CAApB,CAAb;AACA,WAAON,IAAP;AACD;;AAvHwB;;AA0H3B,eAAeT,qBAAf","names":["EventEmitter","JsonRpcProvider","HttpConnection","getRpcUrl","signingMethods","SignerConnection","WalletConnectProvider","constructor","opts","rpc","infuraId","custom","signer","chainId","connection","http","setHttpProvider","registerEventListeners","connected","connector","accounts","rpcUrl","_a","url","request","args","method","connect","includes","Error","sendAsync","callback","then","response","catch","error","undefined","enable","disconnect","on","event","listener","events","once","removeListener","off","isWalletConnect","emit"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}