{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n  return function (source) {\n    return source.lift(new DistinctOperator(keySelector, flushes));\n  };\n}\n\nvar DistinctOperator = /*@__PURE__*/function () {\n  function DistinctOperator(keySelector, flushes) {\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n\n  DistinctOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  };\n\n  return DistinctOperator;\n}();\n\nvar DistinctSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DistinctSubscriber, _super);\n\n  function DistinctSubscriber(destination, keySelector, flushes) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.keySelector = keySelector;\n    _this.values = new Set();\n\n    if (flushes) {\n      _this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(_this)));\n    }\n\n    return _this;\n  }\n\n  DistinctSubscriber.prototype.notifyNext = function () {\n    this.values.clear();\n  };\n\n  DistinctSubscriber.prototype.notifyError = function (error) {\n    this._error(error);\n  };\n\n  DistinctSubscriber.prototype._next = function (value) {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  };\n\n  DistinctSubscriber.prototype._useKeySelector = function (value) {\n    var key;\n    var destination = this.destination;\n\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    this._finalizeNext(key, value);\n  };\n\n  DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n    var values = this.values;\n\n    if (!values.has(key)) {\n      values.add(key);\n      this.destination.next(value);\n    }\n  };\n\n  return DistinctSubscriber;\n}(SimpleOuterSubscriber);\n\nexport { DistinctSubscriber };","map":{"version":3,"mappings":";AAIA,OAAO,KAAEA,OAAT,MAAS,OAAT;AA4DA,SAAMC,qBAAN,EAA+BC,cAA/B,EACwDC,qBADxD,QACwD,mBADxD;OAEE,SAAOC,QAAP,CAAQC,WAAR,EAAkCC,OAAlC,EAAyC;AAC1C;AAAA;AAAA;AAED;;IACEC,gCAAoB,YAAgE;WAAhEA,8BAA6BD;AAAU;AAC1D;AAED;;kBACS,CAAME,UAAUC,OAAK,sBAAmBC,MAAnB,EAA+B;AAC5D;AACH;;AAPA,SAOCH,gBAPD;AAcA,CAbsB;;IAawBI,4CAA2BC,MAA3B,EAA2B;AAGvEZ,wCAAYY,MAAZ;;WAAAD,mBACEE,aAAMR,aAAYC,SAKnB;AAN+C,sBAAW,KAAX,uBAA6B,IAA7B;;AAFxCQ,wBAAaT,WAAb;AAKNS,SAAI,OAAJ,GAAa,SAAb;;QACER,SAAQ;AACTQ;;;AACF;AAED;;oBACc,WAAQC;AACrB;AAED;;oBACc,WAAOC;AACpB;AAES;;oBACC,WAAaC;QACpB,KAAKZ;AACN;WACC;AACD;AACF;AAEO;;oBACK;AACH;AACR,QAAIQ,8BAAJ;;QACE;AACDK;AAAC,aACAC;AACAN,iBAAO,MAAP,CAAOM,GAAP;AACD;AACD;;AACD;AAEO;;oBACE,WAAgBC;AACxB,QAAIC,MAAC,GAAO,KAAOA,MAAnB;;QACE,OAAO,IAAP,CAAcH,GAAd,GAAmB;AACnBG,YAAK,IAAL,CAAKH,GAAL;AACD;AACF;AAEH;;AA/C8C;CAAA","names":["tslib_1","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","distinct","keySelector","flushes","DistinctOperator","prototype","call","source","DistinctSubscriber","_super","destination","_this","notifyNext","notifyError","_next","key","err","_finalizeNext","values"],"sources":["../../../src/internal/operators/distinct.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}