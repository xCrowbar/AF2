{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from \"react\";\nimport Web3 from \"web3\";\nimport MetamaskLogin from \"../metamaskLogin/metamaskLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\n\nconst UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [account, setAccount] = useState();\n  const [loaded, setLoaded] = useState(true);\n\n  async function checkAccount() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      console.log(account);\n      return accounts[0];\n    }\n  }\n\n  async function result() {\n    checkAccount(); //console.log(account)\n  }\n\n  useEffect(() => {\n    setAccount(checkAccount());\n  }, []);\n  if (loaded) return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {},\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }, this);\n};\n\n_s(UserContextProvider, \"Cq/xfAQMTvhv8HZn5Lx4n+Up7CM=\");\n\n_c = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","createContext","Web3","MetamaskLogin","UserContext","UserContextProvider","children","account","setAccount","loaded","setLoaded","checkAccount","window","ethereum","accounts","request","method","console","log","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,aAAnC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,OAAO,MAAMC,WAAW,gBAACH,aAAa,CAAC,EAAD,CAA/B;;AAEP,MAAMI,mBAAmB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AAEC,iBAAeW,YAAf,GAA6B;AACzB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMC,QAAQ,GAAE,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,aAAOO,QAAQ,CAAC,CAAD,CAAf;AAGH;AACJ;;AACD,iBAAeK,MAAf,GAAwB;AACpBR,IAAAA,YAAY,GADQ,CAEpB;AAEH;;AAEDZ,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,UAAU,CAACG,YAAY,EAAb,CAAV;AAEF,GAHO,EAGN,EAHM,CAAT;AAIA,MAAGF,MAAH,EACI,oBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAA7B;AAAA,oBAAmCH,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACP,CAzBD;;GAAMD,mB;;KAAAA,mB;AA2BN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect,useState,createContext } from \"react\";\nimport Web3 from \"web3\";\nimport MetamaskLogin from \"../metamaskLogin/metamaskLogin\";\n\nexport const UserContext=createContext({});\n\nconst UserContextProvider=({children})=>{\n   const [account, setAccount] = useState();\n   const [loaded, setLoaded] = useState(true)\n\n    async function checkAccount(){\n        if (window.ethereum) {\n            const accounts= await window.ethereum.request({ method: 'eth_accounts' });\n            console.log(account)\n            return accounts[0];\n\n           \n        }\n    }\n    async function result (){\n        checkAccount();\n        //console.log(account)\n\n    } \n\n    useEffect(()=>{\n        setAccount(checkAccount());\n\n     },[])\n    if(loaded)\n        return (<UserContext.Provider value={{}}> {children}</UserContext.Provider>)\n}\n\nexport default UserContextProvider;"]},"metadata":{},"sourceType":"module"}