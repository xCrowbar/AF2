{"ast":null,"code":"import Web3Istance from \"../Web3\";\nimport OnBoardingABI from '../../ABIs/OnBoarding.json';\nexport default class OnBoarding extends Web3Istance {\n  constructor() {\n    super();\n    let ABIScheduling = OnBoardingABI.abi;\n    let ContractNetworks = OnBoardingABI.networks;\n    let contractAddress = ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\n    this.contract = new this.web3.eth.Contract(ABIScheduling, contractAddress); //console.log(`Indirizzo Contratto ----- `+ contractAddress);  \n  } //address,name,materialSupported,nozzles,mountedNozzles,printTemp,bedTemp,volume,soluble,foodSafety\n\n\n  async addPrinter(printerInfo) {\n    let account = await this.checkIfWalletIsConnected();\n    await this.contract.methods.addPrinter(printerInfo[\"address\"], this.utils.fromAscii(JSON.stringify(printerInfo[\"name\"])), printerInfo[\"materialSupported\"], printerInfo[\"nozzles\"], printerInfo[\"mountedNozzles\"], printerInfo[\"printTemp\"], printerInfo[\"bedTemp\"], printerInfo[\"volume\"], printerInfo[\"soluble\"], printerInfo[\"foodSafety\"]).send({\n      from: account,\n      gas: 4600000\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/OnBoarding/OnBoarding.js"],"names":["Web3Istance","OnBoardingABI","OnBoarding","constructor","ABIScheduling","abi","ContractNetworks","networks","contractAddress","Object","keys","length","address","contract","web3","eth","Contract","addPrinter","printerInfo","account","checkIfWalletIsConnected","methods","utils","fromAscii","JSON","stringify","send","from","gas"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,SAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,eAAe,MAAMC,UAAN,SAAyBF,WAAzB,CAAoC;AAC/CG,EAAAA,WAAW,GAAE;AACT;AACA,QAAIC,aAAa,GAAGH,aAAa,CAACI,GAAlC;AACA,QAAIC,gBAAgB,GAAGL,aAAa,CAACM,QAArC;AACA,QAAIC,eAAe,GAACF,gBAAgB,CAACG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BK,MAA9B,GAAuC,CAArE,CAAD,CAAhB,CAA0FC,OAA9G;AACA,SAAKC,QAAL,GAAc,IAAI,KAAKC,IAAL,CAAUC,GAAV,CAAcC,QAAlB,CAA2BZ,aAA3B,EAAyCI,eAAzC,CAAd,CALS,CAMT;AACC,GAR0C,CAUnD;;;AACwB,QAAVS,UAAU,CAACC,WAAD,EAAa;AACzB,QAAIC,OAAO,GAAC,MAAM,KAAKC,wBAAL,EAAlB;AACA,UAAM,KAAKP,QAAL,CAAcQ,OAAd,CAAsBJ,UAAtB,CAAiCC,WAAW,CAAC,SAAD,CAA5C,EACF,KAAKI,KAAL,CAAWC,SAAX,CAAqBC,IAAI,CAACC,SAAL,CAAeP,WAAW,CAAC,MAAD,CAA1B,CAArB,CADE,EAEFA,WAAW,CAAC,mBAAD,CAFT,EAGFA,WAAW,CAAC,SAAD,CAHT,EAIFA,WAAW,CAAC,gBAAD,CAJT,EAKFA,WAAW,CAAC,WAAD,CALT,EAMFA,WAAW,CAAC,SAAD,CANT,EAOFA,WAAW,CAAC,QAAD,CAPT,EAQFA,WAAW,CAAC,SAAD,CART,EASFA,WAAW,CAAC,YAAD,CATT,EASyBQ,IATzB,CAS8B;AAACC,MAAAA,IAAI,EAACR,OAAN;AAAcS,MAAAA,GAAG,EAAC;AAAlB,KAT9B,CAAN;AAUH;;AAvB0C","sourcesContent":["import Web3Istance from \"../Web3\";\nimport OnBoardingABI from '../../ABIs/OnBoarding.json'\n\nexport default class OnBoarding extends Web3Istance{\n    constructor(){\n        super();\n        let ABIScheduling = OnBoardingABI.abi;\n        let ContractNetworks = OnBoardingABI.networks;\n        let contractAddress=ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\n        this.contract=new this.web3.eth.Contract(ABIScheduling,contractAddress);\n        //console.log(`Indirizzo Contratto ----- `+ contractAddress);  \n        }\n    \n//address,name,materialSupported,nozzles,mountedNozzles,printTemp,bedTemp,volume,soluble,foodSafety\n        async addPrinter(printerInfo){\n            let account=await this.checkIfWalletIsConnected();\n            await this.contract.methods.addPrinter(printerInfo[\"address\"],\n                this.utils.fromAscii(JSON.stringify(printerInfo[\"name\"])),\n                printerInfo[\"materialSupported\"],\n                printerInfo[\"nozzles\"],\n                printerInfo[\"mountedNozzles\"],\n                printerInfo[\"printTemp\"],\n                printerInfo[\"bedTemp\"],\n                printerInfo[\"volume\"],\n                printerInfo[\"soluble\"],\n                printerInfo[\"foodSafety\"]).send({from:account,gas:4600000}) \n        }\n\n\n}"]},"metadata":{},"sourceType":"module"}