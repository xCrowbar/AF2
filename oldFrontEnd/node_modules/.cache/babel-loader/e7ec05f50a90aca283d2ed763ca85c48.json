{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/App.js\";\n//import User from './SmartContracts/Users/Users';\n//import { ethers } from \"ethers\";\nimport './App.css';\nimport Homepage from './Pages/Homepage/Homepage';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport MyDesignes from './Pages/Mydesignes/mydesignes';\nimport DesignInfo from './Pages/myDesigneInfo/DesignInfo';\nimport MyPrinters from './Pages/Myprinters/MyPrinters';\nimport MetamaskLogin from './Pages/metamaskLogin/metamaskLogin';\nimport PrinterDetails from './Pages/Myprinters/PrinterDetails/PrinterDetails';\nimport SignIn from './Pages/signin/SignIn';\nimport WalletConnected from './component/WalletCheck/WalletConnected';\n/*export const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42, 56, 97,1337] });\n\n export function WalletConnected(){\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React()\n  const [loaded, setLoaded] = useState(false)\n  \n  useEffect(() => {\n    injected\n      .isAuthorized()\n      .then((isAuthorized) => {\n        setLoaded(true)\n        if (isAuthorized && !networkActive && !networkError) {\n          activateNetwork(injected)\n        }\n      })\n      .catch(() => {\n        setLoaded(true)\n      })\n  }, [activateNetwork, networkActive, networkError])\n\n  if(loaded && networkActive)\n    return <Outlet></Outlet>\n  else if(loaded && !networkActive)\n    return <Navigate to=\"login\"></Navigate>\n  else \n    return <span>Loading</span>\n\n\n}*/\n\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getLibrary() {\n  const library = new ethers.providers.Web3Provider(window.ethereum, \"any\"); // this will vary according to whether you use e.g. ethers or web3.js\n\n  library.pollingInterval = 150000;\n  return library;\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(MetamaskLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"myprinters\",\n        element: /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n          getLibrary: getLibrary,\n          children: [\" \", /*#__PURE__*/_jsxDEV(WalletConnected, {\n            children: [\"     \", /*#__PURE__*/_jsxDEV(MyPrinters, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 110\n            }, this), \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 88\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"myprinters/:printerDetails\",\n        element: /*#__PURE__*/_jsxDEV(PrinterDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"mydesignes\",\n        element: /*#__PURE__*/_jsxDEV(MyDesignes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"mydesignes/:designInfo\",\n        element: /*#__PURE__*/_jsxDEV(DesignInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/App.js"],"names":["Homepage","BrowserRouter","Route","Routes","MyDesignes","DesignInfo","MyPrinters","MetamaskLogin","PrinterDetails","SignIn","WalletConnected","Web3ReactProvider","getLibrary","library","ethers","providers","Web3Provider","window","ethereum","pollingInterval","App"],"mappings":";AAAA;AACA;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,2BAArB;AACA,SAAQC,aAAR,EAAsBC,KAAtB,EAA4BC,MAA5B,QAAyC,kBAAzC;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,OAAO,GAAE,IAAIC,MAAM,CAACC,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAkD,KAAlD,CAAf,CADoB,CACoD;;AACxEL,EAAAA,OAAO,CAACM,eAAR,GAA0B,MAA1B;AACA,SAAON,OAAP;AACD;;AAID,SAASO,GAAT,GAAe;AAEb,sBAEE,QAAC,aAAD;AAAA,2BACA,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF,eAMM,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAwB,QAAA,OAAO,eAAE,QAAC,iBAAD;AAAmB,UAAA,UAAU,EAAER,UAA/B;AAAA,uCAA4C,QAAC,eAAD;AAAA,6CAAsB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cANN,eAOM,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,4BAAZ;AAAyC,QAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,cAPN,eAQM,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,cARN,eASM,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,wBAAZ;AAAqC,QAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,cATN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBD;;KApBQQ,G;AAsBT,eAAeA,GAAf","sourcesContent":["//import User from './SmartContracts/Users/Users';\n//import { ethers } from \"ethers\";\nimport './App.css';\nimport Homepage from './Pages/Homepage/Homepage';\nimport {BrowserRouter,Route,Routes} from \"react-router-dom\";\nimport MyDesignes from './Pages/Mydesignes/mydesignes';\nimport DesignInfo from './Pages/myDesigneInfo/DesignInfo';\nimport MyPrinters from './Pages/Myprinters/MyPrinters';\nimport MetamaskLogin from './Pages/metamaskLogin/metamaskLogin';\nimport PrinterDetails from './Pages/Myprinters/PrinterDetails/PrinterDetails'\nimport SignIn from './Pages/signin/SignIn';\nimport WalletConnected from './component/WalletCheck/WalletConnected';\n\n/*export const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42, 56, 97,1337] });\n\n export function WalletConnected(){\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React()\n  const [loaded, setLoaded] = useState(false)\n  \n  useEffect(() => {\n    injected\n      .isAuthorized()\n      .then((isAuthorized) => {\n        setLoaded(true)\n        if (isAuthorized && !networkActive && !networkError) {\n          activateNetwork(injected)\n        }\n      })\n      .catch(() => {\n        setLoaded(true)\n      })\n  }, [activateNetwork, networkActive, networkError])\n\n  if(loaded && networkActive)\n    return <Outlet></Outlet>\n  else if(loaded && !networkActive)\n    return <Navigate to=\"login\"></Navigate>\n  else \n    return <span>Loading</span>\n\n\n}*/\nimport { Web3ReactProvider } from '@web3-react/core';\n\nfunction getLibrary() {\n  const library =new ethers.providers.Web3Provider(window.ethereum,\"any\");// this will vary according to whether you use e.g. ethers or web3.js\n  library.pollingInterval = 150000\n  return library;\n}\n\n\n\nfunction App() {\n\n  return(\n\n    <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<Homepage/>}></Route>\n      <Route path=\"/login\" element={<MetamaskLogin/>}></Route>\n      <Route path=\"/signin\" element={<SignIn/>}></Route>\n\n      \n          <Route path=\"myprinters\"element={<Web3ReactProvider getLibrary={getLibrary}> <WalletConnected>     <MyPrinters/>    </WalletConnected> </Web3ReactProvider> }/>\n          <Route path='myprinters/:printerDetails' element={<PrinterDetails/>}/>\n          <Route path=\"mydesignes\" element={<MyDesignes/>}/>\n          <Route path=\"mydesignes/:designInfo\" element={<DesignInfo/>}/>\n\n    </Routes>\n    </BrowserRouter>\n\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}