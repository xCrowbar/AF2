{"ast":null,"code":"/*import React, { useEffect,useState } from \"react\";\n\nconst UserContextProvider=({children})=>{\n   const [account, setAccount] = useState();\n   const [loaded, setLoaded] = useState(true)\n \n\n    async function checkAccount(){\n        if (window.ethereum) {\n            const accounts= await window.ethereum.request({ method: 'eth_accounts' });\n            console.log(account)\n            return accounts[0];\n\n           \n        }\n    }\n    async function result (){\n        checkAccount();\n        //console.log(account)\n\n    } \n\n    useEffect(()=>{\n        setAccount(checkAccount());\n\n     },[])\n    /*if(!loaded)\n        return (children)\n    else return navigate('login')\n    return (children )\n\n}\n\nexport default UserContextProvider;*/","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import React, { useEffect,useState } from \"react\";\n\nconst UserContextProvider=({children})=>{\n   const [account, setAccount] = useState();\n   const [loaded, setLoaded] = useState(true)\n \n\n    async function checkAccount(){\n        if (window.ethereum) {\n            const accounts= await window.ethereum.request({ method: 'eth_accounts' });\n            console.log(account)\n            return accounts[0];\n\n           \n        }\n    }\n    async function result (){\n        checkAccount();\n        //console.log(account)\n\n    } \n\n    useEffect(()=>{\n        setAccount(checkAccount());\n\n     },[])\n    /*if(!loaded)\n        return (children)\n    else return navigate('login')\n    return (children )\n\n}\n\nexport default UserContextProvider;*/"]},"metadata":{},"sourceType":"module"}