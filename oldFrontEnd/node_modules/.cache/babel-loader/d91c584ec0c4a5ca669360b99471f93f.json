{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  return function (source) {\n    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n  };\n}\n\nvar MergeScanOperator = /*@__PURE__*/function () {\n  function MergeScanOperator(accumulator, seed, concurrent) {\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.concurrent = concurrent;\n  }\n\n  MergeScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n  };\n\n  return MergeScanOperator;\n}();\n\nexport { MergeScanOperator };\n\nvar MergeScanSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(MergeScanSubscriber, _super);\n\n  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.accumulator = accumulator;\n    _this.acc = acc;\n    _this.concurrent = concurrent;\n    _this.hasValue = false;\n    _this.hasCompleted = false;\n    _this.buffer = [];\n    _this.active = 0;\n    _this.index = 0;\n    return _this;\n  }\n\n  MergeScanSubscriber.prototype._next = function (value) {\n    if (this.active < this.concurrent) {\n      var index = this.index++;\n      var destination = this.destination;\n      var ish = void 0;\n\n      try {\n        var accumulator = this.accumulator;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error(e);\n      }\n\n      this.active++;\n\n      this._innerSub(ish);\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  MergeScanSubscriber.prototype._innerSub = function (ish) {\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = innerSubscribe(ish, innerSubscriber);\n\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n\n  MergeScanSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  MergeScanSubscriber.prototype.notifyNext = function (innerValue) {\n    var destination = this.destination;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  };\n\n  MergeScanSubscriber.prototype.notifyComplete = function () {\n    var buffer = this.buffer;\n    this.active--;\n\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n  };\n\n  return MergeScanSubscriber;\n}(SimpleOuterSubscriber);\n\nexport { MergeScanSubscriber };","map":{"version":3,"mappings":";AAKA,OAAO,KAAEA,OAAT,MAAS,OAAT;AAyCA,SAAMC,qBAAN,EAAgCC,qBAAhC,EAE6EC,cAF7E,QAE6E,mBAF7E;OAEgC,kDAA4B;AAC1D,gBAAO,KAAC,KAAqB,CAA7B,EAAkC;AACnCC;AAED;;AACE;AAAoB,iBACA,KADA,CAEA,sBAAkBC,WAAlB,EAAkBC,IAAlB,EAAkBF,UAAlB,CAFA;AAEkB,GAFtC;;;qBACoB,GAAI,aAAG;WACPG,+BAAkBD;AACrC;AAED;AACE,sBAAcF,UAAd;AAGD;;AACHG,8BAACC,IAAD,GAAC;AAAA;GAAD;;AAOA;CAhB6B;;SAuB3BD;;uBAIE,gBAAM,UAAYE,MAAZ,EACP;SAJmB,gCAAoEA;;WACpEC,oBAAMC;AACN,sBAAU,CAAVH,WAAkBG,WAAlB,KAAkB,IAAlB;;AATZC,wBAAoBP,WAApB;AACAO;AACAA,uBAA+BR,UAA/B;AACAQ,qBAAmB,KAAnB;AACEA,yBAAkB,KAAlB;;AAOTA;AAESA;AACR,WAAIA,KAAJ;;;qBAEQ,WAAkBC,QAAC,UAAYC,KAAZ,EAAY;QACrC,KAAIC,MAAJ,GAAO,KAACX;AACR,UAAIY,oBAAJ;UACUL;UACRM,GAAG,GAAG;;UACP;AAAC,YAAQZ,WAAE,mBAAV;AACAY,yBAAO,CAAW,KAACC,GAAZ,EAAsBJ,KAAtB,EAAsBE,KAAtB,CAAP;AACD,QACD,OAAKG,CAAL,EAAK;AACD,eAACR,WAAe,MAAf,CAAeQ,CAAf,CAAD;AACL;;WAAMJ;;AACL,WAAKK,SAAL,CAAYH,GAAZ;AACD,WACF;AAEO;AACN;;;qBAEe,CAACI,sBAAiB;AACjC,QAAMC,kBAAiB,IAAGpB,qBAAH,CAAuB,IAAvB,CAAvB;AAIA,QAAIS,mBAAiBA,WAArB;eACE,KAAYW;QACbC;;AACF;AAESZ;AACR;;;qBAEW,WAAaa,YAAO;wBACtB;;aACNT;AACD,UAAI,KAACU,QAAD,KAAa,KAAjB,EAA6B;AAC9B;AACI;;AACN;AAED;;AACU;;;qBAEK,CAAGJ,UAAKK;AACrB,mBAAY,GAAM,gBAAlB;AACD;AAED;AACEf,eAAY,KAAZ,CAAmBgB,UAAnB;;;qBAEW,WAAYC;QACrBC,MAAK,QAAMA;SACZd;;cAAU,UAAW;AACpB,WAAIF,KAAJ,CAASgB,MAAQ,MAAR,EAAT;WAEC;AACD,UAAI,KAACJ,QAAD,KAAa,KAAjB,EAA6B;AAC9B;AACF;;AACH;AA3E+C;;;;CAWrC","names":["tslib_1","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","concurrent","accumulator","seed","MergeScanOperator","call","_super","MergeScanSubscriber","destination","_this","_next","value","active","index","ish","acc","e","_innerSub","prototype","innerSubscriber","innerSubscription","_complete","hasValue","notifyNext","innerValue","notifyComplete","buffer"],"sources":["../../../src/internal/operators/mergeScan.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}