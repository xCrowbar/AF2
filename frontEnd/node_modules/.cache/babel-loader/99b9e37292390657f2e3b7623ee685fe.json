{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst events_1 = require(\"events\");\n\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone(arr) {\n  const n = arr.length;\n  const copy = new Array(n);\n\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nclass SafeEventEmitter extends events_1.EventEmitter {\n  emit(type) {\n    let doError = type === 'error';\n    const events = this._events;\n\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    } // If there is no 'error' event listener then throw.\n\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (doError) {\n      let er;\n\n      if (args.length > 0) {\n        [er] = args;\n      }\n\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      } // At least give some kind of context to the user\n\n\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n      err.context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === 'function') {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n\n}\n\nexports.default = SafeEventEmitter;","map":{"version":3,"mappings":";;;;;;AAAA;;AAOA,SAASA,SAAT,CAAwCC,OAAxC,EAAgFC,OAAhF,EAA4FC,IAA5F,EAAmG;AACjG,MAAI;AACFC,WAAO,CAACC,KAAR,CAAcJ,OAAd,EAAuBC,OAAvB,EAAgCC,IAAhC;AACD,GAFD,CAEE,OAAOG,GAAP,EAAY;AACZ;AACAC,cAAU,CAAC,MAAK;AACd,YAAMD,GAAN;AACD,KAFS,CAAV;AAGD;AACF;;AAED,SAASE,UAAT,CAAwBC,GAAxB,EAAgC;AAC9B,QAAMC,CAAC,GAAGD,GAAG,CAACE,MAAd;AACA,QAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUH,CAAV,CAAb;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAApB,EAAuBI,CAAC,IAAI,CAA5B,EAA+B;AAC7BF,QAAI,CAACE,CAAD,CAAJ,GAAUL,GAAG,CAACK,CAAD,CAAb;AACD;;AACD,SAAOF,IAAP;AACD;;AAED,MAAqBG,gBAArB,SAA8CC,qBAA9C,CAA0D;AACxDC,MAAI,CAAEC,IAAF,EAA8B;AAChC,QAAIC,OAAO,GAAGD,IAAI,KAAK,OAAvB;AAEA,UAAME,MAAM,GAAc,KAAaC,OAAvC;;AACA,QAAID,MAAM,KAAKE,SAAf,EAA0B;AACxBH,aAAO,GAAGA,OAAO,IAAIC,MAAM,CAACG,KAAP,KAAiBD,SAAtC;AACD,KAFD,MAEO,IAAI,CAACH,OAAL,EAAc;AACnB,aAAO,KAAP;AACD,KAR+B,CAUhC;;;AAVgC,sCAAXhB,IAAW;AAAXA,UAAW;AAAA;;AAWhC,QAAIgB,OAAJ,EAAa;AACX,UAAIK,EAAJ;;AACA,UAAIrB,IAAI,CAACQ,MAAL,GAAc,CAAlB,EAAqB;AACnB,SAACa,EAAD,IAAOrB,IAAP;AACD;;AACD,UAAIqB,EAAE,YAAYC,KAAlB,EAAyB;AACvB;AACA;AACA,cAAMD,EAAN,CAHuB,CAGb;AACX,OATU,CAUX;;;AACA,YAAMlB,GAAG,GAAG,IAAImB,KAAJ,CAAU,mBAAmBD,EAAE,GAAG,KAAKA,EAAE,CAACE,OAAO,GAAlB,GAAwB,EAAE,EAAzD,CAAZ;AACCpB,SAAW,CAACJ,OAAZ,GAAsBsB,EAAtB;AACD,YAAMlB,GAAN,CAbW,CAaA;AACZ;;AAED,UAAML,OAAO,GAAGmB,MAAM,CAACF,IAAD,CAAtB;;AAEA,QAAIjB,OAAO,KAAKqB,SAAhB,EAA2B;AACzB,aAAO,KAAP;AACD;;AAED,QAAI,OAAOrB,OAAP,KAAmB,UAAvB,EAAmC;AACjCD,eAAS,CAACC,OAAD,EAAU,IAAV,EAAgBE,IAAhB,CAAT;AACD,KAFD,MAEO;AACL,YAAMwB,GAAG,GAAG1B,OAAO,CAACU,MAApB;AACA,YAAMiB,SAAS,GAAGpB,UAAU,CAACP,OAAD,CAA5B;;AACA,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,GAApB,EAAyBb,CAAC,IAAI,CAA9B,EAAiC;AAC/Bd,iBAAS,CAAC4B,SAAS,CAACd,CAAD,CAAV,EAAe,IAAf,EAAqBX,IAArB,CAAT;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AA7CuD;;AAA1D0B","names":["safeApply","handler","context","args","Reflect","apply","err","setTimeout","arrayClone","arr","n","length","copy","Array","i","SafeEventEmitter","events_1","emit","type","doError","events","_events","undefined","error","er","Error","message","len","listeners","exports"],"sourceRoot":"","sources":["index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}