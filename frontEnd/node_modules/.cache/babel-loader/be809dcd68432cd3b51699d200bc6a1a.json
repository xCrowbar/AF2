{"ast":null,"code":"import { isJsonRpcRequest, isJsonRpcResponseSuccess, isJsonRpcResponseError, isInternalEvent, isReservedEvent } from \"@walletconnect/utils\";\n\nclass EventManager {\n  constructor() {\n    this._eventEmitters = [];\n  }\n\n  subscribe(eventEmitter) {\n    this._eventEmitters.push(eventEmitter);\n  }\n\n  unsubscribe(event) {\n    this._eventEmitters = this._eventEmitters.filter(x => x.event !== event);\n  }\n\n  trigger(payload) {\n    let eventEmitters = [];\n    let event;\n\n    if (isJsonRpcRequest(payload)) {\n      event = payload.method;\n    } else if (isJsonRpcResponseSuccess(payload) || isJsonRpcResponseError(payload)) {\n      event = `response:${payload.id}`;\n    } else if (isInternalEvent(payload)) {\n      event = payload.event;\n    } else {\n      event = \"\";\n    }\n\n    if (event) {\n      eventEmitters = this._eventEmitters.filter(eventEmitter => eventEmitter.event === event);\n    }\n\n    if ((!eventEmitters || !eventEmitters.length) && !isReservedEvent(event) && !isInternalEvent(event)) {\n      eventEmitters = this._eventEmitters.filter(eventEmitter => eventEmitter.event === \"call_request\");\n    }\n\n    eventEmitters.forEach(eventEmitter => {\n      if (isJsonRpcResponseError(payload)) {\n        const error = new Error(payload.error.message);\n        eventEmitter.callback(error, null);\n      } else {\n        eventEmitter.callback(null, payload);\n      }\n    });\n  }\n\n}\n\nexport default EventManager;","map":{"version":3,"mappings":"AAAA,SACEA,gBADF,EAEEC,wBAFF,EAGEC,sBAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,sBANP;;AAiBA,MAAMC,YAAN,CAAkB;AAGhBC;AACE,SAAKC,cAAL,GAAsB,EAAtB;AACD;;AAEMC,WAAS,CAACC,YAAD,EAA4B;AAC1C,SAAKF,cAAL,CAAoBG,IAApB,CAAyBD,YAAzB;AACD;;AAEME,aAAW,CAACC,KAAD,EAAc;AAC9B,SAAKL,cAAL,GAAsB,KAAKA,cAAL,CAAoBM,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACF,KAAF,KAAYA,KAA5C,CAAtB;AACD;;AAEMG,SAAO,CACZC,OADY,EAC+E;AAE3F,QAAIC,aAAa,GAAoB,EAArC;AACA,QAAIL,KAAJ;;AAEA,QAAIZ,gBAAgB,CAACgB,OAAD,CAApB,EAA+B;AAC7BJ,WAAK,GAAGI,OAAO,CAACE,MAAhB;AACD,KAFD,MAEO,IAAIjB,wBAAwB,CAACe,OAAD,CAAxB,IAAqCd,sBAAsB,CAACc,OAAD,CAA/D,EAA0E;AAC/EJ,WAAK,GAAG,YAAYI,OAAO,CAACG,EAAE,EAA9B;AACD,KAFM,MAEA,IAAIhB,eAAe,CAACa,OAAD,CAAnB,EAA8B;AACnCJ,WAAK,GAAGI,OAAO,CAACJ,KAAhB;AACD,KAFM,MAEA;AACLA,WAAK,GAAG,EAAR;AACD;;AAED,QAAIA,KAAJ,EAAW;AACTK,mBAAa,GAAG,KAAKV,cAAL,CAAoBM,MAApB,CACbJ,YAAD,IAAiCA,YAAY,CAACG,KAAb,KAAuBA,KAD1C,CAAhB;AAGD;;AAED,QACE,CAAC,CAACK,aAAD,IAAkB,CAACA,aAAa,CAACG,MAAlC,KACA,CAAChB,eAAe,CAACQ,KAAD,CADhB,IAEA,CAACT,eAAe,CAACS,KAAD,CAHlB,EAIE;AACAK,mBAAa,GAAG,KAAKV,cAAL,CAAoBM,MAApB,CACbJ,YAAD,IAAiCA,YAAY,CAACG,KAAb,KAAuB,cAD1C,CAAhB;AAGD;;AAEDK,iBAAa,CAACI,OAAd,CAAuBZ,YAAD,IAAgC;AACpD,UAAIP,sBAAsB,CAACc,OAAD,CAA1B,EAAqC;AACnC,cAAMM,KAAK,GAAG,IAAIC,KAAJ,CAAUP,OAAO,CAACM,KAAR,CAAcE,OAAxB,CAAd;AACAf,oBAAY,CAACgB,QAAb,CAAsBH,KAAtB,EAA6B,IAA7B;AACD,OAHD,MAGO;AACLb,oBAAY,CAACgB,QAAb,CAAsB,IAAtB,EAA4BT,OAA5B;AACD;AACF,KAPD;AAQD;;AAvDe;;AA0DlB,eAAeX,YAAf","names":["isJsonRpcRequest","isJsonRpcResponseSuccess","isJsonRpcResponseError","isInternalEvent","isReservedEvent","EventManager","constructor","_eventEmitters","subscribe","eventEmitter","push","unsubscribe","event","filter","x","trigger","payload","eventEmitters","method","id","length","forEach","error","Error","message","callback"],"sourceRoot":"","sources":["../../src/events.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}