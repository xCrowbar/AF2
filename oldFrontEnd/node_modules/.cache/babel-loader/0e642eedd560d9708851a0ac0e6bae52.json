{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent, scheduler) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\n\nvar ExpandOperator = /*@__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n\n  ExpandOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  };\n\n  return ExpandOperator;\n}();\n\nexport { ExpandOperator };\n\nvar ExpandSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExpandSubscriber, _super);\n\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n\n    return _this;\n  }\n\n  ExpandSubscriber.dispatch = function (arg) {\n    var subscriber = arg.subscriber,\n        result = arg.result,\n        value = arg.value,\n        index = arg.index;\n    subscriber.subscribeToProjection(result, value, index);\n  };\n\n  ExpandSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n\n      return;\n    }\n\n    var index = this.index++;\n\n    if (this.active < this.concurrent) {\n      destination.next(value);\n\n      try {\n        var project = this.project;\n        var result = project(value, index);\n\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          var state = {\n            subscriber: this,\n            result: result,\n            value: value,\n            index: index\n          };\n          var destination_1 = this.destination;\n          destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n    this.active++;\n    var destination = this.destination;\n    destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n  };\n\n  ExpandSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  ExpandSubscriber.prototype.notifyNext = function (innerValue) {\n    this._next(innerValue);\n  };\n\n  ExpandSubscriber.prototype.notifyComplete = function () {\n    var buffer = this.buffer;\n    this.active--;\n\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  };\n\n  return ExpandSubscriber;\n}(SimpleOuterSubscriber);\n\nexport { ExpandSubscriber };","map":{"version":3,"mappings":";AAKA,OAAO,KAAEA,OAAT,MAAS,OAAT;AA2DA,SAAMC,qBAAN,EAC6BC,cAD7B,EAE6BC,qBAF7B,QAEsD,mBAFtD;OAC6B,gDAA4B;AAEvD,gBAAc,UAAU,CAAxB,EAAwB;AAExBC,cAAO,GAACC,MAAqB,kBAA7B;AACD;;AAEDD;AACE,2BAAoB;AAAA,WACAE,YACA,mBAAyBC,OAAzB,EAAyBH,UAAzB,EAAyBI,SAAzB,CADA,CADA;AAEyB,GAF7C;;;kBACoB,gBAAU,YAAQ;WAClBC,wBAAyBL;AAC5C;AAED;AACE,qBAAcI,SAAd;AACD;;AACHC,2BAACC,IAAD,GAAC;AAAA;GAAD;;AAcA;CArBgC;;SA2B9BD;;oBAIE,gBAAM,kBAAY;SAHA,WAAOE,kBAAiDC;;WACxDD,8BAAkBJ;AAClB,kCAAyBM,WAAzB,KAAyB,IAAzB;;AARZC,oBAAkBP,OAAlB;AACAO,uBAAmBV,UAAnB;AACAU,sBAAYN,SAAZ;AAQNM,SAAI,MAAJ,GAAc,CAAd;SACE,UAAK;SACN;;;AACFA;AAEc;;AACN;;;AAETH,kBAAC,SAAD,GAAC;AAES;AAAA,QAAVI,SAAgBC,IAAUD,MAAhB;AAAA,QAAgBE,iBAAhB;AAAA,QAAgBC,iBAAhB;AACRC,cAAM,sBAAN,CAAyBJ,MAAzB,EAAqCE,KAArC,EAAqCC,KAArC;GAHF;;kBAMS,WAAYE;QACjBP,WAAO;;QACRA;AAEK,WAAKQ,SAAL;;AACF;;;QAEFH,KAAI;;aACMI,0BAAiB;iBACnB,MAASL;;UACf;YACEV,OAAK;YACNQ;;aAAM;AACL,eAAMQ,qBAAN,CAA+CR,MAA/C,EAAqDE,KAArD,EAA2DC,KAA3D;eAEA;AACD;AAAAC;AAAAJ;AAAAE;AAAAC;AAAA;AACF;AAASM,uBAAE,IAAF,CAAE,4DAAF;AACR;AACD,QACF;AAAMX;AACL;AACD,WACF;AAEO;AACN;;;kBAEY,WAAIU,wBAA2B,kBAAsBN,KAAtB,EAA6BC,KAA7B,EAA8B;AAC1E;AAES;AACRL,eAAK,IAAL,CAAKX,cAAoB,yCAAzB;;;kBAEO,WAAYmB,YAAY;SAC9BI;;AACD,QAAI,KAACA,YAAD,IAAe,iBAAnB,EAAmB;AACpB;AAED;;AACE,SAAKC,WAAL;AACD;;AAEDf;AACE,SAAMS,KAAN,CAAYO,UAAZ;GADF;;kBAGY,WAAWC,iBAAY;QAC/BC,MAAK,QAAMA;SACZP;;AACD,QAAIO,MAAK,WAAYC,MAAZ,GAAqB,CAA9B,EAA8B;AAC5B,WAAKV,KAAL,CAAKS,MAAY,MAAZ,EAAL;AACD;;AACF;AACH,uBAACE,QAAD;AA9E4C;;;;CAUlC","names":["tslib_1","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","concurrent","Number","source","project","scheduler","ExpandOperator","call","ExpandSubscriber","_super","destination","_this","result","arg","value","index","subscriber","_next","_complete","active","subscribeToProjection","destination_1","hasCompleted","unsubscribe","innerValue","notifyComplete","buffer","length","complete"],"sources":["../../../src/internal/operators/expand.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}