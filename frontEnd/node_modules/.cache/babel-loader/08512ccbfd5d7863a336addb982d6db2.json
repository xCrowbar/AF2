{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWindowMetadata = void 0;\n\nconst window_getters_1 = require(\"@walletconnect/window-getters\");\n\nfunction getWindowMetadata() {\n  let doc;\n  let loc;\n\n  try {\n    doc = window_getters_1.getDocumentOrThrow();\n    loc = window_getters_1.getLocationOrThrow();\n  } catch (e) {\n    return null;\n  }\n\n  function getIcons() {\n    const links = doc.getElementsByTagName(\"link\");\n    const icons = [];\n\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i];\n      const rel = link.getAttribute(\"rel\");\n\n      if (rel) {\n        if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n          const href = link.getAttribute(\"href\");\n\n          if (href) {\n            if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n              let absoluteHref = loc.protocol + \"//\" + loc.host;\n\n              if (href.indexOf(\"/\") === 0) {\n                absoluteHref += href;\n              } else {\n                const path = loc.pathname.split(\"/\");\n                path.pop();\n                const finalPath = path.join(\"/\");\n                absoluteHref += finalPath + \"/\" + href;\n              }\n\n              icons.push(absoluteHref);\n            } else if (href.indexOf(\"//\") === 0) {\n              const absoluteUrl = loc.protocol + href;\n              icons.push(absoluteUrl);\n            } else {\n              icons.push(href);\n            }\n          }\n        }\n      }\n    }\n\n    return icons;\n  }\n\n  function getWindowMetadataOfAny() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const metaTags = doc.getElementsByTagName(\"meta\");\n\n    for (let i = 0; i < metaTags.length; i++) {\n      const tag = metaTags[i];\n      const attributes = [\"itemprop\", \"property\", \"name\"].map(target => tag.getAttribute(target)).filter(attr => {\n        if (attr) {\n          return args.includes(attr);\n        }\n\n        return false;\n      });\n\n      if (attributes.length && attributes) {\n        const content = tag.getAttribute(\"content\");\n\n        if (content) {\n          return content;\n        }\n      }\n    }\n\n    return \"\";\n  }\n\n  function getName() {\n    let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n\n    if (!name) {\n      name = doc.title;\n    }\n\n    return name;\n  }\n\n  function getDescription() {\n    const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n    return description;\n  }\n\n  const name = getName();\n  const description = getDescription();\n  const url = loc.origin;\n  const icons = getIcons();\n  const meta = {\n    description,\n    url,\n    icons,\n    name\n  };\n  return meta;\n}\n\nexports.getWindowMetadata = getWindowMetadata;","map":{"version":3,"mappings":"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","names":["getWindowMetadata","doc","loc","window_getters_1","e","getIcons","links","getElementsByTagName","icons","i","length","link","rel","getAttribute","toLowerCase","indexOf","href","absoluteHref","protocol","host","path","pathname","split","pop","finalPath","join","push","absoluteUrl","getWindowMetadataOfAny","args","metaTags","tag","attributes","map","target","filter","attr","includes","content","getName","name","title","getDescription","description","url","origin","meta","exports"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}