[{"/home/crow/Scrivania/AF2/newFrontEnd/src/index.js":"1","/home/crow/Scrivania/AF2/newFrontEnd/src/App.js":"2","/home/crow/Scrivania/AF2/newFrontEnd/src/reportWebVitals.js":"3","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Homepage/Homepage.js":"4","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Mydesignes/mydesignes.js":"5","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/myDesigneInfo/DesignInfo.js":"6","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Myprinters/MyPrinters.js":"7","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/metamaskLogin/metamaskLogin.js":"8","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Myprinters/PrinterDetails/PrinterDetails.js":"9","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/signin/SignIn.js":"10","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/LoadPrinter/LoadPrinter.js":"11","/home/crow/Scrivania/AF2/newFrontEnd/src/component/WalletCheck/WalletConnected.js":"12","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/design/design.js":"13","/home/crow/Scrivania/AF2/newFrontEnd/src/component/Navbar/homeNav.js":"14","/home/crow/Scrivania/AF2/newFrontEnd/src/data/data.js":"15","/home/crow/Scrivania/AF2/newFrontEnd/src/component/STLviewer/Stl.js":"16","/home/crow/Scrivania/AF2/newFrontEnd/src/SmartContracts/Users/Users.js":"17","/home/crow/Scrivania/AF2/newFrontEnd/src/SmartContracts/OnBoarding/OnBoarding.js":"18","/home/crow/Scrivania/AF2/newFrontEnd/src/SmartContracts/Web3.js":"19","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Announce/Announce.js":"20","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Announce/UploadSTL.js":"21","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Announce/StlRenderer.js":"22"},{"size":1562,"mtime":1652796822000,"results":"23","hashOfConfig":"24"},{"size":2484,"mtime":1656578896882,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1652796822000,"results":"26","hashOfConfig":"24"},{"size":1480,"mtime":1652796822000,"results":"27","hashOfConfig":"24"},{"size":2464,"mtime":1652796822000,"results":"28","hashOfConfig":"24"},{"size":1819,"mtime":1652796822000,"results":"29","hashOfConfig":"24"},{"size":1276,"mtime":1652796822000,"results":"30","hashOfConfig":"24"},{"size":2362,"mtime":1652796822000,"results":"31","hashOfConfig":"24"},{"size":1405,"mtime":1652796822000,"results":"32","hashOfConfig":"24"},{"size":4570,"mtime":1652796822000,"results":"33","hashOfConfig":"24"},{"size":6828,"mtime":1652796822000,"results":"34","hashOfConfig":"24"},{"size":2221,"mtime":1652796822000,"results":"35","hashOfConfig":"24"},{"size":2046,"mtime":1652796822000,"results":"36","hashOfConfig":"24"},{"size":1859,"mtime":1656578827971,"results":"37","hashOfConfig":"24"},{"size":1585,"mtime":1652796822000,"results":"38","hashOfConfig":"24"},{"size":317,"mtime":1652796822000,"results":"39","hashOfConfig":"24"},{"size":2184,"mtime":1652796822000,"results":"40","hashOfConfig":"24"},{"size":1415,"mtime":1652796822000,"results":"41","hashOfConfig":"24"},{"size":662,"mtime":1652796822000,"results":"42","hashOfConfig":"24"},{"size":962,"mtime":1656840860430,"results":"43","hashOfConfig":"24"},{"size":3521,"mtime":1656842331495,"results":"44","hashOfConfig":"24"},{"size":699,"mtime":1656840745848,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"dp11t",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/crow/Scrivania/AF2/newFrontEnd/src/index.js",[],["95","96"],"/home/crow/Scrivania/AF2/newFrontEnd/src/App.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/reportWebVitals.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Homepage/Homepage.js",["97"],"//import { Outlet } from 'react-router-dom';\nimport './Homepage.css';\n//import { ethers } from \"ethers\";\nimport { HomeNav, MakerNav } from '../../component/Navbar/homeNav';\nimport { UserNav } from '../../component/Navbar/homeNav';\nimport {  useEffect, useState } from 'react';\nimport Design from '../design/design';\nimport User from '../../SmartContracts/Users/Users';\n//import User from './SmartContracts/Users/Users';\n\nfunction Homepage() {\n  //let nav=null;\n  const [loaded,setLoaded]=useState(false);\n  const [nav,setNav]=useState();\n\n\n\n  useEffect(()=>{\n    const accountCheck=async()=>{\n      let user=new User();\n      const {ethereum}=window;\n      await ethereum.request({ method: 'eth_accounts' })\n        .then((res)=>{\n          if(res.length>0){\n            user.isUser()\n              .then((res)=>{\n                if(res){\n                  setLoaded(true);\n                  setNav(<UserNav/>);\n                }\n                else {\n                  setLoaded(true);\n                  setNav(<HomeNav/>);\n                }\n                })\n              .catch(()=>{setLoaded(true)\n              setNav(<HomeNav/>)})\n          }\n         else{\n           setLoaded(true);\n          setNav(<HomeNav/>);\n        }\n        })};\n    accountCheck();\n  },[loaded])\n\n  if(loaded){\n  return (\n    <div>\n      {nav}\n      <div className='login'>\n      </div>\n       <Design/>\n    </div>\n  );}\n  else return (<span>Loading</span>)\n}\n\nexport default Homepage;\n\n\n\n\n\n\n\n\n","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Mydesignes/mydesignes.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/myDesigneInfo/DesignInfo.js",["98","99"],"import { getDesigne } from \"../../data/data\";\nimport { useParams } from \"react-router-dom\";\nimport { UserNav } from \"../../component/Navbar/homeNav\";\nimport './DesignInfo.css'\nimport { Stl } from \"../../component/STLviewer/Stl\";\nexport default function DesignInfo(){\n    let param = useParams();\n    \n    let design=getDesigne(param.designInfo)\n    console.log(design.fileNamename)\n\n    const startPrint=async()=>{\n    let address=\"\";\n    if (design.fileName===\"Cube_3d.stl\")\n        address=\"http://192.168.8.230\";\n    else address=\"http://192.168.8.240\";\n        window.location = address;\n        \n\n        /*await fetch('IP_ADDRESS/printer/start',{\n            method:'POST',\n            body:{\n                'design':''\n            },\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        });\n        const result=await startPrint.json();\n        return result;*/\n    }\n\n\n\n    function importAll(r,stlFileName) {\n        let designes = {};\n        r.keys().map((item, index) => { designes[item.replace('./', '')] = r(item); });       \n        for(const [key,value] of Object.entries(designes)){\n            console.log(key)\n            if(key===stlFileName)\n                return designes[key].default;\n        }\n    }\n    const design_path=importAll(require.context('../../images/stlFiles/',false,/\\.stl$/),design.fileName);\n    \n    return(\n        <div>\n            <UserNav/>\n            <div className=\"stl_render\">\n                <h1>{design.name}</h1>\n                <Stl design_path={design_path}/>\n                <div className=\"designInfo\">                    \n                    <p>{design.info}</p>\n                    <button className=\"printButton\" onClick={startPrint}>Stampa</button>\n                </div>\n            </div>\n        </div>\n    )\n\n\n}","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Myprinters/MyPrinters.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/metamaskLogin/metamaskLogin.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Myprinters/PrinterDetails/PrinterDetails.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/signin/SignIn.js",["100"],"import {  useState } from 'react';\nimport User from '../../SmartContracts/Users/Users' \nimport { HomeNav } from '../../component/Navbar/homeNav';\nimport { useNavigate } from 'react-router-dom';\nimport './SignIn.css';\n\n\nexport default function SignIn(){\n\n    const [error,setError]=useState(false)\n    const [errorMessage,SetErrorMessage]=useState('');\n    const [username,setUsername]=useState('');\n    const [checked,setChecked]=useState(false);\n    const [begin,setBegin]=useState();\n    const [end,setEnd]=useState()\n    let user=new User();\n    let navigate=useNavigate();\n    const maker=\n        <div className='makerTime'>\n            <div className='info'>\n            <p>Specifica gli orari disponibili per la stampa (almeno 3 ore); richiederemo anche la tua posizione</p>\n            </div>\n            <label htmlFor=\"appt\"><p>Inzio</p></label>\n            <br/>\n            <input className=\"makerTimeInput\" onChange={(event)=>setBegin(event.target.value)} type=\"time\" id=\"appt\" name=\"appt\"min=\"09:00\" max=\"18:00\" required/>\n            <br/>\n            <label htmlFor=\"appt\"><p>Fine</p></label>\n            <br/>\n            <input className=\"makerTimeInput\" onChange={(event)=>setEnd(()=>event.target.value)} type=\"time\" id=\"appt\" name=\"appt\"min=\"09:00\" max=\"18:00\" required/>\n        </div>\n\n\n\n\n            /*if(window.ethereum){\n                const accounts=await window.ethereum.request({ method: \"eth_requestAccounts\"} )\n                if(accounts.length>0)\n                    navigate('/')\n                else\n                    window.ethereum.request({ method: \"eth_requestAccounts\"} )*/\n\n    const onlyHour= (e) => {\n        let hour = e.target.value.split(':')[0]\n        e.target.value = `${hour}:00`\n      }\n      \n    const handleSubmit= async(event)=>{\n        event.preventDefault();\n        navigator.geolocation.getCurrentPosition((position)=> {\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n            addCaller(position.coords.latitude,position.coords.longitude)\n        });\n\n\n    }\n\n    const checkError=async(latitude,longitude)=>{\n        \n        if(begin>=end){\n            SetErrorMessage(\"The begin time cannot be greater or equal than the end time\");\n            setError(true);\n            return true;\n\n        } \n\n\n        else if(latitude===undefined||longitude===undefined){\n            SetErrorMessage(\"You must provide your location for signing in\");\n            setError(true); \n            return true;\n        }\n        else if(username.match( /^[a-zA-Z0-9]+$/g)==null){\n            setError(true);\n            SetErrorMessage(\"The inserted character are not valid\");\n            return true;\n        }\n\n        else return ;\n    }\n\n    const addCaller=async (latitude,longitude)=>{\n        await checkError(latitude,longitude);\n        console.log(error)\n\n        if (error)\n            return;\n        else{\n\n            if(await user.isUser()){\n                SetErrorMessage(\"You are altready subscribed\");\n                setError(true);\n                return;\n            }\n\n            else{\n\n                let result=await user.addCaller(username,{latitude:latitude,longitude:longitude},begin,end);\n                if(result) \n                    navigate('/',{replace:true});\n                \n                else { \n                    alert(\"Error\") \n                    window.location.reload();\n                \n                }  \n            }\n        }\n            //console.log(\"errore\");\n    }       \n\n\n    return (\n\n        <div>\n            <HomeNav/>\n            <div className='sign'>\n            <h1>Sign In</h1>\n            <div className='SignIn'>\n            <form  onSubmit={handleSubmit}>\n                <label>\n                    <p>Username</p>\n                    <input type=\"text\" name=\"username\" onChange={event => setUsername(event.target.value)}autoComplete=\"off\" required minLength=\"4\" maxLength=\"10\"></input>\n                </label><br/>\n\n                <div className='checkboxes'>\n                <p><label>\n                        <input className=\"check\" type=\"checkbox\" onChange={()=>setChecked(()=>!checked)}/>\n                        Air Maker?\n                    </label></p>\n              { checked && maker}\n            </div><br/>\n                <button className=\"SubmitButton\" type='submit'>Sign in</button>\n\n\n\n            </form>\n                { error && <p className='error'>{errorMessage}</p>}\n            </div>\n\n        </div>\n        </div>\n\n\n    )\n}\n","/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/LoadPrinter/LoadPrinter.js",["101"],"import {  useState } from 'react';\nimport OnBoarding from '../../SmartContracts/OnBoarding/OnBoarding';\nimport { HomeNav } from '../../component/Navbar/homeNav';\nimport Select from 'react-select';\nimport './LoadPrinter.css';\n\n\nexport default function LoadPrinter(){\n\n    const [error,setError]=useState(false)\n    const [errorMessage,SetErrorMessage]=useState('');\n    let  printerData={\"soluble\":true,\"foodSaety\":true,\"material\":[]};\n    const [section,setSection]=useState(1);\n    const material=[\n        {value:\"0\" , label:\"ABS\"},\n        {value:\"1\",label:\"PLA\"},\n        {value:\"2\",label:\"PETG\"}]\n    let onBoarding=new OnBoarding();\n\n\n            /*if(window.ethereum){\n                const accounts=await window.ethereum.request({ method: \"eth_requestAccounts\"} )\n                if(accounts.length>0)\n                    navigate('/')\n                else\n                    window.ethereum.request({ method: \"eth_requestAccounts\"} )*/\n\n    const handleChange=(option)=>{\n        let values=[]\n        option.map((value)=>{\n            values.push(parseInt(value.value));\n            \n        })\n        printerData['material']=values;\n        if(values.length===0)\n            printerData['material']=undefined;\n        console.log(printerData['material']);\n        \n\n    }\n\n\n    const handleSubmit= async(event)=>{\n        event.preventDefault();\n        let result=checkError(printerData);\n        if(result){\n            console.log(\"webekbj\")\n            return}\n        else {\n            console.log(\"webekbj\")\n            await onBoarding.addPrinter(printerData);\n        }\n\n    }\n\n    const checkError=async(printerData)=>{\n\n        if(printerData['name'].match( /^[a-zA-Z0-9]+$/g)==null){\n            setError(true);\n            SetErrorMessage(\"The inserted character are not valid\");\n            return true;\n        }\n        else if(printerData['address'].length<10){\n            setError(true);\n            SetErrorMessage(\"Invalid address\");   \n            return true;\n            //ALTRI CHECK SU ADDRESS PROVVISORIO\n        }\n        else return false;\n\n    \n    }       \n\n\n    return (\n\n        <div>\n            <div className='sign'>\n            <HomeNav/>\n            <h1>Add printer</h1>\n            <div className='SignIn'>\n            <form  onSubmit={handleSubmit}>\n            \n            <div className=\"sectionPage\" style={{display:section===1?('block'):('none')}}>\n                <label>\n                    <p>Address</p>\n                    <input type=\"text\" name=\"address\" onChange={event => printerData[\"address\"]=event.target.value} autoComplete=\"off\" required minLength=\"4\" maxLength=\"90\"></input>\n                </label><br/>\n\n                <label>\n                    <p>Name</p>\n                    <input type=\"text\" name=\"username\" onChange={event => printerData[\"name\"]=event.target.value} autoComplete=\"off\" required minLength=\"4\" maxLength=\"10\"></input>\n                </label><br/>\n                <label>\n                <p>Material</p>\n                    <div style={{\n                        width:\"200px\",\n                        margin:\"auto\"}}>\n                   <Select  isMulti \n                    options={material}\n                    getOptionValue={(option)=>option.value}\n                    onChange={(option)=>{handleChange(option)\n                    console.log(option)}}/>\n                    </div>\n                </label><br/>\n                </div>\n\n                <div className=\"sectionPage\" style={{display:section===2?('block'):('none')}}>\n                <label>\n                <p>Nozzles</p>\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                    min=\"1\" max=\"10\" onChange={event => {printerData[\"nozzles\"]=event.target.value\n                        }}/>\n                \n\n                </label><br/>\n                <label>\n                <p>Nozzles mounted</p>\n                    <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                        min=\"1\" max=\"10\" onChange={event => {printerData[\"nozzlesMount\"]=event.target.value\n                        }}/> \n\n                </label><br/>\n\n                <label>\n                <p>Print Temperature</p>\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                    min=\"1\" max=\"10\" onChange={event => {printerData[\"printerTemp\"]=event.target.value\n                    }}/>\n                </label><br/>\n                </div>\n\n                <div className=\"sectionPage\" style={{display:section===3?('block'):('none')}}>\n                <label>\n                <p>Bed Temperature</p>\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                    min=\"1\" max=\"10\" onChange={event => {printerData[\"bedTemp\"]=event.target.value\n                    }}/>\n                </label><br/>\n\n                <label>\n                <p>Volume</p>\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                    min=\"1\" max=\"10\" onChange={event => {printerData[\"bedTemp\"]=event.target.value\n                    }}/>\n\n                </label><br/>\n\n                <label>\n                <p>soluble</p>\n                    <select name=\"soluble\" id=\"soluble\" onClick={(e)=>printerData[\"soluble\"]=e.target.value}>\n                        <option value={true}>Yes</option>\n                        <option value={false}>No</option>\n                    </select>\n                </label><br/>\n\n                <label>\n                <p>Food Safety</p>\n                    <select name=\"food\" id=\"food\" onClick={(e)=>printerData[\"foodSafety\"]=e.target.value}>\n                    <option value={true}>Yes</option>\n                    <option value={false}>No</option>\n                </select>\n                </label><br/>\n                </div>\n                { error && <p className='error'>{errorMessage}</p>}\n                \n                <div className='elementInsertion'>\n                {                   \n                                    \n                                    section>1\n                                        &&\n                                    \n                <button className=\"next1\" type='button' onClick={()=>setSection((prev)=>prev-1)}>Indietro</button>\n                                       \n                }\n                {                       section!==3\n                                            &&\n                     <button className=\"next1\" type='button'style={{marginLeft:section===1?('130px'):('auto')}} \n                        onClick={()=>setSection((prev)=>prev+1)}>Avanti</button>\n                }\n\n                {section===3 && <button className=\"next1\" type='submit'>Aggiungi</button>}\n                </div>\n\n\n            </form>\n            </div>\n\n        </div>\n        </div>\n\n\n    )\n}\n","/home/crow/Scrivania/AF2/newFrontEnd/src/component/WalletCheck/WalletConnected.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/design/design.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/component/Navbar/homeNav.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/data/data.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/component/STLviewer/Stl.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/SmartContracts/Users/Users.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/SmartContracts/OnBoarding/OnBoarding.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/SmartContracts/Web3.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Announce/Announce.js",["102","103","104"],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Announce/UploadSTL.js",[],"/home/crow/Scrivania/AF2/newFrontEnd/src/Pages/Announce/StlRenderer.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":19,"nodeType":"111","messageId":"112","endLine":4,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":37,"column":36,"nodeType":"115","messageId":"116","endLine":37,"endColumn":38},{"ruleId":"109","severity":1,"message":"117","line":38,"column":24,"nodeType":"111","messageId":"112","endLine":38,"endColumn":29},{"ruleId":"109","severity":1,"message":"118","line":42,"column":11,"nodeType":"111","messageId":"112","endLine":42,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":30,"column":27,"nodeType":"115","messageId":"116","endLine":30,"endColumn":29},{"ruleId":"109","severity":1,"message":"119","line":10,"column":9,"nodeType":"111","messageId":"112","endLine":10,"endColumn":13},{"ruleId":"109","severity":1,"message":"120","line":12,"column":10,"nodeType":"111","messageId":"112","endLine":12,"endColumn":16},{"ruleId":"109","severity":1,"message":"121","line":12,"column":18,"nodeType":"111","messageId":"112","endLine":12,"endColumn":32},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'MakerNav' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'value' is assigned a value but never used.","'onlyHour' is assigned a value but never used.","'ipfs' is assigned a value but never used.","'volume' is assigned a value but never used.","'onChangeVolume' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]