{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/signin/userLoginCheck.js\";\nimport User from \"../../SmartContracts/Users/Users\";\nimport { Navigate } from \"react-router-dom\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function accountCheck(props) {\n  const user = new User();\n  const web3 = new Web3(window.ethereum);\n  const accounts = await web3.eth.getAccounts().then(res => {\n    if (!res) return null;\n  });\n  console.log(accounts);\n  if (!accounts) /*#__PURE__*/_jsxDEV(Navigate, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n  let res = await user.isUser();\n}\n;","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/signin/userLoginCheck.js"],"names":["User","Navigate","Web3","accountCheck","props","user","web3","window","ethereum","accounts","eth","getAccounts","then","res","console","log","pathname","state","from","isUser"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,kCAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAGA,OAAO,eAAeC,YAAf,CAA4BC,KAA5B,EAAkC;AACrC,QAAMC,IAAI,GAAG,IAAIL,IAAJ,EAAb;AACA,QAAMM,IAAI,GAAG,IAAIJ,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAb;AACA,QAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,GAAuBC,IAAvB,CAA6BC,GAAD,IAAO;AACtD,QAAG,CAACA,GAAJ,EACI,OAAO,IAAP;AAAY,GAFG,CAAvB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,MAAG,CAACA,QAAJ,EACI,qBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAACO,MAAAA,QAAQ,EAAC,QAAV;AAAmBC,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAACd;AAAN;AAAzB;AAAd;AAAA;AAAA;AAAA;AAAA;AACA,MAAIS,GAAG,GAAC,MAAMR,IAAI,CAACc,MAAL,EAAd;AAGP;AAAA","sourcesContent":["import User from \"../../SmartContracts/Users/Users\";\nimport { Navigate } from \"react-router-dom\";\nimport Web3 from 'web3';\n\n\nexport async function accountCheck(props){\n    const user = new User();\n    const web3 = new Web3(window.ethereum);\n    const accounts = await web3.eth.getAccounts().then((res)=>{\n        if(!res)\n            return null});\n\n    console.log(accounts)\n    if(!accounts)\n        <Navigate to={{pathname:'/login',state:{from:props}}}/>\n        let res=await user.isUser()\n\n\n};"]},"metadata":{},"sourceType":"module"}