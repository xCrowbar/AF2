{"ast":null,"code":"var _jsxFileName = \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from \"react\"; //import Web3 from \"web3\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({});\nexport function UsercheckProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [account, setAccount] = useState('prova');\n\n  async function checkAccount() {\n    if (window.ethereum) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      return accounts;\n    }\n  }\n\n  useEffect(() => {}, [account]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      account,\n      setAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsercheckProvider, \"iyaQor0GX87P76QwZ4IxDNC5XsU=\");\n\n_c = UsercheckProvider;\nexport default UserContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsercheckProvider\");","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/component/Context/userLogContext.js"],"names":["React","useEffect","useState","createContext","UserContext","UsercheckProvider","children","account","setAccount","checkAccount","window","ethereum","accounts","request","method"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,aAAnC,QAAwD,OAAxD,C,CACA;;;AAEA,MAAMC,WAAW,gBAACD,aAAa,CAAC,EAAD,CAA/B;AAEA,OAAO,SAASE,iBAAT,OAAsC;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,OAAD,CAAtC;;AAED,iBAAeO,YAAf,GAA6B;AACxB,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC7CC,QAAAA,MAAM,EAAE;AADqC,OAAxB,CAAvB;AAGA,aAAOF,QAAP;AAEP;AACJ;;AACGX,EAAAA,SAAS,CAAC,MAAI,CACb,CADQ,EACP,CAACM,OAAD,CADO,CAAT;AAGA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAACA,MAAAA,OAAD;AAASC,MAAAA;AAAT,KADX;AAAA,cAEKF;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GArBeD,iB;;KAAAA,iB;AAuBhB,eAAeD,WAAf","sourcesContent":["import React, { useEffect,useState,createContext } from \"react\";\n//import Web3 from \"web3\";\n\nconst UserContext=createContext({});\n\nexport function UsercheckProvider({children}){\n    const [account, setAccount] = useState('prova');\n\n   async function checkAccount(){\n        if (window.ethereum) {\n            const accounts = await window.ethereum.request({\n              method: \"eth_accounts\",\n            });\n            return accounts;\n            \n    }\n}\n    useEffect(()=>{\n    },[account])\n\n    return (\n        <UserContext.Provider\n            value={{account,setAccount}}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContext;"]},"metadata":{},"sourceType":"module"}