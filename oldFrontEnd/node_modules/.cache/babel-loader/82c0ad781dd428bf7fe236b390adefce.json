{"ast":null,"code":"let designes = [{\n  name: \"cubo\",\n  path: \"images/cube.png\",\n  fileName: 'Cube_3d.stl',\n  info: \"Questo è un design di test per la stampa 3D di un cubo\"\n}, {\n  name: \"cilindro\",\n  path: \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/cilindro\",\n  fileName: \"Cilindro.stl\",\n  info: \"Questo è un design di test per la stampa 3D di un cilindro\"\n}, {\n  name: \"Bunny\",\n  path: \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/Bunny.png\",\n  fileName: \"Bunny.stl\",\n  info: \"Questo è un design di test per la stampa 3D di un coniglio\"\n}, {\n  name: \"Portachiavi\",\n  path: \"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/portachiavi_unime.stl\",\n  fileName: \"portachiavi_unime.stl\",\n  info: \"Questo è un design di test per la stampa 3D di un portachiavi unime\"\n}];\nlet myPrinters = {\n  printers: [{\n    address: \"192.168.8.240\",\n    name: \"testPrinter-1\"\n  }, {\n    address: \"192.168.8.238\",\n    name: \"testPrinter-2\"\n  }, {\n    address: \"192.168.8.239\",\n    name: \"testPrinter-3\"\n  }]\n};\nexport function getPrinters() {\n  return myPrinters;\n}\nexport function getPrinter(val) {\n  return myPrinters.find(elem => elem.address === val);\n}\nexport function getDesignes() {\n  return designes;\n}\nexport function getDesigne(designe) {\n  return designes.find(val => val.name === designe);\n}","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/data/data.js"],"names":["designes","name","path","fileName","info","myPrinters","printers","address","getPrinters","getPrinter","val","find","elem","getDesignes","getDesigne","designe"],"mappings":"AAAA,IAAIA,QAAQ,GAAC,CAAC;AACVC,EAAAA,IAAI,EAAC,MADK;AAEVC,EAAAA,IAAI,EAAC,iBAFK;AAGVC,EAAAA,QAAQ,EAAC,aAHC;AAIVC,EAAAA,IAAI,EAAC;AAJK,CAAD,EAMb;AAACH,EAAAA,IAAI,EAAC,UAAN;AACAC,EAAAA,IAAI,EAAC,2EADL;AAEAC,EAAAA,QAAQ,EAAC,cAFT;AAGAC,EAAAA,IAAI,EAAC;AAHL,CANa,EAWb;AAACH,EAAAA,IAAI,EAAC,OAAN;AACAC,EAAAA,IAAI,EAAC,4EADL;AAEAC,EAAAA,QAAQ,EAAC,WAFT;AAGAC,EAAAA,IAAI,EAAC;AAHL,CAXa,EAeb;AAACH,EAAAA,IAAI,EAAC,aAAN;AACAC,EAAAA,IAAI,EAAC,wFADL;AAEAC,EAAAA,QAAQ,EAAC,uBAFT;AAGAC,EAAAA,IAAI,EAAC;AAHL,CAfa,CAAb;AAsBA,IAAIC,UAAU,GAAC;AAACC,EAAAA,QAAQ,EAAC,CACrB;AACAC,IAAAA,OAAO,EAAC,eADR;AAEAN,IAAAA,IAAI,EAAC;AAFL,GADqB,EAKzB;AACIM,IAAAA,OAAO,EAAC,eADZ;AAEIN,IAAAA,IAAI,EAAC;AAFT,GALyB,EAUzB;AACIM,IAAAA,OAAO,EAAC,eADZ;AAEIN,IAAAA,IAAI,EAAC;AAFT,GAVyB;AAAV,CAAf;AAiBA,OAAO,SAASO,WAAT,GAAsB;AACzB,SAAOH,UAAP;AACH;AAED,OAAO,SAASI,UAAT,CAAoBC,GAApB,EAAwB;AAC3B,SAAOL,UAAU,CAACM,IAAX,CAAiBC,IAAD,IAAQA,IAAI,CAACL,OAAL,KAAeG,GAAvC,CAAP;AACH;AAID,OAAO,SAASG,WAAT,GAAsB;AACzB,SAAOb,QAAP;AACH;AAED,OAAO,SAASc,UAAT,CAAoBC,OAApB,EAA4B;AAC/B,SAAOf,QAAQ,CAACW,IAAT,CAAeD,GAAD,IAAOA,GAAG,CAACT,IAAJ,KAAWc,OAAhC,CAAP;AACH","sourcesContent":["let designes=[{\n    name:\"cubo\",\n    path:\"images/cube.png\",\n    fileName:'Cube_3d.stl',\n    info:\"Questo è un design di test per la stampa 3D di un cubo\"\n},\n{name:\"cilindro\",\npath:\"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/cilindro\",\nfileName:\"Cilindro.stl\",\ninfo:\"Questo è un design di test per la stampa 3D di un cilindro\"\n},\n{name:\"Bunny\",\npath:\"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/Bunny.png\",\nfileName:\"Bunny.stl\",\ninfo:\"Questo è un design di test per la stampa 3D di un coniglio\"},\n{name:\"Portachiavi\",\npath:\"/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/images/portachiavi_unime.stl\",\nfileName:\"portachiavi_unime.stl\",\ninfo:\"Questo è un design di test per la stampa 3D di un portachiavi unime\"\n}\n]\n\nlet myPrinters={printers:[\n    {\n    address:\"192.168.8.240\",\n    name:\"testPrinter-1\"\n},\n{\n    address:\"192.168.8.238\",\n    name:\"testPrinter-2\"\n},\n\n{\n    address:\"192.168.8.239\",\n    name:\"testPrinter-3\"\n}]}\n\n\n\nexport function getPrinters(){\n    return myPrinters;\n}\n\nexport function getPrinter(val){\n    return myPrinters.find((elem)=>elem.address===val);\n}\n\n\n\nexport function getDesignes(){\n    return designes;\n}\n\nexport function getDesigne(designe){\n    return designes.find((val)=>val.name===designe);\n}"]},"metadata":{},"sourceType":"module"}