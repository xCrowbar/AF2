{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _Three = require('./Three');\n\nvar _Three2 = _interopRequireDefault(_Three);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar OrbitControls = require('three-orbit-controls')(_Three2.default);\n\nvar DIRECTIONAL_LIGHT = 'directionalLight';\n\nvar Paint = function () {\n  function Paint() {\n    _classCallCheck(this, Paint);\n\n    this.loader = new _Three2.default.STLLoader();\n    this.scene = new _Three2.default.Scene();\n    this.renderer = new _Three2.default.WebGLRenderer({\n      antialias: true\n    });\n    this.reqNumber = 0;\n  }\n\n  _createClass(Paint, [{\n    key: 'init',\n    value: function init(context) {\n      this.component = context;\n      this.width = context.props.width;\n      this.height = context.props.height;\n      this.modelColor = context.props.modelColor;\n      this.backgroundColor = context.props.backgroundColor;\n      this.orbitControls = context.props.orbitControls;\n      this.rotate = context.props.rotate;\n      this.cameraX = context.props.cameraX;\n      this.cameraY = context.props.cameraY;\n      this.cameraZ = context.props.cameraZ;\n      this.rotationSpeeds = context.props.rotationSpeeds;\n      this.lights = context.props.lights;\n      this.lightColor = context.props.lightColor;\n      this.model = context.props.model;\n\n      if (this.mesh !== undefined) {\n        this.scene.remove(this.mesh);\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n        this.scene.remove(this.grid);\n      }\n\n      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\n      if (directionalLightObj) {\n        this.scene.remove(directionalLightObj);\n      }\n\n      if (this.animationRequestId) {\n        cancelAnimationFrame(this.animationRequestId);\n      } //Detector.addGetWebGLMessage();\n\n\n      this.distance = 10000; // lights processing\n\n      var hasMultipleLights = this.lights.reduce(function (acc, item) {\n        return acc && Array.isArray(item);\n      }, true);\n\n      if (hasMultipleLights) {\n        this.lights.forEach(this.addLight.bind(this));\n      } else {\n        this.addLight(this.lights);\n      }\n\n      this.reqNumber += 1;\n      this.addSTLToScene(this.reqNumber);\n    }\n  }, {\n    key: 'addLight',\n    value: function addLight(lights) {\n      var _directionalLight$pos;\n\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var directionalLight = new _Three2.default.DirectionalLight(this.lightColor);\n\n      (_directionalLight$pos = directionalLight.position).set.apply(_directionalLight$pos, _toConsumableArray(lights));\n\n      directionalLight.name = DIRECTIONAL_LIGHT + index;\n      directionalLight.position.normalize();\n      this.scene.add(directionalLight);\n    }\n  }, {\n    key: 'loadSTLFromUrl',\n    value: function loadSTLFromUrl(url, reqId) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.loader.crossOrigin = '';\n\n        _this.loader.loadFromUrl(url, function (geometry) {\n          if (_this.reqNumber !== reqId) {\n            return;\n          }\n\n          resolve(geometry);\n        });\n      });\n    }\n  }, {\n    key: 'loadFromFile',\n    value: function loadFromFile(file) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.loader.loadFromFile(file, function (geometry) {\n          resolve(geometry);\n        });\n      });\n    }\n  }, {\n    key: 'addSTLToScene',\n    value: function addSTLToScene(reqId) {\n      var _this3 = this;\n\n      var loadPromise = void 0;\n\n      if (typeof this.model === 'string') {\n        loadPromise = this.loadSTLFromUrl(this.model, reqId);\n      } else if (this.model instanceof ArrayBuffer) {\n        loadPromise = this.loadFromFile(this.model);\n      } else {\n        return Promise.resolve(null);\n      }\n\n      return loadPromise.then(function (geometry) {\n        // Calculate mesh noramls for MeshLambertMaterial.\n        geometry.computeFaceNormals();\n        geometry.computeVertexNormals(); // Center the object\n\n        geometry.center();\n        var material = new _Three2.default.MeshLambertMaterial({\n          overdraw: true,\n          color: _this3.modelColor\n        });\n\n        if (geometry.hasColors) {\n          material = new _Three2.default.MeshPhongMaterial({\n            opacity: geometry.alpha,\n            vertexColors: _Three2.default.VertexColors\n          });\n        }\n\n        _this3.mesh = new _Three2.default.Mesh(geometry, material); // Set the object's dimensions\n\n        geometry.computeBoundingBox();\n        _this3.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n        _this3.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n        _this3.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n        if (_this3.rotate) {\n          _this3.mesh.rotation.x = _this3.rotationSpeeds[0];\n          _this3.mesh.rotation.y = _this3.rotationSpeeds[1];\n          _this3.mesh.rotation.z = _this3.rotationSpeeds[2];\n        }\n\n        _this3.scene.add(_this3.mesh);\n\n        _this3.addCamera();\n\n        _this3.addInteractionControls();\n\n        _this3.addToReactComponent(); // Start the animation\n\n\n        _this3.animate();\n      });\n    }\n  }, {\n    key: 'addCamera',\n    value: function addCamera() {\n      // Add the camera\n      this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\n      if (this.cameraZ === null) {\n        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n      }\n\n      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n      this.scene.add(this.camera);\n      this.camera.lookAt(this.mesh);\n      this.renderer.set;\n      this.renderer.setSize(this.width, this.height);\n      this.renderer.setClearColor(this.backgroundColor, 1);\n    }\n  }, {\n    key: 'addInteractionControls',\n    value: function addInteractionControls() {\n      // Add controls for mouse interaction\n      if (this.orbitControls) {\n        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n        this.controls.enableKeys = false;\n        this.controls.addEventListener('change', this.orbitRender.bind(this));\n      }\n    }\n  }, {\n    key: 'addToReactComponent',\n    value: function addToReactComponent() {\n      // Add to the React Component\n      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n    }\n    /**\n     * Animate the scene\n     * @returns {void}\n     */\n\n  }, {\n    key: 'animate',\n    value: function animate() {\n      // note: three.js includes requestAnimationFrame shim\n      if (this.rotate) {\n        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n      }\n\n      if (this.orbitControls) {\n        this.controls.update();\n      }\n\n      this.render();\n    }\n    /**\n     * Render the scene after turning off the rotation\n     * @returns {void}\n     */\n\n  }, {\n    key: 'orbitRender',\n    value: function orbitRender() {\n      if (this.rotate) {\n        this.rotate = false;\n      }\n\n      this.render();\n    }\n    /**\n     * Deallocate Mesh, renderer context.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'clean',\n    value: function clean() {\n      if (this.mesh !== undefined) {\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n        this.scene.remove(this.mesh);\n        delete this.mesh;\n      }\n\n      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\n      if (directionalLightObj) {\n        this.scene.remove(directionalLightObj);\n      }\n\n      if (this.animationRequestId) {\n        cancelAnimationFrame(this.animationRequestId);\n      }\n\n      this.renderer.dispose();\n      this.renderer.forceContextLoss();\n    }\n    /**\n     * Render the scene\n     * @returns {void}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      if (this.mesh && this.rotate) {\n        this.mesh.rotation.x += this.rotationSpeeds[0];\n        this.mesh.rotation.y += this.rotationSpeeds[1];\n        this.mesh.rotation.z += this.rotationSpeeds[2];\n      }\n\n      this.renderer.render(this.scene, this.camera);\n    }\n  }]);\n\n  return Paint;\n}();\n\nexports.default = Paint;\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Three","require","_Three2","_interopRequireDefault","_reactDom","_reactDom2","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","OrbitControls","DIRECTIONAL_LIGHT","Paint","loader","STLLoader","scene","Scene","renderer","WebGLRenderer","antialias","reqNumber","init","context","component","width","height","modelColor","backgroundColor","orbitControls","rotate","cameraX","cameraY","cameraZ","rotationSpeeds","lights","lightColor","model","mesh","undefined","remove","geometry","dispose","material","grid","directionalLightObj","getObjectByName","animationRequestId","cancelAnimationFrame","distance","hasMultipleLights","reduce","acc","item","forEach","addLight","bind","addSTLToScene","_directionalLight$pos","index","arguments","directionalLight","DirectionalLight","position","set","apply","name","normalize","add","loadSTLFromUrl","url","reqId","_this","Promise","resolve","crossOrigin","loadFromUrl","loadFromFile","file","_this2","_this3","loadPromise","ArrayBuffer","then","computeFaceNormals","computeVertexNormals","center","MeshLambertMaterial","overdraw","color","hasColors","MeshPhongMaterial","opacity","alpha","vertexColors","VertexColors","Mesh","computeBoundingBox","xDims","boundingBox","max","x","min","yDims","y","zDims","z","rotation","addCamera","addInteractionControls","addToReactComponent","animate","camera","PerspectiveCamera","Math","lookAt","setSize","setClearColor","controls","findDOMNode","enableKeys","addEventListener","orbitRender","replaceChild","domElement","firstChild","requestAnimationFrame","update","render","clean","forceContextLoss","module"],"sources":["/home/crow/Scrivania/AF2/newFrontEnd/node_modules/stl-viewer/dist/Paint.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Three = require('./Three');\n\nvar _Three2 = _interopRequireDefault(_Three);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar OrbitControls = require('three-orbit-controls')(_Three2.default);\n\nvar DIRECTIONAL_LIGHT = 'directionalLight';\n\nvar Paint = function () {\n  function Paint() {\n    _classCallCheck(this, Paint);\n\n    this.loader = new _Three2.default.STLLoader();\n    this.scene = new _Three2.default.Scene();\n    this.renderer = new _Three2.default.WebGLRenderer({\n      antialias: true\n    });\n    this.reqNumber = 0;\n  }\n\n  _createClass(Paint, [{\n    key: 'init',\n    value: function init(context) {\n      this.component = context;\n      this.width = context.props.width;\n      this.height = context.props.height;\n      this.modelColor = context.props.modelColor;\n      this.backgroundColor = context.props.backgroundColor;\n      this.orbitControls = context.props.orbitControls;\n      this.rotate = context.props.rotate;\n      this.cameraX = context.props.cameraX;\n      this.cameraY = context.props.cameraY;\n      this.cameraZ = context.props.cameraZ;\n      this.rotationSpeeds = context.props.rotationSpeeds;\n      this.lights = context.props.lights;\n      this.lightColor = context.props.lightColor;\n      this.model = context.props.model;\n\n      if (this.mesh !== undefined) {\n        this.scene.remove(this.mesh);\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n        this.scene.remove(this.grid);\n      }\n      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n      if (directionalLightObj) {\n        this.scene.remove(directionalLightObj);\n      }\n\n      if (this.animationRequestId) {\n        cancelAnimationFrame(this.animationRequestId);\n      }\n\n      //Detector.addGetWebGLMessage();\n      this.distance = 10000;\n\n      // lights processing\n      var hasMultipleLights = this.lights.reduce(function (acc, item) {\n        return acc && Array.isArray(item);\n      }, true);\n      if (hasMultipleLights) {\n        this.lights.forEach(this.addLight.bind(this));\n      } else {\n        this.addLight(this.lights);\n      }\n\n      this.reqNumber += 1;\n      this.addSTLToScene(this.reqNumber);\n    }\n  }, {\n    key: 'addLight',\n    value: function addLight(lights) {\n      var _directionalLight$pos;\n\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var directionalLight = new _Three2.default.DirectionalLight(this.lightColor);\n      (_directionalLight$pos = directionalLight.position).set.apply(_directionalLight$pos, _toConsumableArray(lights));\n      directionalLight.name = DIRECTIONAL_LIGHT + index;\n      directionalLight.position.normalize();\n      this.scene.add(directionalLight);\n    }\n  }, {\n    key: 'loadSTLFromUrl',\n    value: function loadSTLFromUrl(url, reqId) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.loader.crossOrigin = '';\n        _this.loader.loadFromUrl(url, function (geometry) {\n          if (_this.reqNumber !== reqId) {\n            return;\n          }\n          resolve(geometry);\n        });\n      });\n    }\n  }, {\n    key: 'loadFromFile',\n    value: function loadFromFile(file) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.loader.loadFromFile(file, function (geometry) {\n          resolve(geometry);\n        });\n      });\n    }\n  }, {\n    key: 'addSTLToScene',\n    value: function addSTLToScene(reqId) {\n      var _this3 = this;\n\n      var loadPromise = void 0;\n      if (typeof this.model === 'string') {\n        loadPromise = this.loadSTLFromUrl(this.model, reqId);\n      } else if (this.model instanceof ArrayBuffer) {\n        loadPromise = this.loadFromFile(this.model);\n      } else {\n        return Promise.resolve(null);\n      }\n      return loadPromise.then(function (geometry) {\n        // Calculate mesh noramls for MeshLambertMaterial.\n        geometry.computeFaceNormals();\n        geometry.computeVertexNormals();\n\n        // Center the object\n        geometry.center();\n\n        var material = new _Three2.default.MeshLambertMaterial({\n          overdraw: true,\n          color: _this3.modelColor\n        });\n\n        if (geometry.hasColors) {\n          material = new _Three2.default.MeshPhongMaterial({\n            opacity: geometry.alpha,\n            vertexColors: _Three2.default.VertexColors\n          });\n        }\n\n        _this3.mesh = new _Three2.default.Mesh(geometry, material);\n        // Set the object's dimensions\n        geometry.computeBoundingBox();\n        _this3.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n        _this3.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n        _this3.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n        if (_this3.rotate) {\n          _this3.mesh.rotation.x = _this3.rotationSpeeds[0];\n          _this3.mesh.rotation.y = _this3.rotationSpeeds[1];\n          _this3.mesh.rotation.z = _this3.rotationSpeeds[2];\n        }\n\n        _this3.scene.add(_this3.mesh);\n\n        _this3.addCamera();\n        _this3.addInteractionControls();\n        _this3.addToReactComponent();\n\n        // Start the animation\n        _this3.animate();\n      });\n    }\n  }, {\n    key: 'addCamera',\n    value: function addCamera() {\n      // Add the camera\n      this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\n      if (this.cameraZ === null) {\n        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n      }\n\n      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\n      this.scene.add(this.camera);\n\n      this.camera.lookAt(this.mesh);\n\n      this.renderer.set;\n      this.renderer.setSize(this.width, this.height);\n      this.renderer.setClearColor(this.backgroundColor, 1);\n    }\n  }, {\n    key: 'addInteractionControls',\n    value: function addInteractionControls() {\n      // Add controls for mouse interaction\n      if (this.orbitControls) {\n        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n        this.controls.enableKeys = false;\n        this.controls.addEventListener('change', this.orbitRender.bind(this));\n      }\n    }\n  }, {\n    key: 'addToReactComponent',\n    value: function addToReactComponent() {\n      // Add to the React Component\n      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n    }\n\n    /**\n     * Animate the scene\n     * @returns {void}\n     */\n\n  }, {\n    key: 'animate',\n    value: function animate() {\n      // note: three.js includes requestAnimationFrame shim\n      if (this.rotate) {\n        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n      }\n\n      if (this.orbitControls) {\n        this.controls.update();\n      }\n      this.render();\n    }\n\n    /**\n     * Render the scene after turning off the rotation\n     * @returns {void}\n     */\n\n  }, {\n    key: 'orbitRender',\n    value: function orbitRender() {\n      if (this.rotate) {\n        this.rotate = false;\n      }\n\n      this.render();\n    }\n\n    /**\n     * Deallocate Mesh, renderer context.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'clean',\n    value: function clean() {\n      if (this.mesh !== undefined) {\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n        this.scene.remove(this.mesh);\n        delete this.mesh;\n      }\n      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n      if (directionalLightObj) {\n        this.scene.remove(directionalLightObj);\n      }\n\n      if (this.animationRequestId) {\n        cancelAnimationFrame(this.animationRequestId);\n      }\n      this.renderer.dispose();\n      this.renderer.forceContextLoss();\n    }\n\n    /**\n     * Render the scene\n     * @returns {void}\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      if (this.mesh && this.rotate) {\n        this.mesh.rotation.x += this.rotationSpeeds[0];\n        this.mesh.rotation.y += this.rotationSpeeds[1];\n        this.mesh.rotation.z += this.rotationSpeeds[2];\n      }\n\n      this.renderer.render(this.scene, this.camera);\n    }\n  }]);\n\n  return Paint;\n}();\n\nexports.default = Paint;\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script"}