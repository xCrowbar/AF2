{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler, config) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n\n  if (config === void 0) {\n    config = defaultThrottleConfig;\n  }\n\n  return function (source) {\n    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n  };\n}\n\nvar ThrottleTimeOperator = /*@__PURE__*/function () {\n  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n\n  ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n  };\n\n  return ThrottleTimeOperator;\n}();\n\nvar ThrottleTimeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ThrottleTimeSubscriber, _super);\n\n  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.duration = duration;\n    _this.scheduler = scheduler;\n    _this.leading = leading;\n    _this.trailing = trailing;\n    _this._hasTrailingValue = false;\n    _this._trailingValue = null;\n    return _this;\n  }\n\n  ThrottleTimeSubscriber.prototype._next = function (value) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {\n        subscriber: this\n      }));\n\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  };\n\n  ThrottleTimeSubscriber.prototype._complete = function () {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  };\n\n  ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n    var throttled = this.throttled;\n\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  };\n\n  return ThrottleTimeSubscriber;\n}(Subscriber);\n\nfunction dispatchNext(arg) {\n  var subscriber = arg.subscriber;\n  subscriber.clearThrottle();\n}","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AAEA,SAASC,UAAT,QAAsB,eAAtB;AAEA,SAAyBC,KAAzB,QAAyB,oBAAzB;AAkFA,SAAMC,qBAAN,QAAgD,YAAhD;OACgC,2CAAgCC,MAAhC,EAAgC;AAChC;AAC9BC,aAAO,QAAP;AACD;;AAED;AACED;;;SACoB;AAAA,WAAwBE,2FAAxB;AAAwB;;;wBAExB,gBAAiB;AACrC,WAACC,oBAAD,CAACC,QAAD,EAACH,SAAD,EAACI,OAAD,EAACC,QAAD,EAAC;AAED;AACE,qBAAcL,SAAd;AAGD;AACH;AAAC;;AAODE;AAAwC,uDAAaI,UAAb,EAAa,aAAb,EAAa,cAAb,EAAa,YAAb,EAAa,aAAb;AAKtC,GALF;;SAKEJ;CApBqC;;0BAsBjB,gBAAwB;SACxB,WAAOK,wBAASC;;WAChBD,uBAAiBE;AAP7B,4BAAiB,IAAjB,EAA6BA,WAA7B,KAAmC,IAAnC;;AACAC;;AAQPA;AAESA;AACRA,SAAI,kBAAJ,GAAoB,KAApB;SACE,kBAAmB;;;;wBAGlB;QACF;UAAM;AACD,aAAKC,cAAL,GAAsBC,KAAtB;AACA,aAAKC,iBAAL,GAAc,IAAd;;;WAGFC,IAAK,iBAAiB,KAAKd,SAAL,CAAMe,QAAN,CAAMC,YAAN,EAAM,aAAN,EAAM;AAAAV;AAAA,OAAN;;UACtB,KAAKF;AACN;AACF,aACF;AAES;AACA,aAACS,iBAAD,GAAoB,IAApB;AACN;;;;wBAEK;QACL,KAAKA,mBAAY;AAClB;AACF;AAED,WACQ;AACF,uBAAWI,QAAX;;;;wBAGK,WAAcC,gBAAQ;iBACtB;;mBACN;AACD,eAASb,QAAT,IAAqB,KAAGQ,iBAAxB,EAAwB;AACpB,aAACJ,WAAD,CAAiBU,IAAjB,CAAmB,mBAAnB;AACA,aAACR,cAAD,GAAkB,IAAlB;AACL;AACF;;AACHS;AApDkD,WAoDjDC,MApDiD,CAoDjDD,SApDiD;AA0DzC,uBAAmC,IAAnC;AACC;AACR;;AACD;CAtD6C","names":["tslib_1","Subscriber","async","defaultThrottleConfig","config","scheduler","source","ThrottleTimeOperator","duration","leading","trailing","subscriber","ThrottleTimeSubscriber","_super","destination","_this","_trailingValue","value","_hasTrailingValue","add","schedule","dispatchNext","complete","clearThrottle","next","throttled","remove"],"sources":["../../../src/internal/operators/throttleTime.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}