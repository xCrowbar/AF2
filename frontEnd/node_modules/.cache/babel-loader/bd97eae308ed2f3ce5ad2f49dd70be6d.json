{"ast":null,"code":"import Web3Istance from \"../Web3\";\nimport UserABI from '../../ABIs/User.json';\nexport default class User extends Web3Istance {\n  constructor() {\n    super();\n    let ABIScheduling = UserABI.abi;\n    let ContractNetworks = UserABI.networks;\n    let contractAddress = ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\n    this.contract = new this.web3.eth.Contract(ABIScheduling, contractAddress);\n    console.log(`Indirizzo Contratto ----- ` + contractAddress);\n  }\n\n  async addCaller(position, username) {\n    let account = await this.web3.checkIfWalletIsConnected();\n    this.contract.methods.addCaller(this.utils.fromAscii(JSON.stringify(position)), this.utils.fromAscii(username)).send({\n      from: account\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/mike/Scrivania/provaFrontEnd/af2_front_end_test/src/SmartContracts/Users/Users.js"],"names":["Web3Istance","UserABI","User","constructor","ABIScheduling","abi","ContractNetworks","networks","contractAddress","Object","keys","length","address","contract","web3","eth","Contract","console","log","addCaller","position","username","account","checkIfWalletIsConnected","methods","utils","fromAscii","JSON","stringify","send","from"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,WAAnB,CAA8B;AACzCG,EAAAA,WAAW,GAAE;AACT;AACA,QAAIC,aAAa,GAAGH,OAAO,CAACI,GAA5B;AACA,QAAIC,gBAAgB,GAAGL,OAAO,CAACM,QAA/B;AACA,QAAIC,eAAe,GAACF,gBAAgB,CAACG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BG,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BK,MAA9B,GAAuC,CAArE,CAAD,CAAhB,CAA0FC,OAA9G;AACA,SAAKC,QAAL,GAAc,IAAI,KAAKC,IAAL,CAAUC,GAAV,CAAcC,QAAlB,CAA2BZ,aAA3B,EAAyCI,eAAzC,CAAd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAa,4BAAD,GAA8BV,eAA1C;AACC;;AAGc,QAATW,SAAS,CAACC,QAAD,EAAUC,QAAV,EAAmB;AAC9B,QAAIC,OAAO,GAAC,MAAM,KAAKR,IAAL,CAAUS,wBAAV,EAAlB;AACA,SAAKV,QAAL,CAAcW,OAAd,CAAsBL,SAAtB,CAAgC,KAAKM,KAAL,CAAWC,SAAX,CAAqBC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAArB,CAAhC,EAA+E,KAAKK,KAAL,CAAWC,SAAX,CAAqBL,QAArB,CAA/E,EACKQ,IADL,CACU;AAACC,MAAAA,IAAI,EAACR;AAAN,KADV;AAEH;;AAfoC","sourcesContent":["import Web3Istance from \"../Web3\";\nimport UserABI from '../../ABIs/User.json'\n\nexport default class User extends Web3Istance{\n    constructor(){\n        super();\n        let ABIScheduling = UserABI.abi;\n        let ContractNetworks = UserABI.networks;\n        let contractAddress=ContractNetworks[Object.keys(ContractNetworks)[Object.keys(ContractNetworks).length - 1]].address;\n        this.contract=new this.web3.eth.Contract(ABIScheduling,contractAddress);\n        console.log(`Indirizzo Contratto ----- `+ contractAddress);  \n        }\n    \n\n        async addCaller(position,username){\n            let account=await this.web3.checkIfWalletIsConnected();\n            this.contract.methods.addCaller(this.utils.fromAscii(JSON.stringify(position)),this.utils.fromAscii(username))\n                .send({from:account})\n        }\n}"]},"metadata":{},"sourceType":"module"}